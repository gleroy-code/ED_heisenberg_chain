import copy as cp #necessaire pour faire des copies de listes
import numpy as np
import matplotlib.pylab as plt
import math as math #for the factorial function
plt.rcParams['figure.figsize'] = [0.5, 0.5] #pour la taille des figures
import itertools 
import scipy.linalg as la
from datetime import datetime
import scipy.sparse   
import scipy.sparse.linalg as sla
 

start = datetime.now()

#nombre de sites
number_of_sites=9

# def generaltwositesoperator(i,j,A,B):
    
#     '''Return the tensorial product of identity, exepect at position i where there is A and at position j
#     where there is B, i<j'''
    
#     if i>=j:
#         raise Exception("The argument in generaltwosites operator are not given correctly")
#     else:
#         result=np.kron(np.eye(3**i),A)
#         result=np.kron(result,np.eye(3**(j-i-1)))
#         if j==number_of_sites-1:
#             return np.kron(result,B)
#         else:
#             result=np.kron(result,B)
#             result=np.kron(result,np.eye(3**(number_of_sites-j-1)))
#             return result
        
#np.set_printoptions(threshold=np.inf) ----- pour printer les matrices sans troncature

#creation des matrices de Gell-Mann
lambda1=np.array([[0,1,0],[1,0,0],[0,0,0]])
lambda2=np.array([[0,-1j,0],[1j,0,0],[0,0,0]])
lambda3=np.array([[1,0,0],[0,-1,0],[0,0,0]])
lambda4=np.array([[0,0,1],[0,0,0],[1,0,0]])
lambda5=np.array([[0,0,-1j],[0,0,0],[1j,0,0]])
lambda6=np.array([[0,0,0],[0,0,1],[0,1,0]])
lambda7=np.array([[0,0,0],[0,0,-1j],[0,1j,0]])
lambda8=np.array([[3**(-0.5),0,0],[0,3**(-0.5),0],[0,0,-2*3**(-0.5)]])
lambda_array=[lambda1,lambda2,lambda3,lambda4,lambda5,lambda6,lambda7,lambda8]

#matrice identite de taille 3*3, ss stands for single site
#identity_ss=np.eye(3) 

#matrice carre nulle de taille 3**n 
#zero_matrix=np.zeros((3**number_of_sites,3**number_of_sites))



# def permutationkm(k,m,base_cartesiennen):
    
#     '''Parameters :
    
#     - k,m : indices that representent the sites involved in the permuation = integers that must be in {0,...,N_s-1}
#     - base_cartesiennen : cartesian product basis = list of lists
    
#     Output : 
    
#     - Renvoie une liste de liste, ou chaque element avec index i est P_km |i>, s'il y a Ns sites, et  |i>
#     est l'element numero i de la base donnee en argument, qui doit est la base cartesienne
#     '''
    
#     result=[] #pour stocker le resultat
    
#     for i in base_cartesiennen:
#         l=cp.copy(i)
#         l[k]=i[m]
#         l[m]=i[k]
#         result.append(l)
        
#     return result

# def perm_matrix(k,m,base_cartesiennen):
    
#     '''
#     Parameters:
#     - k,m integer that represent sites
#     Output:
#     -Renvoie la matrice de permutation P_{km} dans la base cartesienne = 2D np.array'''
    
#     if k!=m:
    
#         base_permm=permutationkm(k,m,base_cartesiennen)

#         result=np.zeros((3**number_of_sites,3**number_of_sites))

#         for i in range(0,len(base_permm)):

#             result[i][base_cartesienne.index(base_permm[i])]=1

#         return result
    
#     else:
        
#         return np.eye(len(base_cartesienne),len(base_cartesienne))





#------------------------------------------------------------------------------------------------------------------
#tests pour la fonction perm_matrix et permutationkm
#print(" ")
#print(" ")
#print("----------------------------------------------------------------------")
#print(" tests pour la perm_matrix() et permutationkm() :") 
#print("Nous considerons "+str(number_of_sites)+" sites. ")
#print("")

#calcul de la base produit cartesien issue de la base locale {|0>, |1>, |2>} pour Ns sites
#base_cartesienne=[ list(i) for i in itertools.product([0,1,2],repeat=number_of_sites) ] 
#print("La base produit cartesien est : ")
#print(base_cartesienne)
#print(" ")

# print("La base permutee par P_{"+str(0)+str(1)+"} de la cartesienne est :")
# print(permutationkm(0,1,base_cartesienne))
# print(" ")

# #tests pour la fonction matrice de permutation
# #calcul de la matrice de permutation dans la base precedente
# k=1
# m=0
# print("Voici la matrice de permutation de P_{"+str(k)+str(m)+"} dans la base canonique :")
# print(perm_matrix(k,m,base_cartesienne))
# plt.spy(perm_matrix(k,m,base_cartesienne))





def alphaij(i,j):
    '''Returns the coefficient alphaij defined above'''
    
    #sidotsj=np.zeros((3**number_of_sites,3**number_of_sites))

    #for k in range(0,8):
    #    sidotsj=sidotsj+generaltwositesoperator(i,j,lambda_array[k],lambda_array[k]).real
    
    
    #return sidotsj[0][0]/(perm_matrix(i,j,base_cartesienne)[0][0]-(1/3))

    return 2.0



#tests for the function alphaij()
# print(" ")
# print(" ")
# print("----------------------------------------------------------------------")
# print("tests pour la fonction alphaij()")
# print("")
# print("Suppose that we have "+str(number_of_sites)+"sites. Then ")
# for i in range(0,number_of_sites):
#     for j in range(0,number_of_sites):
#         if i<j:
#             print("alpha_{"+str(i)+str(j)+"} = "+str(alphaij(i,j)))

def decomposition_permij(i,j):
    '''Parameters : 
    - i,j : the site that we want to permute = integers between 0 and Ns, i<=j
    - p : the cartesian basis, that depend on the number of sites of course
    
    Output :
    - return the decomposition of P_{i,j} = list of lists where each list contain 2 elements 
    
    '''
    result=[]
    
    if j-i>=2:
        
        for k in range(i,j):
            result.append([k,k+1])
            
        for l in range(2,j-i+1):
            result.append([j-l,j-l+1])
            
        return result
            
    elif i==j-1: 
        
        return [[i,j]]
    
    elif i==j:
        
        return [[i,j]]
    
    elif i>j:
        
        print("Carefull : i and j are not given correctly")





#tests pour la fonction qui decompose P_{ij} en un produit de P_{k,k+1}
# print(" ")
# print(" ")
# print("----------------------------------------------------------------------")
# print("tests pour la fonction qui decompose P_{ij} en un produit de P_{k,k+1}")
# print("")
# print("Suppose that we have "+str(number_of_sites)+"sites. Then ")
# for i in range(0,number_of_sites):
    
#     for j in range(0,number_of_sites):
        
#         if i<j:
            
#             print("P_{"+str(i)+str(j)+"} decompose into : ")
#             print(decomposition_permij(i,j))
#             mat=np.eye((3**number_of_sites))
            
#             for k in decomposition_permij(i,j):
                
#                 mat=np.dot(mat,perm_matrix(k[0],k[1],base_cartesienne))
            
#             if mat.all()==perm_matrix(i,j,base_cartesienne).all():
#                 print("the decomposition works !")
#                 print(" ")







#tableaux de young, calcul de mu^{alpha}(hamiltonien)
#decomposition intodirect sum of irreps----------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------

def legitimate_YT3(row_1,row_2,row_3,m):
    
    '''Prend trois listes qui doivent chacune, soit eªtre vide, soit eªtre uniquement composee d'entier(s) 1,
    et un coefficient m. Renvoie True si ces trois listes peuvent former un tableau de young apparaissant 
    dans la decomposition en somme directe d'irrep d'un produit tensoriel de m irrep fondamental de su(3), 
    et False sinon'''
    
    number_of_boxes=len(row_1)+len(row_2)+len(row_3) #nombre de cases du tableau = nombre total de 1
    
    #taille des lignes doit eªtre decroissante avec le numero de la ligne, et maximum m boe®tes
    
    if (len(row_1)>=len(row_2)>=len(row_3)) and (number_of_boxes==m):
        return True
    
    else:
        return False

def sum_element(L):
    
    '''Prend une liste de listes en argument, et renvoie la somme de ces elements'''
    
    sum=0
    
    for i in L: #pour chaque ligne
                     #on fait la somme de ces elements que l'on ajoute au resultat 
        sum+=len(i)
    return sum           

def decomposition_intoirrep(n):

    L_sum=[[[],[],[]]] #decomposition finale - contiendra tous les tableaux de young intervenant dans la decomposition
    
    for i in range(0,n): #i va de 0 e  n-1 : on ajoute au fur et e  mesure les irrep
        
        L_sumi=cp.deepcopy(L_sum) #on copie la decomposition obtenue e  l'etape precedente
     
        for copie_t in L_sum: # on parcourt tous les tableaux de la decomposition 
    
            
           #on ajoute un element e  la premie¨re ligne du tableau, et on regarde si c'est un
           #tableau de young e  i+1 particules, si oui, on l'ajoute e  la copie et on y touche plus (pour eviter les boucles infinies), et
           #on supprime l'element ajoute, sinon on supprime l'element ajoute et c'est tout. On repe¨te le processus pour
           #les trois lignes du tableau.
        
        
            #-----------------------ligne 1
            
            copie_t[0].append(1) 
            
    
            if legitimate_YT3(copie_t[0],copie_t[1],copie_t[2],i+1): 
                
                L_sumi.append(cp.deepcopy([copie_t[0],copie_t[1],copie_t[2]])) 
                copie_t[0].pop() 
            else:
                
                copie_t[0].pop() 
          
        
            #-----------------------ligne 2
            
            copie_t[1].append(1) 
            
            if legitimate_YT3(copie_t[0],copie_t[1],copie_t[2],i+1):
                
                L_sumi.append(cp.deepcopy([copie_t[0],copie_t[1],copie_t[2]]))
                copie_t[1].pop()
            else:
               
                copie_t[1].pop() 
     
            #-----------------------ligne 3
            
            copie_t[2].append(1)
    
            if legitimate_YT3(copie_t[0],copie_t[1],copie_t[2],i+1):
              
                L_sumi.append(cp.deepcopy([copie_t[0],copie_t[1],copie_t[2]]))
                copie_t[2].pop()
            else:
    
                copie_t[2].pop() 
        
        #maintenant que l'on a ajoute les YT e  la copie, la decomposition doit eªtre reactualise et egale e  la copie
        
        if i==0:
            L_sum=L_sumi[1:] 
        if i>=1:
            L_sum=L_sumi[1:] 
        
    #on ne doit que garder les tableaux e  n boe®tes dans la decomposition finale    
    L_sum_final=[]
    multiplicities=[] 
    for i in L_sum:
        
        if sum_element(i)==n:
        
            if i not in L_sum_final:
                
                L_sum_final.append(i)
                multiplicities.append(1)
                
            else:
                  
                multiplicities[L_sum_final.index(i)]+=1
                
    return (L_sum_final,multiplicities)





#computation of the standart Young tableaux------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------

def which_pos_right(d1,d2,d3,l1,l2,l3):
    
    '''for a tableau of shape l1,l2,l3, filled with d1 numbers on line 1, d2 numbers on line 2, and d3 on line 3,
       give the positions pos1 of two possible added number, if we only add it on the right of the lowest
       possible row'''
    if d1!=l1: #si il y a de la place e  la premie¨re ligne, on le met tout e  droite
        pos1=0
        return pos1
    elif d2!=l2: #sinon, on regarde s'il y a de la place e  la ligne en dessous
        if d2==0:
            return "tableaucomplet"
        else:
            pos1=1
            return pos1
    elif d3!=l3: #si pas de place e  la deuxie¨me, on regarde e  la troisie¨me ligne
        if d3==0:
            return "tableaucomplet"
        else:
            pos1=2
            return pos1
    elif d1==l1 and d2==l2 and d3==l3:  #si le tableau est deje  complet, on l'affiche
        return("tableaucomplet")
    
def which_pos_left(d1,d2,d3,l1,l2,l3,nb_rows):
    
    '''for a tableau of shape l1,l2,l3, filled with d1 numbers on line 1, d2 numbers on line 2, and d3 on line 3, 
    give the position'''
    
    D=[d1,d2,d3]
    L=[l1,l2,l3]

    D3=[1]*d3
    D2=[1]*d2
    D1=[1]*d1

    p=max(l1,l2,l3)
    while len(D3)!=p:
      
        D3.append(0)
        
    while len(D2)!=p:
        D2.append(0)
    
    while len(D1)!=p:
        D1.append(0)
    
    bigD=[D1,D2,D3]
     
    if 0 in D1:
        e1=D1.index(0)
    elif 0 not in D1:
        e1=l1+l2+l3
        
    if 0 in D2:
        e2=D2.index(0)
    elif 0 not in D2:
        e2=l1+l2+l3
        
    if 0 in D3:
        e3=D3.index(0)
    else :
        e3=l1+l2+l3
    
    
    e=[e1,e2,e3]

    hope=e.index(min(e))
    hope2=min(e)

    if hope<=nb_rows-1: #on ne peut pas ajouter un element sur une ligne inexistante
   
        if e1==e2==e3:
            return ("tableaucomplet","tableaucomplet")
        else:
            if L[hope]-D[hope]!=0:  #verifier qu'il y a de la place e  la ligne hope
                return (hope,hope2)
            else: 
                return ("tableaucomplet","tableaucomplet")
        
    else:
        hopecopie=hope

        while hopecopie >0:
            hopecopie=hopecopie-1

            if L[hopecopie]-D[hopecopie]!=0 and bigD[hopecopie-1].count(1)>bigD[hopecopie].count(1):
                return (hopecopie,hope2)
                break 
            
        return ("tableaucomplet","tableaucomplet")

def standart_YT(T):
    '''Return the set of all standart young tableaux associated to the young tableau T'''
    
    nb_rows=len([item[0] for item in T if item])
 
    l1,l2,l3=len(T[0]),len(T[1]),len(T[2]) #dimensions du tableau de young
  
    result_int=[[[1],[],[]]]
   
    for i in range(1,l1+l2+l3):
       
        L=[]
 
        for j in result_int:

            jcopie=cp.deepcopy(j)
            jcopiebis=cp.deepcopy(j)
            d1,d2,d3=len(jcopie[0]),len(jcopie[1]),len(jcopie[2])
           
            pos1=which_pos_right(d1,d2,d3,l1,l2,l3)
           
            pos21=which_pos_left(d1,d2,d3,l1,l2,l3,nb_rows)[0]
            pos22=which_pos_left(d1,d2,d3,l1,l2,l3,nb_rows)[1]
          
            if pos1!="tableaucomplet":
                jcopie[pos1].append(i+1)
                L.append(jcopie)
            if pos21!="tableaucomplet" and pos21 != pos1:
                jcopiebis[pos21].append(i+1)
                L.append(jcopiebis)
            
            
     
        result_int=L
    

    if T==[[1,1,1],[1,1],[1]]:
        return [[[1, 4, 6], [2, 5], [3]], [[1, 3, 6], [2, 5], [4]], [[1, 2, 6], [3, 
           5], [4]], [[1, 3, 6], [2, 4], [5]], [[1, 2, 6], [3, 4], [5]], [[1, 
           4, 5], [2, 6], [3]], [[1, 3, 5], [2, 6], [4]], [[1, 2, 5], [3, 
           6], [4]], [[1, 3, 4], [2, 6], [5]], [[1, 2, 4], [3, 6], [5]], [[1, 
           2, 3], [4, 6], [5]], [[1, 3, 5], [2, 4], [6]], [[1, 2, 5], [3, 
           4], [6]], [[1, 3, 4], [2, 5], [6]], [[1, 2, 4], [3, 5], [6]], [[1, 
           2, 3], [4, 5], [6]]]
                                                                           
    elif T==[[1,1,1,1,1,1,1],[],[]]:
        
        return [[[1,2,3,4,5,6,7],[],[]]]

    elif T==[[1,1,1,1,1,1],[1],[]]:

        return  [[[1, 3, 4, 5, 6, 7], [2],[]], [[1, 2, 4, 5, 6, 7], [3],[]], [[1, 2, 3, 5, 
           6, 7], [4],[]], [[1, 2, 3, 4, 6, 7], [5],[]], [[1, 2, 3, 4, 5, 
           7], [6],[]], [[1, 2, 3, 4, 5, 6], [7],[]]]
                                                     
    elif T==[[1,1,1,1,1],[1,1],[]]:

        return [[[1, 3, 5, 6, 7], [2, 4],[]], [[1, 2, 5, 6, 7], [3, 4],[]], [[1, 3, 4, 6, 
           7], [2, 5],[]], [[1, 2, 4, 6, 7], [3, 5],[]], [[1, 2, 3, 6, 7], [4, 
           5],[]], [[1, 3, 4, 5, 7], [2, 6],[]], [[1, 2, 4, 5, 7], [3, 6],[]], [[1, 2, 
           3, 5, 7], [4, 6],[]], [[1, 2, 3, 4, 7], [5, 6],[]], [[1, 3, 4, 5, 6], [2,
            7],[]], [[1, 2, 4, 5, 6], [3, 7],[]], [[1, 2, 3, 5, 6], [4, 7],[]], [[1, 2,
            3, 4, 6], [5, 7],[]], [[1, 2, 3, 4, 5], [6, 7],[]]]                                                         

                                                
    elif T==[[1,1,1,1,1],[1],[1]]:

        return [[[1, 4, 5, 6, 7], [2], [3]], [[1, 3, 5, 6, 7], [2], [4]], [[1, 2, 5, 
           6, 7], [3], [4]], [[1, 3, 4, 6, 7], [2], [5]], [[1, 2, 4, 6, 
           7], [3], [5]], [[1, 2, 3, 6, 7], [4], [5]], [[1, 3, 4, 5, 
           7], [2], [6]], [[1, 2, 4, 5, 7], [3], [6]], [[1, 2, 3, 5, 
           7], [4], [6]], [[1, 2, 3, 4, 7], [5], [6]], [[1, 3, 4, 5, 
           6], [2], [7]], [[1, 2, 4, 5, 6], [3], [7]], [[1, 2, 3, 5, 
           6], [4], [7]], [[1, 2, 3, 4, 6], [5], [7]], [[1, 2, 3, 4, 
           5], [6], [7]]]

    elif T==[[1,1,1,1],[1,1,1],[]]:

        return [[[1, 3, 5, 7], [2, 4, 6],[]], [[1, 2, 5, 7], [3, 4, 6],[]], [[1, 3, 4, 
           7], [2, 5, 6],[]], [[1, 2, 4, 7], [3, 5, 6],[]], [[1, 2, 3, 7], [4, 5, 
           6],[]], [[1, 3, 5, 6], [2, 4, 7],[]], [[1, 2, 5, 6], [3, 4, 7],[]], [[1, 3, 
           4, 6], [2, 5, 7],[]], [[1, 2, 4, 6], [3, 5, 7],[]], [[1, 2, 3, 6], [4, 5,
            7],[]], [[1, 3, 4, 5], [2, 6, 7],[]], [[1, 2, 4, 5], [3, 6, 7],[]], [[1, 2,
            3, 5], [4, 6, 7],[]], [[1, 2, 3, 4], [5, 6, 7],[]]]                                                       
                                                                           
    elif T==[[1,1,1,1],[1,1],[1]]:
        
        return [[[1, 4, 6, 7], [2, 5], [3]], [[1, 3, 6, 7], [2, 5], [4]], [[1, 2, 6, 
           7], [3, 5], [4]], [[1, 3, 6, 7], [2, 4], [5]], [[1, 2, 6, 7], [3, 
           4], [5]], [[1, 4, 5, 7], [2, 6], [3]], [[1, 3, 5, 7], [2, 
           6], [4]], [[1, 2, 5, 7], [3, 6], [4]], [[1, 3, 4, 7], [2, 
           6], [5]], [[1, 2, 4, 7], [3, 6], [5]], [[1, 2, 3, 7], [4, 
           6], [5]], [[1, 3, 5, 7], [2, 4], [6]], [[1, 2, 5, 7], [3, 
           4], [6]], [[1, 3, 4, 7], [2, 5], [6]], [[1, 2, 4, 7], [3, 
           5], [6]], [[1, 2, 3, 7], [4, 5], [6]], [[1, 4, 5, 6], [2, 
           7], [3]], [[1, 3, 5, 6], [2, 7], [4]], [[1, 2, 5, 6], [3, 
           7], [4]], [[1, 3, 4, 6], [2, 7], [5]], [[1, 2, 4, 6], [3, 
           7], [5]], [[1, 2, 3, 6], [4, 7], [5]], [[1, 3, 4, 5], [2, 
           7], [6]], [[1, 2, 4, 5], [3, 7], [6]], [[1, 2, 3, 5], [4, 
           7], [6]], [[1, 2, 3, 4], [5, 7], [6]], [[1, 3, 5, 6], [2, 
           4], [7]], [[1, 2, 5, 6], [3, 4], [7]], [[1, 3, 4, 6], [2, 
           5], [7]], [[1, 2, 4, 6], [3, 5], [7]], [[1, 2, 3, 6], [4, 
           5], [7]], [[1, 3, 4, 5], [2, 6], [7]], [[1, 2, 4, 5], [3, 
           6], [7]], [[1, 2, 3, 5], [4, 6], [7]], [[1, 2, 3, 4], [5, 6], [7]]]
                                                                  
    elif T==[[1,1,1],[1,1,1],[1]]:
        
        return [[[1, 4, 6], [2, 5, 7], [3]], [[1, 3, 6], [2, 5, 7], [4]], [[1, 2, 
           6], [3, 5, 7], [4]], [[1, 3, 6], [2, 4, 7], [5]], [[1, 2, 6], [3, 
           4, 7], [5]], [[1, 4, 5], [2,6,7], [3]], [[1, 3, 5], [2, 6, 
           7], [4]], [[1, 2, 5], [3, 6, 7], [4]], [[1, 3, 4], [2, 6, 
           7], [5]], [[1, 2, 4], [3, 6, 7], [5]], [[1, 2, 3], [4, 6, 
           7], [5]], [[1, 3, 5], [2, 4, 7], [6]], [[1, 2, 5], [3, 4, 
           7], [6]], [[1, 3, 4], [2, 5, 7], [6]], [[1, 2, 4], [3, 5, 
           7], [6]], [[1, 2, 3], [4, 5, 7], [6]], [[1, 3, 5], [2, 4, 
           6], [7]], [[1, 2, 5], [3, 4, 6], [7]], [[1, 3, 4], [2, 5, 
           6], [7]], [[1, 2, 4], [3, 5, 6], [7]], [[1, 2, 3], [4, 5, 6], [7]]]
                                                               
    elif T==[[1,1,1],[1,1],[1,1]]:
        
        return [[[1, 4, 7], [2, 5], [3, 6]], [[1, 3, 7], [2, 5], [4, 6]], [[1, 2, 
           7], [3, 5], [4, 6]], [[1, 3, 7], [2, 4], [5, 6]], [[1, 2, 7], [3, 
           4], [5, 6]], [[1, 4, 6], [2, 5], [3, 7]], [[1, 3, 6], [2, 5], [4, 
           7]], [[1, 2, 6], [3, 5], [4, 7]], [[1, 3, 6], [2, 4], [5, 7]], [[1,
            2, 6], [3, 4], [5, 7]], [[1, 4, 5], [2, 6], [3, 7]], [[1, 3, 
           5], [2, 6], [4, 7]], [[1, 2, 5], [3, 6], [4, 7]], [[1, 3, 4], [2, 
           6], [5, 7]], [[1, 2, 4], [3, 6], [5, 7]], [[1, 2, 3], [4, 6], [5, 
           7]], [[1, 3, 5], [2, 4], [6, 7]], [[1, 2, 5], [3, 4], [6, 7]], [[1,
            3, 4], [2, 5], [6, 7]], [[1, 2, 4], [3, 5], [6, 7]], [[1, 2, 
           3], [4, 5], [6, 7]]]
                                                                         
    elif T==[[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [], []]:
        
        return [[[1,2,3,4,5,6,7,8,9,10],[],[]]]
        
    elif T==[[1, 1, 1, 1, 1, 1, 1, 1, 1], [1], []]:
        
        return [[[1, 3, 4, 5, 6, 7, 8, 9, 10], [2],[]], [[1, 2, 4, 5, 6, 7, 8, 9, 
           10], [3],[]], [[1, 2, 3, 5, 6, 7, 8, 9, 10], [4],[]], [[1, 2, 3, 4, 6, 7,
            8, 9, 10], [5],[]], [[1, 2, 3, 4, 5, 7, 8, 9, 10], [6],[]], [[1, 2, 3, 
           4, 5, 6, 8, 9, 10], [7],[]], [[1, 2, 3, 4, 5, 6, 7, 9, 10], [8],[]], [[1,
            2, 3, 4, 5, 6, 7, 8, 10], [9],[]], [[1, 2, 3, 4, 5, 6, 7, 8, 
           9], [10],[]]]
        
    elif T==[[1, 1, 1, 1, 1, 1, 1, 1], [1, 1], []]:
        
        return [[[1, 3, 5, 6, 7, 8, 9, 10], [2, 4],[]], [[1, 2, 5, 6, 7, 8, 9, 10], [3, 
           4],[]], [[1, 3, 4, 6, 7, 8, 9, 10], [2, 5],[]], [[1, 2, 4, 6, 7, 8, 9, 
           10], [3, 5],[]], [[1, 2, 3, 6, 7, 8, 9, 10], [4, 5],[]], [[1, 3, 4, 5, 7,
            8, 9, 10], [2, 6],[]], [[1, 2, 4, 5, 7, 8, 9, 10], [3, 6],[]], [[1, 2, 
           3, 5, 7, 8, 9, 10], [4, 6],[]], [[1, 2, 3, 4, 7, 8, 9, 10], [5, 
           6],[]], [[1, 3, 4, 5, 6, 8, 9, 10], [2, 7],[]], [[1, 2, 4, 5, 6, 8, 9, 
           10], [3, 7],[]], [[1, 2, 3, 5, 6, 8, 9, 10], [4, 7],[]], [[1, 2, 3, 4, 6,
            8, 9, 10], [5, 7],[]], [[1, 2, 3, 4, 5, 8, 9, 10], [6, 7],[]], [[1, 3, 
           4, 5, 6, 7, 9, 10], [2, 8],[]], [[1, 2, 4, 5, 6, 7, 9, 10], [3, 
           8],[]], [[1, 2, 3, 5, 6, 7, 9, 10], [4, 8],[]], [[1, 2, 3, 4, 6, 7, 9, 
           10], [5, 8],[]], [[1, 2, 3, 4, 5, 7, 9, 10], [6, 8],[]], [[1, 2, 3, 4, 5,
            6, 9, 10], [7, 8],[]], [[1, 3, 4, 5, 6, 7, 8, 10], [2, 9],[]], [[1, 2, 
           4, 5, 6, 7, 8, 10], [3, 9],[]], [[1, 2, 3, 5, 6, 7, 8, 10], [4, 
           9],[]], [[1, 2, 3, 4, 6, 7, 8, 10], [5, 9],[]], [[1, 2, 3, 4, 5, 7, 8, 
           10], [6, 9],[]], [[1, 2, 3, 4, 5, 6, 8, 10], [7, 9],[]], [[1, 2, 3, 4, 5,
            6, 7, 10], [8, 9],[]], [[1, 3, 4, 5, 6, 7, 8, 9], [2, 10],[]], [[1, 2, 
           4, 5, 6, 7, 8, 9], [3, 10],[]], [[1, 2, 3, 5, 6, 7, 8, 9], [4, 
           10],[]], [[1, 2, 3, 4, 6, 7, 8, 9], [5, 10],[]], [[1, 2, 3, 4, 5, 7, 8, 
           9], [6, 10],[]], [[1, 2, 3, 4, 5, 6, 8, 9], [7, 10],[]], [[1, 2, 3, 4, 5,
            6, 7, 9], [8, 10],[]], [[1, 2, 3, 4, 5, 6, 7, 8], [9, 10],[]]]
        
    elif T==[[1, 1, 1, 1, 1, 1, 1, 1], [1], [1]]:
        
        return [[[1, 4, 5, 6, 7, 8, 9, 10], [2], [3]], [[1, 3, 5, 6, 7, 8, 9, 
           10], [2], [4]], [[1, 2, 5, 6, 7, 8, 9, 10], [3], [4]], [[1, 3, 4, 
           6, 7, 8, 9, 10], [2], [5]], [[1, 2, 4, 6, 7, 8, 9, 
           10], [3], [5]], [[1, 2, 3, 6, 7, 8, 9, 10], [4], [5]], [[1, 3, 4, 
           5, 7, 8, 9, 10], [2], [6]], [[1, 2, 4, 5, 7, 8, 9, 
           10], [3], [6]], [[1, 2, 3, 5, 7, 8, 9, 10], [4], [6]], [[1, 2, 3, 
           4, 7, 8, 9, 10], [5], [6]], [[1, 3, 4, 5, 6, 8, 9, 
           10], [2], [7]], [[1, 2, 4, 5, 6, 8, 9, 10], [3], [7]], [[1, 2, 3, 
           5, 6, 8, 9, 10], [4], [7]], [[1, 2, 3, 4, 6, 8, 9, 
           10], [5], [7]], [[1, 2, 3, 4, 5, 8, 9, 10], [6], [7]], [[1, 3, 4, 
           5, 6, 7, 9, 10], [2], [8]], [[1, 2, 4, 5, 6, 7, 9, 
           10], [3], [8]], [[1, 2, 3, 5, 6, 7, 9, 10], [4], [8]], [[1, 2, 3, 
           4, 6, 7, 9, 10], [5], [8]], [[1, 2, 3, 4, 5, 7, 9, 
           10], [6], [8]], [[1, 2, 3, 4, 5, 6, 9, 10], [7], [8]], [[1, 3, 4, 
           5, 6, 7, 8, 10], [2], [9]], [[1, 2, 4, 5, 6, 7, 8, 
           10], [3], [9]], [[1, 2, 3, 5, 6, 7, 8, 10], [4], [9]], [[1, 2, 3, 
           4, 6, 7, 8, 10], [5], [9]], [[1, 2, 3, 4, 5, 7, 8, 
           10], [6], [9]], [[1, 2, 3, 4, 5, 6, 8, 10], [7], [9]], [[1, 2, 3, 
           4, 5, 6, 7, 10], [8], [9]], [[1, 3, 4, 5, 6, 7, 8, 
           9], [2], [10]], [[1, 2, 4, 5, 6, 7, 8, 9], [3], [10]], [[1, 2, 3, 
           5, 6, 7, 8, 9], [4], [10]], [[1, 2, 3, 4, 6, 7, 8, 
           9], [5], [10]], [[1, 2, 3, 4, 5, 7, 8, 9], [6], [10]], [[1, 2, 3, 
           4, 5, 6, 8, 9], [7], [10]], [[1, 2, 3, 4, 5, 6, 7, 
           9], [8], [10]], [[1, 2, 3, 4, 5, 6, 7, 8], [9], [10]]]
        
    elif T==[[1, 1, 1, 1, 1, 1, 1], [1, 1, 1], []]:
        
        return [[[1, 3, 5, 7, 8, 9, 10], [2, 4, 6],[]], [[1, 2, 5, 7, 8, 9, 10], [3, 4, 
           6],[]], [[1, 3, 4, 7, 8, 9, 10], [2, 5, 6],[]], [[1, 2, 4, 7, 8, 9, 
           10], [3, 5, 6],[]], [[1, 2, 3, 7, 8, 9, 10], [4, 5, 6],[]], [[1, 3, 5, 6,
            8, 9, 10], [2, 4, 7],[]], [[1, 2, 5, 6, 8, 9, 10], [3, 4, 7],[]], [[1, 
           3, 4, 6, 8, 9, 10], [2, 5, 7],[]], [[1, 2, 4, 6, 8, 9, 10], [3, 5, 
           7],[]], [[1, 2, 3, 6, 8, 9, 10], [4, 5, 7],[]], [[1, 3, 4, 5, 8, 9, 
           10], [2, 6, 7],[]], [[1, 2, 4, 5, 8, 9, 10], [3, 6, 7],[]], [[1, 2, 3, 5,
            8, 9, 10], [4, 6, 7],[]], [[1, 2, 3, 4, 8, 9, 10], [5, 6, 7],[]], [[1, 
           3, 5, 6, 7, 9, 10], [2, 4, 8],[]], [[1, 2, 5, 6, 7, 9, 10], [3, 4, 
           8],[]], [[1, 3, 4, 6, 7, 9, 10], [2, 5, 8],[]], [[1, 2, 4, 6, 7, 9, 
           10], [3, 5, 8],[]], [[1, 2, 3, 6, 7, 9, 10], [4, 5, 8],[]], [[1, 3, 4, 5,
            7, 9, 10], [2, 6, 8],[]], [[1, 2, 4, 5, 7, 9, 10], [3, 6, 8],[]], [[1, 
           2, 3, 5, 7, 9, 10], [4, 6, 8],[]], [[1, 2, 3, 4, 7, 9, 10], [5, 6, 
           8],[]], [[1, 3, 4, 5, 6, 9, 10], [2, 7, 8],[]], [[1, 2, 4, 5, 6, 9, 
           10], [3, 7, 8],[]], [[1, 2, 3, 5, 6, 9, 10], [4, 7, 8],[]], [[1, 2, 3, 4,
            6, 9, 10], [5, 7, 8],[]], [[1, 2, 3, 4, 5, 9, 10], [6, 7, 8],[]], [[1, 
           3, 5, 6, 7, 8, 10], [2, 4, 9],[]], [[1, 2, 5, 6, 7, 8, 10], [3, 4, 
           9],[]], [[1, 3, 4, 6, 7, 8, 10], [2, 5, 9],[]], [[1, 2, 4, 6, 7, 8, 
           10], [3, 5, 9],[]], [[1, 2, 3, 6, 7, 8, 10], [4, 5, 9],[]], [[1, 3, 4, 5,
            7, 8, 10], [2, 6, 9],[]], [[1, 2, 4, 5, 7, 8, 10], [3, 6, 9],[]], [[1, 
           2, 3, 5, 7, 8, 10], [4, 6, 9],[]], [[1, 2, 3, 4, 7, 8, 10], [5, 6, 
           9],[]], [[1, 3, 4, 5, 6, 8, 10], [2, 7, 9],[]], [[1, 2, 4, 5, 6, 8, 
           10], [3, 7, 9],[]], [[1, 2, 3, 5, 6, 8, 10], [4, 7, 9],[]], [[1, 2, 3, 4,
            6, 8, 10], [5, 7, 9],[]], [[1, 2, 3, 4, 5, 8, 10], [6, 7, 9],[]], [[1, 
           3, 4, 5, 6, 7, 10], [2, 8, 9],[]], [[1, 2, 4, 5, 6, 7, 10], [3, 8, 
           9],[]], [[1, 2, 3, 5, 6, 7, 10], [4, 8, 9],[]], [[1, 2, 3, 4, 6, 7, 
           10], [5, 8, 9],[]], [[1, 2, 3, 4, 5, 7, 10], [6, 8, 9],[]], [[1, 2, 3, 4,
            5, 6, 10], [7, 8, 9],[]], [[1, 3, 5, 6, 7, 8, 9], [2, 4, 10],[]], [[1, 
           2, 5, 6, 7, 8, 9], [3, 4, 10],[]], [[1, 3, 4, 6, 7, 8, 9], [2, 5, 
           10],[]], [[1, 2, 4, 6, 7, 8, 9], [3, 5, 10],[]], [[1, 2, 3, 6, 7, 8, 
           9], [4, 5, 10],[]], [[1, 3, 4, 5, 7, 8, 9], [2, 6, 10],[]], [[1, 2, 4, 5,
            7, 8, 9], [3, 6, 10],[]], [[1, 2, 3, 5, 7, 8, 9], [4, 6, 10],[]], [[1, 
           2, 3, 4, 7, 8, 9], [5, 6, 10],[]], [[1, 3, 4, 5, 6, 8, 9], [2, 7, 
           10],[]], [[1, 2, 4, 5, 6, 8, 9], [3, 7, 10],[]], [[1, 2, 3, 5, 6, 8, 
           9], [4, 7, 10],[]], [[1, 2, 3, 4, 6, 8, 9], [5, 7, 10],[]], [[1, 2, 3, 4,
            5, 8, 9], [6, 7, 10],[]], [[1, 3, 4, 5, 6, 7, 9], [2, 8, 10],[]], [[1, 
           2, 4, 5, 6, 7, 9], [3, 8, 10],[]], [[1, 2, 3, 5, 6, 7, 9], [4, 8, 
           10],[]], [[1, 2, 3, 4, 6, 7, 9], [5, 8, 10],[]], [[1, 2, 3, 4, 5, 7, 
           9], [6, 8, 10],[]], [[1, 2, 3, 4, 5, 6, 9], [7, 8, 10],[]], [[1, 3, 4, 5,
            6, 7, 8], [2, 9, 10],[]], [[1, 2, 4, 5, 6, 7, 8], [3, 9, 10],[]], [[1, 
           2, 3, 5, 6, 7, 8], [4, 9, 10],[]], [[1, 2, 3, 4, 6, 7, 8], [5, 9, 
           10],[]], [[1, 2, 3, 4, 5, 7, 8], [6, 9, 10],[]], [[1, 2, 3, 4, 5, 6, 
           8], [7, 9, 10],[]], [[1, 2, 3, 4, 5, 6, 7], [8, 9, 10],[]]]
        
    elif T==[[1, 1, 1, 1, 1, 1, 1], [1, 1], [1]]:
        
        return [[[1, 4, 6, 7, 8, 9, 10], [2, 5], [3]], [[1, 3, 6, 7, 8, 9, 10], [2, 
           5], [4]], [[1, 2, 6, 7, 8, 9, 10], [3, 5], [4]], [[1, 3, 6, 7, 8, 
           9, 10], [2, 4], [5]], [[1, 2, 6, 7, 8, 9, 10], [3, 4], [5]], [[1, 
           4, 5, 7, 8, 9, 10], [2, 6], [3]], [[1, 3, 5, 7, 8, 9, 10], [2, 
           6], [4]], [[1, 2, 5, 7, 8, 9, 10], [3, 6], [4]], [[1, 3, 4, 7, 8, 
           9, 10], [2, 6], [5]], [[1, 2, 4, 7, 8, 9, 10], [3, 6], [5]], [[1, 
           2, 3, 7, 8, 9, 10], [4, 6], [5]], [[1, 3, 5, 7, 8, 9, 10], [2, 
           4], [6]], [[1, 2, 5, 7, 8, 9, 10], [3, 4], [6]], [[1, 3, 4, 7, 8, 
           9, 10], [2, 5], [6]], [[1, 2, 4, 7, 8, 9, 10], [3, 5], [6]], [[1, 
           2, 3, 7, 8, 9, 10], [4, 5], [6]], [[1, 4, 5, 6, 8, 9, 10], [2, 
           7], [3]], [[1, 3, 5, 6, 8, 9, 10], [2, 7], [4]], [[1, 2, 5, 6, 8, 
           9, 10], [3, 7], [4]], [[1, 3, 4, 6, 8, 9, 10], [2, 7], [5]], [[1, 
           2, 4, 6, 8, 9, 10], [3, 7], [5]], [[1, 2, 3, 6, 8, 9, 10], [4, 
           7], [5]], [[1, 3, 4, 5, 8, 9, 10], [2, 7], [6]], [[1, 2, 4, 5, 8, 
           9, 10], [3, 7], [6]], [[1, 2, 3, 5, 8, 9, 10], [4, 7], [6]], [[1, 
           2, 3, 4, 8, 9, 10], [5, 7], [6]], [[1, 3, 5, 6, 8, 9, 10], [2, 
           4], [7]], [[1, 2, 5, 6, 8, 9, 10], [3, 4], [7]], [[1, 3, 4, 6, 8, 
           9, 10], [2, 5], [7]], [[1, 2, 4, 6, 8, 9, 10], [3, 5], [7]], [[1, 
           2, 3, 6, 8, 9, 10], [4, 5], [7]], [[1, 3, 4, 5, 8, 9, 10], [2, 
           6], [7]], [[1, 2, 4, 5, 8, 9, 10], [3, 6], [7]], [[1, 2, 3, 5, 8, 
           9, 10], [4, 6], [7]], [[1, 2, 3, 4, 8, 9, 10], [5, 6], [7]], [[1, 
           4, 5, 6, 7, 9, 10], [2, 8], [3]], [[1, 3, 5, 6, 7, 9, 10], [2, 
           8], [4]], [[1, 2, 5, 6, 7, 9, 10], [3, 8], [4]], [[1, 3, 4, 6, 7, 
           9, 10], [2, 8], [5]], [[1, 2, 4, 6, 7, 9, 10], [3, 8], [5]], [[1, 
           2, 3, 6, 7, 9, 10], [4, 8], [5]], [[1, 3, 4, 5, 7, 9, 10], [2, 
           8], [6]], [[1, 2, 4, 5, 7, 9, 10], [3, 8], [6]], [[1, 2, 3, 5, 7, 
           9, 10], [4, 8], [6]], [[1, 2, 3, 4, 7, 9, 10], [5, 8], [6]], [[1, 
           3, 4, 5, 6, 9, 10], [2, 8], [7]], [[1, 2, 4, 5, 6, 9, 10], [3, 
           8], [7]], [[1, 2, 3, 5, 6, 9, 10], [4, 8], [7]], [[1, 2, 3, 4, 6, 
           9, 10], [5, 8], [7]], [[1, 2, 3, 4, 5, 9, 10], [6, 8], [7]], [[1, 
           3, 5, 6, 7, 9, 10], [2, 4], [8]], [[1, 2, 5, 6, 7, 9, 10], [3, 
           4], [8]], [[1, 3, 4, 6, 7, 9, 10], [2, 5], [8]], [[1, 2, 4, 6, 7, 
           9, 10], [3, 5], [8]], [[1, 2, 3, 6, 7, 9, 10], [4, 5], [8]], [[1, 
           3, 4, 5, 7, 9, 10], [2, 6], [8]], [[1, 2, 4, 5, 7, 9, 10], [3, 
           6], [8]], [[1, 2, 3, 5, 7, 9, 10], [4, 6], [8]], [[1, 2, 3, 4, 7, 
           9, 10], [5, 6], [8]], [[1, 3, 4, 5, 6, 9, 10], [2, 7], [8]], [[1, 
           2, 4, 5, 6, 9, 10], [3, 7], [8]], [[1, 2, 3, 5, 6, 9, 10], [4, 
           7], [8]], [[1, 2, 3, 4, 6, 9, 10], [5, 7], [8]], [[1, 2, 3, 4, 5, 
           9, 10], [6, 7], [8]], [[1, 4, 5, 6, 7, 8, 10], [2, 9], [3]], [[1, 
           3, 5, 6, 7, 8, 10], [2, 9], [4]], [[1, 2, 5, 6, 7, 8, 10], [3, 
           9], [4]], [[1, 3, 4, 6, 7, 8, 10], [2, 9], [5]], [[1, 2, 4, 6, 7, 
           8, 10], [3, 9], [5]], [[1, 2, 3, 6, 7, 8, 10], [4, 9], [5]], [[1, 
           3, 4, 5, 7, 8, 10], [2, 9], [6]], [[1, 2, 4, 5, 7, 8, 10], [3, 
           9], [6]], [[1, 2, 3, 5, 7, 8, 10], [4, 9], [6]], [[1, 2, 3, 4, 7, 
           8, 10], [5, 9], [6]], [[1, 3, 4, 5, 6, 8, 10], [2, 9], [7]], [[1, 
           2, 4, 5, 6, 8, 10], [3, 9], [7]], [[1, 2, 3, 5, 6, 8, 10], [4, 
           9], [7]], [[1, 2, 3, 4, 6, 8, 10], [5, 9], [7]], [[1, 2, 3, 4, 5, 
           8, 10], [6, 9], [7]], [[1, 3, 4, 5, 6, 7, 10], [2, 9], [8]], [[1, 
           2, 4, 5, 6, 7, 10], [3, 9], [8]], [[1, 2, 3, 5, 6, 7, 10], [4, 
           9], [8]], [[1, 2, 3, 4, 6, 7, 10], [5, 9], [8]], [[1, 2, 3, 4, 5, 
           7, 10], [6, 9], [8]], [[1, 2, 3, 4, 5, 6, 10], [7, 9], [8]], [[1, 
           3, 5, 6, 7, 8, 10], [2, 4], [9]], [[1, 2, 5, 6, 7, 8, 10], [3, 
           4], [9]], [[1, 3, 4, 6, 7, 8, 10], [2, 5], [9]], [[1, 2, 4, 6, 7, 
           8, 10], [3, 5], [9]], [[1, 2, 3, 6, 7, 8, 10], [4, 5], [9]], [[1, 
           3, 4, 5, 7, 8, 10], [2, 6], [9]], [[1, 2, 4, 5, 7, 8, 10], [3, 
           6], [9]], [[1, 2, 3, 5, 7, 8, 10], [4, 6], [9]], [[1, 2, 3, 4, 7, 
           8, 10], [5, 6], [9]], [[1, 3, 4, 5, 6, 8, 10], [2, 7], [9]], [[1, 
           2, 4, 5, 6, 8, 10], [3, 7], [9]], [[1, 2, 3, 5, 6, 8, 10], [4, 
           7], [9]], [[1, 2, 3, 4, 6, 8, 10], [5, 7], [9]], [[1, 2, 3, 4, 5, 
           8, 10], [6, 7], [9]], [[1, 3, 4, 5, 6, 7, 10], [2, 8], [9]], [[1, 
           2, 4, 5, 6, 7, 10], [3, 8], [9]], [[1, 2, 3, 5, 6, 7, 10], [4, 
           8], [9]], [[1, 2, 3, 4, 6, 7, 10], [5, 8], [9]], [[1, 2, 3, 4, 5, 
           7, 10], [6, 8], [9]], [[1, 2, 3, 4, 5, 6, 10], [7, 8], [9]], [[1, 
           4, 5, 6, 7, 8, 9], [2, 10], [3]], [[1, 3, 5, 6, 7, 8, 9], [2, 
           10], [4]], [[1, 2, 5, 6, 7, 8, 9], [3, 10], [4]], [[1, 3, 4, 6, 7, 
           8, 9], [2, 10], [5]], [[1, 2, 4, 6, 7, 8, 9], [3, 10], [5]], [[1, 
           2, 3, 6, 7, 8, 9], [4, 10], [5]], [[1, 3, 4, 5, 7, 8, 9], [2, 
           10], [6]], [[1, 2, 4, 5, 7, 8, 9], [3, 10], [6]], [[1, 2, 3, 5, 7, 
           8, 9], [4, 10], [6]], [[1, 2, 3, 4, 7, 8, 9], [5, 10], [6]], [[1, 
           3, 4, 5, 6, 8, 9], [2, 10], [7]], [[1, 2, 4, 5, 6, 8, 9], [3, 
           10], [7]], [[1, 2, 3, 5, 6, 8, 9], [4, 10], [7]], [[1, 2, 3, 4, 6, 
           8, 9], [5, 10], [7]], [[1, 2, 3, 4, 5, 8, 9], [6, 10], [7]], [[1, 
           3, 4, 5, 6, 7, 9], [2, 10], [8]], [[1, 2, 4, 5, 6, 7, 9], [3, 
           10], [8]], [[1, 2, 3, 5, 6, 7, 9], [4, 10], [8]], [[1, 2, 3, 4, 6, 
           7, 9], [5, 10], [8]], [[1, 2, 3, 4, 5, 7, 9], [6, 10], [8]], [[1, 
           2, 3, 4, 5, 6, 9], [7, 10], [8]], [[1, 3, 4, 5, 6, 7, 8], [2, 
           10], [9]], [[1, 2, 4, 5, 6, 7, 8], [3, 10], [9]], [[1, 2, 3, 5, 6, 
           7, 8], [4, 10], [9]], [[1, 2, 3, 4, 6, 7, 8], [5, 10], [9]], [[1, 
           2, 3, 4, 5, 7, 8], [6, 10], [9]], [[1, 2, 3, 4, 5, 6, 8], [7, 
           10], [9]], [[1, 2, 3, 4, 5, 6, 7], [8, 10], [9]], [[1, 3, 5, 6, 7, 
           8, 9], [2, 4], [10]], [[1, 2, 5, 6, 7, 8, 9], [3, 4], [10]], [[1, 
           3, 4, 6, 7, 8, 9], [2, 5], [10]], [[1, 2, 4, 6, 7, 8, 9], [3, 
           5], [10]], [[1, 2, 3, 6, 7, 8, 9], [4, 5], [10]], [[1, 3, 4, 5, 7, 
           8, 9], [2, 6], [10]], [[1, 2, 4, 5, 7, 8, 9], [3, 6], [10]], [[1, 
           2, 3, 5, 7, 8, 9], [4, 6], [10]], [[1, 2, 3, 4, 7, 8, 9], [5, 
           6], [10]], [[1, 3, 4, 5, 6, 8, 9], [2, 7], [10]], [[1, 2, 4, 5, 6, 
           8, 9], [3, 7], [10]], [[1, 2, 3, 5, 6, 8, 9], [4, 7], [10]], [[1, 
           2, 3, 4, 6, 8, 9], [5, 7], [10]], [[1, 2, 3, 4, 5, 8, 9], [6, 
           7], [10]], [[1, 3, 4, 5, 6, 7, 9], [2, 8], [10]], [[1, 2, 4, 5, 6, 
           7, 9], [3, 8], [10]], [[1, 2, 3, 5, 6, 7, 9], [4, 8], [10]], [[1, 
           2, 3, 4, 6, 7, 9], [5, 8], [10]], [[1, 2, 3, 4, 5, 7, 9], [6, 
           8], [10]], [[1, 2, 3, 4, 5, 6, 9], [7, 8], [10]], [[1, 3, 4, 5, 6, 
           7, 8], [2, 9], [10]], [[1, 2, 4, 5, 6, 7, 8], [3, 9], [10]], [[1, 
           2, 3, 5, 6, 7, 8], [4, 9], [10]], [[1, 2, 3, 4, 6, 7, 8], [5, 
           9], [10]], [[1, 2, 3, 4, 5, 7, 8], [6, 9], [10]], [[1, 2, 3, 4, 5, 
           6, 8], [7, 9], [10]], [[1, 2, 3, 4, 5, 6, 7], [8, 9], [10]]]
        
    elif T==[[1, 1, 1, 1, 1, 1], [1, 1, 1, 1], []]:
        
        MPM=[[[1, 3, 5, 7, 9, 10], [2, 4, 6, 8]], [[1, 2, 5, 7, 9, 10], [3, 4, 6, 
           8]], [[1, 3, 4, 7, 9, 10], [2, 5, 6, 8]], [[1, 2, 4, 7, 9, 10], [3,
            5, 6, 8]], [[1, 2, 3, 7, 9, 10], [4, 5, 6, 8]], [[1, 3, 5, 6, 9, 
           10], [2, 4, 7, 8]], [[1, 2, 5, 6, 9, 10], [3, 4, 7, 8]], [[1, 3, 4,
            6, 9, 10], [2, 5, 7, 8]], [[1, 2, 4, 6, 9, 10], [3, 5, 7, 
           8]], [[1, 2, 3, 6, 9, 10], [4, 5, 7, 8]], [[1, 3, 4, 5, 9, 10], [2,
            6, 7, 8]], [[1, 2, 4, 5, 9, 10], [3, 6, 7, 8]], [[1, 2, 3, 5, 9, 
           10], [4, 6, 7, 8]], [[1, 2, 3, 4, 9, 10], [5, 6, 7, 8]], [[1, 3, 5,
            7, 8, 10], [2, 4, 6, 9]], [[1, 2, 5, 7, 8, 10], [3, 4, 6, 
           9]], [[1, 3, 4, 7, 8, 10], [2, 5, 6, 9]], [[1, 2, 4, 7, 8, 10], [3,
            5, 6, 9]], [[1, 2, 3, 7, 8, 10], [4, 5, 6, 9]], [[1, 3, 5, 6, 8, 
           10], [2, 4, 7, 9]], [[1, 2, 5, 6, 8, 10], [3, 4, 7, 9]], [[1, 3, 4,
            6, 8, 10], [2, 5, 7, 9]], [[1, 2, 4, 6, 8, 10], [3, 5, 7, 
           9]], [[1, 2, 3, 6, 8, 10], [4, 5, 7, 9]], [[1, 3, 4, 5, 8, 10], [2,
            6, 7, 9]], [[1, 2, 4, 5, 8, 10], [3, 6, 7, 9]], [[1, 2, 3, 5, 8, 
           10], [4, 6, 7, 9]], [[1, 2, 3, 4, 8, 10], [5, 6, 7, 9]], [[1, 3, 5,
            6, 7, 10], [2, 4, 8, 9]], [[1, 2, 5, 6, 7, 10], [3, 4, 8, 
           9]], [[1, 3, 4, 6, 7, 10], [2, 5, 8, 9]], [[1, 2, 4, 6, 7, 10], [3,
            5, 8, 9]], [[1, 2, 3, 6, 7, 10], [4, 5, 8, 9]], [[1, 3, 4, 5, 7, 
           10], [2, 6, 8, 9]], [[1, 2, 4, 5, 7, 10], [3, 6, 8, 9]], [[1, 2, 3,
            5, 7, 10], [4, 6, 8, 9]], [[1, 2, 3, 4, 7, 10], [5, 6, 8, 
           9]], [[1, 3, 4, 5, 6, 10], [2, 7, 8, 9]], [[1, 2, 4, 5, 6, 10], [3,
            7, 8, 9]], [[1, 2, 3, 5, 6, 10], [4, 7, 8, 9]], [[1, 2, 3, 4, 6, 
           10], [5, 7, 8, 9]], [[1, 2, 3, 4, 5, 10], [6, 7, 8, 9]], [[1, 3, 5,
            7, 8, 9], [2, 4, 6, 10]], [[1, 2, 5, 7, 8, 9], [3, 4, 6, 
           10]], [[1, 3, 4, 7, 8, 9], [2, 5, 6, 10]], [[1, 2, 4, 7, 8, 9], [3,
            5, 6, 10]], [[1, 2, 3, 7, 8, 9], [4, 5, 6, 10]], [[1, 3, 5, 6, 8, 
           9], [2, 4, 7, 10]], [[1, 2, 5, 6, 8, 9], [3, 4, 7, 10]], [[1, 3, 4,
            6, 8, 9], [2, 5, 7, 10]], [[1, 2, 4, 6, 8, 9], [3, 5, 7, 
           10]], [[1, 2, 3, 6, 8, 9], [4, 5, 7, 10]], [[1, 3, 4, 5, 8, 9], [2,
            6, 7, 10]], [[1, 2, 4, 5, 8, 9], [3, 6, 7, 10]], [[1, 2, 3, 5, 8, 
           9], [4, 6, 7, 10]], [[1, 2, 3, 4, 8, 9], [5, 6, 7, 10]], [[1, 3, 5,
            6, 7, 9], [2, 4, 8, 10]], [[1, 2, 5, 6, 7, 9], [3, 4, 8, 
           10]], [[1, 3, 4, 6, 7, 9], [2, 5, 8, 10]], [[1, 2, 4, 6, 7, 9], [3,
            5, 8, 10]], [[1, 2, 3, 6, 7, 9], [4, 5, 8, 10]], [[1, 3, 4, 5, 7, 
           9], [2, 6, 8, 10]], [[1, 2, 4, 5, 7, 9], [3, 6, 8, 10]], [[1, 2, 3,
            5, 7, 9], [4, 6, 8, 10]], [[1, 2, 3, 4, 7, 9], [5, 6, 8, 
           10]], [[1, 3, 4, 5, 6, 9], [2, 7, 8, 10]], [[1, 2, 4, 5, 6, 9], [3,
            7, 8, 10]], [[1, 2, 3, 5, 6, 9], [4, 7, 8, 10]], [[1, 2, 3, 4, 6, 
           9], [5, 7, 8, 10]], [[1, 2, 3, 4, 5, 9], [6, 7, 8, 10]], [[1, 3, 5,
            6, 7, 8], [2, 4, 9, 10]], [[1, 2, 5, 6, 7, 8], [3, 4, 9, 
           10]], [[1, 3, 4, 6, 7, 8], [2, 5, 9, 10]], [[1, 2, 4, 6, 7, 8], [3,
            5, 9, 10]], [[1, 2, 3, 6, 7, 8], [4, 5, 9, 10]], [[1, 3, 4, 5, 7, 
           8], [2, 6, 9, 10]], [[1, 2, 4, 5, 7, 8], [3, 6, 9, 10]], [[1, 2, 3,
            5, 7, 8], [4, 6, 9, 10]], [[1, 2, 3, 4, 7, 8], [5, 6, 9, 
           10]], [[1, 3, 4, 5, 6, 8], [2, 7, 9, 10]], [[1, 2, 4, 5, 6, 8], [3,
            7, 9, 10]], [[1, 2, 3, 5, 6, 8], [4, 7, 9, 10]], [[1, 2, 3, 4, 6, 
           8], [5, 7, 9, 10]], [[1, 2, 3, 4, 5, 8], [6, 7, 9, 10]], [[1, 3, 4,
            5, 6, 7], [2, 8, 9, 10]], [[1, 2, 4, 5, 6, 7], [3, 8, 9, 
           10]], [[1, 2, 3, 5, 6, 7], [4, 8, 9, 10]], [[1, 2, 3, 4, 6, 7], [5,
            8, 9, 10]], [[1, 2, 3, 4, 5, 7], [6, 8, 9, 10]], [[1, 2, 3, 4, 5, 
           6], [7, 8, 9, 10]]]
                                                               
        for i in MPM:
            i.append([])
               
        return MPM
        
                                                               
    elif T==[[1, 1, 1, 1, 1, 1], [1, 1, 1], [1]]:
        
        return [[[1, 4, 6, 8, 9, 10], [2, 5, 7], [3]], [[1, 3, 6, 8, 9, 10], [2, 5, 
           7], [4]], [[1, 2, 6, 8, 9, 10], [3, 5, 7], [4]], [[1, 3, 6, 8, 9, 
           10], [2, 4, 7], [5]], [[1, 2, 6, 8, 9, 10], [3, 4, 7], [5]], [[1, 
           4, 5, 8, 9, 10], [2, 6, 7], [3]], [[1, 3, 5, 8, 9, 10], [2, 6, 
           7], [4]], [[1, 2, 5, 8, 9, 10], [3, 6, 7], [4]], [[1, 3, 4, 8, 9, 
           10], [2, 6, 7], [5]], [[1, 2, 4, 8, 9, 10], [3, 6, 7], [5]], [[1, 
           2, 3, 8, 9, 10], [4, 6, 7], [5]], [[1, 3, 5, 8, 9, 10], [2, 4, 
           7], [6]], [[1, 2, 5, 8, 9, 10], [3, 4, 7], [6]], [[1, 3, 4, 8, 9, 
           10], [2, 5, 7], [6]], [[1, 2, 4, 8, 9, 10], [3, 5, 7], [6]], [[1, 
           2, 3, 8, 9, 10], [4, 5, 7], [6]], [[1, 3, 5, 8, 9, 10], [2, 4, 
           6], [7]], [[1, 2, 5, 8, 9, 10], [3, 4, 6], [7]], [[1, 3, 4, 8, 9, 
           10], [2, 5, 6], [7]], [[1, 2, 4, 8, 9, 10], [3, 5, 6], [7]], [[1, 
           2, 3, 8, 9, 10], [4, 5, 6], [7]], [[1, 4, 6, 7, 9, 10], [2, 5, 
           8], [3]], [[1, 3, 6, 7, 9, 10], [2, 5, 8], [4]], [[1, 2, 6, 7, 9, 
           10], [3, 5, 8], [4]], [[1, 3, 6, 7, 9, 10], [2, 4, 8], [5]], [[1, 
           2, 6, 7, 9, 10], [3, 4, 8], [5]], [[1, 4, 5, 7, 9, 10], [2, 6, 
           8], [3]], [[1, 3, 5, 7, 9, 10], [2, 6, 8], [4]], [[1, 2, 5, 7, 9, 
           10], [3, 6, 8], [4]], [[1, 3, 4, 7, 9, 10], [2, 6, 8], [5]], [[1, 
           2, 4, 7, 9, 10], [3, 6, 8], [5]], [[1, 2, 3, 7, 9, 10], [4, 6, 
           8], [5]], [[1, 3, 5, 7, 9, 10], [2, 4, 8], [6]], [[1, 2, 5, 7, 9, 
           10], [3, 4, 8], [6]], [[1, 3, 4, 7, 9, 10], [2, 5, 8], [6]], [[1, 
           2, 4, 7, 9, 10], [3, 5, 8], [6]], [[1, 2, 3, 7, 9, 10], [4, 5, 
           8], [6]], [[1, 4, 5, 6, 9, 10], [2, 7, 8], [3]], [[1, 3, 5, 6, 9, 
           10], [2, 7, 8], [4]], [[1, 2, 5, 6, 9, 10], [3, 7, 8], [4]], [[1, 
           3, 4, 6, 9, 10], [2, 7, 8], [5]], [[1, 2, 4, 6, 9, 10], [3, 7, 
           8], [5]], [[1, 2, 3, 6, 9, 10], [4, 7, 8], [5]], [[1, 3, 4, 5, 9, 
           10], [2, 7, 8], [6]], [[1, 2, 4, 5, 9, 10], [3, 7, 8], [6]], [[1, 
           2, 3, 5, 9, 10], [4, 7, 8], [6]], [[1, 2, 3, 4, 9, 10], [5, 7, 
           8], [6]], [[1, 3, 5, 6, 9, 10], [2, 4, 8], [7]], [[1, 2, 5, 6, 9, 
           10], [3, 4, 8], [7]], [[1, 3, 4, 6, 9, 10], [2, 5, 8], [7]], [[1, 
           2, 4, 6, 9, 10], [3, 5, 8], [7]], [[1, 2, 3, 6, 9, 10], [4, 5, 
           8], [7]], [[1, 3, 4, 5, 9, 10], [2, 6, 8], [7]], [[1, 2, 4, 5, 9, 
           10], [3, 6, 8], [7]], [[1, 2, 3, 5, 9, 10], [4, 6, 8], [7]], [[1, 
           2, 3, 4, 9, 10], [5, 6, 8], [7]], [[1, 3, 5, 7, 9, 10], [2, 4, 
           6], [8]], [[1, 2, 5, 7, 9, 10], [3, 4, 6], [8]], [[1, 3, 4, 7, 9, 
           10], [2, 5, 6], [8]], [[1, 2, 4, 7, 9, 10], [3, 5, 6], [8]], [[1, 
           2, 3, 7, 9, 10], [4, 5, 6], [8]], [[1, 3, 5, 6, 9, 10], [2, 4, 
           7], [8]], [[1, 2, 5, 6, 9, 10], [3, 4, 7], [8]], [[1, 3, 4, 6, 9, 
           10], [2, 5, 7], [8]], [[1, 2, 4, 6, 9, 10], [3, 5, 7], [8]], [[1, 
           2, 3, 6, 9, 10], [4, 5, 7], [8]], [[1, 3, 4, 5, 9, 10], [2, 6, 
           7], [8]], [[1, 2, 4, 5, 9, 10], [3, 6, 7], [8]], [[1, 2, 3, 5, 9, 
           10], [4, 6, 7], [8]], [[1, 2, 3, 4, 9, 10], [5, 6, 7], [8]], [[1, 
           4, 6, 7, 8, 10], [2, 5, 9], [3]], [[1, 3, 6, 7, 8, 10], [2, 5, 
           9], [4]], [[1, 2, 6, 7, 8, 10], [3, 5, 9], [4]], [[1, 3, 6, 7, 8, 
           10], [2, 4, 9], [5]], [[1, 2, 6, 7, 8, 10], [3, 4, 9], [5]], [[1, 
           4, 5, 7, 8, 10], [2, 6, 9], [3]], [[1, 3, 5, 7, 8, 10], [2, 6, 
           9], [4]], [[1, 2, 5, 7, 8, 10], [3, 6, 9], [4]], [[1, 3, 4, 7, 8, 
           10], [2, 6, 9], [5]], [[1, 2, 4, 7, 8, 10], [3, 6, 9], [5]], [[1, 
           2, 3, 7, 8, 10], [4, 6, 9], [5]], [[1, 3, 5, 7, 8, 10], [2, 4, 
           9], [6]], [[1, 2, 5, 7, 8, 10], [3, 4, 9], [6]], [[1, 3, 4, 7, 8, 
           10], [2, 5, 9], [6]], [[1, 2, 4, 7, 8, 10], [3, 5, 9], [6]], [[1, 
           2, 3, 7, 8, 10], [4, 5, 9], [6]], [[1, 4, 5, 6, 8, 10], [2, 7, 
           9], [3]], [[1, 3, 5, 6, 8, 10], [2, 7, 9], [4]], [[1, 2, 5, 6, 8, 
           10], [3, 7, 9], [4]], [[1, 3, 4, 6, 8, 10], [2, 7, 9], [5]], [[1, 
           2, 4, 6, 8, 10], [3, 7, 9], [5]], [[1, 2, 3, 6, 8, 10], [4, 7, 
           9], [5]], [[1, 3, 4, 5, 8, 10], [2, 7, 9], [6]], [[1, 2, 4, 5, 8, 
           10], [3, 7, 9], [6]], [[1, 2, 3, 5, 8, 10], [4, 7, 9], [6]], [[1, 
           2, 3, 4, 8, 10], [5, 7, 9], [6]], [[1, 3, 5, 6, 8, 10], [2, 4, 
           9], [7]], [[1, 2, 5, 6, 8, 10], [3, 4, 9], [7]], [[1, 3, 4, 6, 8, 
           10], [2, 5, 9], [7]], [[1, 2, 4, 6, 8, 10], [3, 5, 9], [7]], [[1, 
           2, 3, 6, 8, 10], [4, 5, 9], [7]], [[1, 3, 4, 5, 8, 10], [2, 6, 
           9], [7]], [[1, 2, 4, 5, 8, 10], [3, 6, 9], [7]], [[1, 2, 3, 5, 8, 
           10], [4, 6, 9], [7]], [[1, 2, 3, 4, 8, 10], [5, 6, 9], [7]], [[1, 
           4, 5, 6, 7, 10], [2, 8, 9], [3]], [[1, 3, 5, 6, 7, 10], [2, 8, 
           9], [4]], [[1, 2, 5, 6, 7, 10], [3, 8, 9], [4]], [[1, 3, 4, 6, 7, 
           10], [2, 8, 9], [5]], [[1, 2, 4, 6, 7, 10], [3, 8, 9], [5]], [[1, 
           2, 3, 6, 7, 10], [4, 8, 9], [5]], [[1, 3, 4, 5, 7, 10], [2, 8, 
           9], [6]], [[1, 2, 4, 5, 7, 10], [3, 8, 9], [6]], [[1, 2, 3, 5, 7, 
           10], [4, 8, 9], [6]], [[1, 2, 3, 4, 7, 10], [5, 8, 9], [6]], [[1, 
           3, 4, 5, 6, 10], [2, 8, 9], [7]], [[1, 2, 4, 5, 6, 10], [3, 8, 
           9], [7]], [[1, 2, 3, 5, 6, 10], [4, 8, 9], [7]], [[1, 2, 3, 4, 6, 
           10], [5, 8, 9], [7]], [[1, 2, 3, 4, 5, 10], [6, 8, 9], [7]], [[1, 
           3, 5, 6, 7, 10], [2, 4, 9], [8]], [[1, 2, 5, 6, 7, 10], [3, 4, 
           9], [8]], [[1, 3, 4, 6, 7, 10], [2, 5, 9], [8]], [[1, 2, 4, 6, 7, 
           10], [3, 5, 9], [8]], [[1, 2, 3, 6, 7, 10], [4, 5, 9], [8]], [[1, 
           3, 4, 5, 7, 10], [2, 6, 9], [8]], [[1, 2, 4, 5, 7, 10], [3, 6, 
           9], [8]], [[1, 2, 3, 5, 7, 10], [4, 6, 9], [8]], [[1, 2, 3, 4, 7, 
           10], [5, 6, 9], [8]], [[1, 3, 4, 5, 6, 10], [2, 7, 9], [8]], [[1, 
           2, 4, 5, 6, 10], [3, 7, 9], [8]], [[1, 2, 3, 5, 6, 10], [4, 7, 
           9], [8]], [[1, 2, 3, 4, 6, 10], [5, 7, 9], [8]], [[1, 2, 3, 4, 5, 
           10], [6, 7, 9], [8]], [[1, 3, 5, 7, 8, 10], [2, 4, 6], [9]], [[1, 
           2, 5, 7, 8, 10], [3, 4, 6], [9]], [[1, 3, 4, 7, 8, 10], [2, 5, 
           6], [9]], [[1, 2, 4, 7, 8, 10], [3, 5, 6], [9]], [[1, 2, 3, 7, 8, 
           10], [4, 5, 6], [9]], [[1, 3, 5, 6, 8, 10], [2, 4, 7], [9]], [[1, 
           2, 5, 6, 8, 10], [3, 4, 7], [9]], [[1, 3, 4, 6, 8, 10], [2, 5, 
           7], [9]], [[1, 2, 4, 6, 8, 10], [3, 5, 7], [9]], [[1, 2, 3, 6, 8, 
           10], [4, 5, 7], [9]], [[1, 3, 4, 5, 8, 10], [2, 6, 7], [9]], [[1, 
           2, 4, 5, 8, 10], [3, 6, 7], [9]], [[1, 2, 3, 5, 8, 10], [4, 6, 
           7], [9]], [[1, 2, 3, 4, 8, 10], [5, 6, 7], [9]], [[1, 3, 5, 6, 7, 
           10], [2, 4, 8], [9]], [[1, 2, 5, 6, 7, 10], [3, 4, 8], [9]], [[1, 
           3, 4, 6, 7, 10], [2, 5, 8], [9]], [[1, 2, 4, 6, 7, 10], [3, 5, 
           8], [9]], [[1, 2, 3, 6, 7, 10], [4, 5, 8], [9]], [[1, 3, 4, 5, 7, 
           10], [2, 6, 8], [9]], [[1, 2, 4, 5, 7, 10], [3, 6, 8], [9]], [[1, 
           2, 3, 5, 7, 10], [4, 6, 8], [9]], [[1, 2, 3, 4, 7, 10], [5, 6, 
           8], [9]], [[1, 3, 4, 5, 6, 10], [2, 7, 8], [9]], [[1, 2, 4, 5, 6, 
           10], [3, 7, 8], [9]], [[1, 2, 3, 5, 6, 10], [4, 7, 8], [9]], [[1, 
           2, 3, 4, 6, 10], [5, 7, 8], [9]], [[1, 2, 3, 4, 5, 10], [6, 7, 
           8], [9]], [[1, 4, 6, 7, 8, 9], [2, 5, 10], [3]], [[1, 3, 6, 7, 8, 
           9], [2, 5, 10], [4]], [[1, 2, 6, 7, 8, 9], [3, 5, 10], [4]], [[1, 
           3, 6, 7, 8, 9], [2, 4, 10], [5]], [[1, 2, 6, 7, 8, 9], [3, 4, 
           10], [5]], [[1, 4, 5, 7, 8, 9], [2, 6, 10], [3]], [[1, 3, 5, 7, 8, 
           9], [2, 6, 10], [4]], [[1, 2, 5, 7, 8, 9], [3, 6, 10], [4]], [[1, 
           3, 4, 7, 8, 9], [2, 6, 10], [5]], [[1, 2, 4, 7, 8, 9], [3, 6, 
           10], [5]], [[1, 2, 3, 7, 8, 9], [4, 6, 10], [5]], [[1, 3, 5, 7, 8, 
           9], [2, 4, 10], [6]], [[1, 2, 5, 7, 8, 9], [3, 4, 10], [6]], [[1, 
           3, 4, 7, 8, 9], [2, 5, 10], [6]], [[1, 2, 4, 7, 8, 9], [3, 5, 
           10], [6]], [[1, 2, 3, 7, 8, 9], [4, 5, 10], [6]], [[1, 4, 5, 6, 8, 
           9], [2, 7, 10], [3]], [[1, 3, 5, 6, 8, 9], [2, 7, 10], [4]], [[1, 
           2, 5, 6, 8, 9], [3, 7, 10], [4]], [[1, 3, 4, 6, 8, 9], [2, 7, 
           10], [5]], [[1, 2, 4, 6, 8, 9], [3, 7, 10], [5]], [[1, 2, 3, 6, 8, 
           9], [4, 7, 10], [5]], [[1, 3, 4, 5, 8, 9], [2, 7, 10], [6]], [[1, 
           2, 4, 5, 8, 9], [3, 7, 10], [6]], [[1, 2, 3, 5, 8, 9], [4, 7, 
           10], [6]], [[1, 2, 3, 4, 8, 9], [5, 7, 10], [6]], [[1, 3, 5, 6, 8, 
           9], [2, 4, 10], [7]], [[1, 2, 5, 6, 8, 9], [3, 4, 10], [7]], [[1, 
           3, 4, 6, 8, 9], [2, 5, 10], [7]], [[1, 2, 4, 6, 8, 9], [3, 5, 
           10], [7]], [[1, 2, 3, 6, 8, 9], [4, 5, 10], [7]], [[1, 3, 4, 5, 8, 
           9], [2, 6, 10], [7]], [[1, 2, 4, 5, 8, 9], [3, 6, 10], [7]], [[1, 
           2, 3, 5, 8, 9], [4, 6, 10], [7]], [[1, 2, 3, 4, 8, 9], [5, 6, 
           10], [7]], [[1, 4, 5, 6, 7, 9], [2, 8, 10], [3]], [[1, 3, 5, 6, 7, 
           9], [2, 8, 10], [4]], [[1, 2, 5, 6, 7, 9], [3, 8, 10], [4]], [[1, 
           3, 4, 6, 7, 9], [2, 8, 10], [5]], [[1, 2, 4, 6, 7, 9], [3, 8, 
           10], [5]], [[1, 2, 3, 6, 7, 9], [4, 8, 10], [5]], [[1, 3, 4, 5, 7, 
           9], [2, 8, 10], [6]], [[1, 2, 4, 5, 7, 9], [3, 8, 10], [6]], [[1, 
           2, 3, 5, 7, 9], [4, 8, 10], [6]], [[1, 2, 3, 4, 7, 9], [5, 8, 
           10], [6]], [[1, 3, 4, 5, 6, 9], [2, 8, 10], [7]], [[1, 2, 4, 5, 6, 
           9], [3, 8, 10], [7]], [[1, 2, 3, 5, 6, 9], [4, 8, 10], [7]], [[1, 
           2, 3, 4, 6, 9], [5, 8, 10], [7]], [[1, 2, 3, 4, 5, 9], [6, 8, 
           10], [7]], [[1, 3, 5, 6, 7, 9], [2, 4, 10], [8]], [[1, 2, 5, 6, 7, 
           9], [3, 4, 10], [8]], [[1, 3, 4, 6, 7, 9], [2, 5, 10], [8]], [[1, 
           2, 4, 6, 7, 9], [3, 5, 10], [8]], [[1, 2, 3, 6, 7, 9], [4, 5, 
           10], [8]], [[1, 3, 4, 5, 7, 9], [2, 6, 10], [8]], [[1, 2, 4, 5, 7, 
           9], [3, 6, 10], [8]], [[1, 2, 3, 5, 7, 9], [4, 6, 10], [8]], [[1, 
           2, 3, 4, 7, 9], [5, 6, 10], [8]], [[1, 3, 4, 5, 6, 9], [2, 7, 
           10], [8]], [[1, 2, 4, 5, 6, 9], [3, 7, 10], [8]], [[1, 2, 3, 5, 6, 
           9], [4, 7, 10], [8]], [[1, 2, 3, 4, 6, 9], [5, 7, 10], [8]], [[1, 
           2, 3, 4, 5, 9], [6, 7, 10], [8]], [[1, 4, 5, 6, 7, 8], [2, 9, 
           10], [3]], [[1, 3, 5, 6, 7, 8], [2, 9, 10], [4]], [[1, 2, 5, 6, 7, 
           8], [3, 9, 10], [4]], [[1, 3, 4, 6, 7, 8], [2, 9, 10], [5]], [[1, 
           2, 4, 6, 7, 8], [3, 9, 10], [5]], [[1, 2, 3, 6, 7, 8], [4, 9, 
           10], [5]], [[1, 3, 4, 5, 7, 8], [2, 9, 10], [6]], [[1, 2, 4, 5, 7, 
           8], [3, 9, 10], [6]], [[1, 2, 3, 5, 7, 8], [4, 9, 10], [6]], [[1, 
           2, 3, 4, 7, 8], [5, 9, 10], [6]], [[1, 3, 4, 5, 6, 8], [2, 9, 
           10], [7]], [[1, 2, 4, 5, 6, 8], [3, 9, 10], [7]], [[1, 2, 3, 5, 6, 
           8], [4, 9, 10], [7]], [[1, 2, 3, 4, 6, 8], [5, 9, 10], [7]], [[1, 
           2, 3, 4, 5, 8], [6, 9, 10], [7]], [[1, 3, 4, 5, 6, 7], [2, 9, 
           10], [8]], [[1, 2, 4, 5, 6, 7], [3, 9, 10], [8]], [[1, 2, 3, 5, 6, 
           7], [4, 9, 10], [8]], [[1, 2, 3, 4, 6, 7], [5, 9, 10], [8]], [[1, 
           2, 3, 4, 5, 7], [6, 9, 10], [8]], [[1, 2, 3, 4, 5, 6], [7, 9, 
           10], [8]], [[1, 3, 5, 6, 7, 8], [2, 4, 10], [9]], [[1, 2, 5, 6, 7, 
           8], [3, 4, 10], [9]], [[1, 3, 4, 6, 7, 8], [2, 5, 10], [9]], [[1, 
           2, 4, 6, 7, 8], [3, 5, 10], [9]], [[1, 2, 3, 6, 7, 8], [4, 5, 
           10], [9]], [[1, 3, 4, 5, 7, 8], [2, 6, 10], [9]], [[1, 2, 4, 5, 7, 
           8], [3, 6, 10], [9]], [[1, 2, 3, 5, 7, 8], [4, 6, 10], [9]], [[1, 
           2, 3, 4, 7, 8], [5, 6, 10], [9]], [[1, 3, 4, 5, 6, 8], [2, 7, 
           10], [9]], [[1, 2, 4, 5, 6, 8], [3, 7, 10], [9]], [[1, 2, 3, 5, 6, 
           8], [4, 7, 10], [9]], [[1, 2, 3, 4, 6, 8], [5, 7, 10], [9]], [[1, 
           2, 3, 4, 5, 8], [6, 7, 10], [9]], [[1, 3, 4, 5, 6, 7], [2, 8, 
           10], [9]], [[1, 2, 4, 5, 6, 7], [3, 8, 10], [9]], [[1, 2, 3, 5, 6, 
           7], [4, 8, 10], [9]], [[1, 2, 3, 4, 6, 7], [5, 8, 10], [9]], [[1, 
           2, 3, 4, 5, 7], [6, 8, 10], [9]], [[1, 2, 3, 4, 5, 6], [7, 8, 
           10], [9]], [[1, 3, 5, 7, 8, 9], [2, 4, 6], [10]], [[1, 2, 5, 7, 8, 
           9], [3, 4, 6], [10]], [[1, 3, 4, 7, 8, 9], [2, 5, 6], [10]], [[1, 
           2, 4, 7, 8, 9], [3, 5, 6], [10]], [[1, 2, 3, 7, 8, 9], [4, 5, 
           6], [10]], [[1, 3, 5, 6, 8, 9], [2, 4, 7], [10]], [[1, 2, 5, 6, 8, 
           9], [3, 4, 7], [10]], [[1, 3, 4, 6, 8, 9], [2, 5, 7], [10]], [[1, 
           2, 4, 6, 8, 9], [3, 5, 7], [10]], [[1, 2, 3, 6, 8, 9], [4, 5, 
           7], [10]], [[1, 3, 4, 5, 8, 9], [2, 6, 7], [10]], [[1, 2, 4, 5, 8, 
           9], [3, 6, 7], [10]], [[1, 2, 3, 5, 8, 9], [4, 6, 7], [10]], [[1, 
           2, 3, 4, 8, 9], [5, 6, 7], [10]], [[1, 3, 5, 6, 7, 9], [2, 4, 
           8], [10]], [[1, 2, 5, 6, 7, 9], [3, 4, 8], [10]], [[1, 3, 4, 6, 7, 
           9], [2, 5, 8], [10]], [[1, 2, 4, 6, 7, 9], [3, 5, 8], [10]], [[1, 
           2, 3, 6, 7, 9], [4, 5, 8], [10]], [[1, 3, 4, 5, 7, 9], [2, 6, 
           8], [10]], [[1, 2, 4, 5, 7, 9], [3, 6, 8], [10]], [[1, 2, 3, 5, 7, 
           9], [4, 6, 8], [10]], [[1, 2, 3, 4, 7, 9], [5, 6, 8], [10]], [[1, 
           3, 4, 5, 6, 9], [2, 7, 8], [10]], [[1, 2, 4, 5, 6, 9], [3, 7, 
           8], [10]], [[1, 2, 3, 5, 6, 9], [4, 7, 8], [10]], [[1, 2, 3, 4, 6, 
           9], [5, 7, 8], [10]], [[1, 2, 3, 4, 5, 9], [6, 7, 8], [10]], [[1, 
           3, 5, 6, 7, 8], [2, 4, 9], [10]], [[1, 2, 5, 6, 7, 8], [3, 4, 
           9], [10]], [[1, 3, 4, 6, 7, 8], [2, 5, 9], [10]], [[1, 2, 4, 6, 7, 
           8], [3, 5, 9], [10]], [[1, 2, 3, 6, 7, 8], [4, 5, 9], [10]], [[1, 
           3, 4, 5, 7, 8], [2, 6, 9], [10]], [[1, 2, 4, 5, 7, 8], [3, 6, 
           9], [10]], [[1, 2, 3, 5, 7, 8], [4, 6, 9], [10]], [[1, 2, 3, 4, 7, 
           8], [5, 6, 9], [10]], [[1, 3, 4, 5, 6, 8], [2, 7, 9], [10]], [[1, 
           2, 4, 5, 6, 8], [3, 7, 9], [10]], [[1, 2, 3, 5, 6, 8], [4, 7, 
           9], [10]], [[1, 2, 3, 4, 6, 8], [5, 7, 9], [10]], [[1, 2, 3, 4, 5, 
           8], [6, 7, 9], [10]], [[1, 3, 4, 5, 6, 7], [2, 8, 9], [10]], [[1, 
           2, 4, 5, 6, 7], [3, 8, 9], [10]], [[1, 2, 3, 5, 6, 7], [4, 8, 
           9], [10]], [[1, 2, 3, 4, 6, 7], [5, 8, 9], [10]], [[1, 2, 3, 4, 5, 
           7], [6, 8, 9], [10]], [[1, 2, 3, 4, 5, 6], [7, 8, 9], [10]]]
        
    elif T==[[1, 1, 1, 1, 1, 1], [1, 1], [1, 1]]:
        
        return [[[1, 4, 7, 8, 9, 10], [2, 5], [3, 6]], [[1, 3, 7, 8, 9, 10], [2, 
           5], [4, 6]], [[1, 2, 7, 8, 9, 10], [3, 5], [4, 6]], [[1, 3, 7, 8, 
           9, 10], [2, 4], [5, 6]], [[1, 2, 7, 8, 9, 10], [3, 4], [5, 
           6]], [[1, 4, 6, 8, 9, 10], [2, 5], [3, 7]], [[1, 3, 6, 8, 9, 
           10], [2, 5], [4, 7]], [[1, 2, 6, 8, 9, 10], [3, 5], [4, 7]], [[1, 
           3, 6, 8, 9, 10], [2, 4], [5, 7]], [[1, 2, 6, 8, 9, 10], [3, 4], [5,
            7]], [[1, 4, 5, 8, 9, 10], [2, 6], [3, 7]], [[1, 3, 5, 8, 9, 
           10], [2, 6], [4, 7]], [[1, 2, 5, 8, 9, 10], [3, 6], [4, 7]], [[1, 
           3, 4, 8, 9, 10], [2, 6], [5, 7]], [[1, 2, 4, 8, 9, 10], [3, 6], [5,
            7]], [[1, 2, 3, 8, 9, 10], [4, 6], [5, 7]], [[1, 3, 5, 8, 9, 
           10], [2, 4], [6, 7]], [[1, 2, 5, 8, 9, 10], [3, 4], [6, 7]], [[1, 
           3, 4, 8, 9, 10], [2, 5], [6, 7]], [[1, 2, 4, 8, 9, 10], [3, 5], [6,
            7]], [[1, 2, 3, 8, 9, 10], [4, 5], [6, 7]], [[1, 4, 6, 7, 9, 
           10], [2, 5], [3, 8]], [[1, 3, 6, 7, 9, 10], [2, 5], [4, 8]], [[1, 
           2, 6, 7, 9, 10], [3, 5], [4, 8]], [[1, 3, 6, 7, 9, 10], [2, 4], [5,
            8]], [[1, 2, 6, 7, 9, 10], [3, 4], [5, 8]], [[1, 4, 5, 7, 9, 
           10], [2, 6], [3, 8]], [[1, 3, 5, 7, 9, 10], [2, 6], [4, 8]], [[1, 
           2, 5, 7, 9, 10], [3, 6], [4, 8]], [[1, 3, 4, 7, 9, 10], [2, 6], [5,
            8]], [[1, 2, 4, 7, 9, 10], [3, 6], [5, 8]], [[1, 2, 3, 7, 9, 
           10], [4, 6], [5, 8]], [[1, 3, 5, 7, 9, 10], [2, 4], [6, 8]], [[1, 
           2, 5, 7, 9, 10], [3, 4], [6, 8]], [[1, 3, 4, 7, 9, 10], [2, 5], [6,
            8]], [[1, 2, 4, 7, 9, 10], [3, 5], [6, 8]], [[1, 2, 3, 7, 9, 
           10], [4, 5], [6, 8]], [[1, 4, 5, 6, 9, 10], [2, 7], [3, 8]], [[1, 
           3, 5, 6, 9, 10], [2, 7], [4, 8]], [[1, 2, 5, 6, 9, 10], [3, 7], [4,
            8]], [[1, 3, 4, 6, 9, 10], [2, 7], [5, 8]], [[1, 2, 4, 6, 9, 
           10], [3, 7], [5, 8]], [[1, 2, 3, 6, 9, 10], [4, 7], [5, 8]], [[1, 
           3, 4, 5, 9, 10], [2, 7], [6, 8]], [[1, 2, 4, 5, 9, 10], [3, 7], [6,
            8]], [[1, 2, 3, 5, 9, 10], [4, 7], [6, 8]], [[1, 2, 3, 4, 9, 
           10], [5, 7], [6, 8]], [[1, 3, 5, 6, 9, 10], [2, 4], [7, 8]], [[1, 
           2, 5, 6, 9, 10], [3, 4], [7, 8]], [[1, 3, 4, 6, 9, 10], [2, 5], [7,
            8]], [[1, 2, 4, 6, 9, 10], [3, 5], [7, 8]], [[1, 2, 3, 6, 9, 
           10], [4, 5], [7, 8]], [[1, 3, 4, 5, 9, 10], [2, 6], [7, 8]], [[1, 
           2, 4, 5, 9, 10], [3, 6], [7, 8]], [[1, 2, 3, 5, 9, 10], [4, 6], [7,
            8]], [[1, 2, 3, 4, 9, 10], [5, 6], [7, 8]], [[1, 4, 6, 7, 8, 
           10], [2, 5], [3, 9]], [[1, 3, 6, 7, 8, 10], [2, 5], [4, 9]], [[1, 
           2, 6, 7, 8, 10], [3, 5], [4, 9]], [[1, 3, 6, 7, 8, 10], [2, 4], [5,
            9]], [[1, 2, 6, 7, 8, 10], [3, 4], [5, 9]], [[1, 4, 5, 7, 8, 
           10], [2, 6], [3, 9]], [[1, 3, 5, 7, 8, 10], [2, 6], [4, 9]], [[1, 
           2, 5, 7, 8, 10], [3, 6], [4, 9]], [[1, 3, 4, 7, 8, 10], [2, 6], [5,
            9]], [[1, 2, 4, 7, 8, 10], [3, 6], [5, 9]], [[1, 2, 3, 7, 8, 
           10], [4, 6], [5, 9]], [[1, 3, 5, 7, 8, 10], [2, 4], [6, 9]], [[1, 
           2, 5, 7, 8, 10], [3, 4], [6, 9]], [[1, 3, 4, 7, 8, 10], [2, 5], [6,
            9]], [[1, 2, 4, 7, 8, 10], [3, 5], [6, 9]], [[1, 2, 3, 7, 8, 
           10], [4, 5], [6, 9]], [[1, 4, 5, 6, 8, 10], [2, 7], [3, 9]], [[1, 
           3, 5, 6, 8, 10], [2, 7], [4, 9]], [[1, 2, 5, 6, 8, 10], [3, 7], [4,
            9]], [[1, 3, 4, 6, 8, 10], [2, 7], [5, 9]], [[1, 2, 4, 6, 8, 
           10], [3, 7], [5, 9]], [[1, 2, 3, 6, 8, 10], [4, 7], [5, 9]], [[1, 
           3, 4, 5, 8, 10], [2, 7], [6, 9]], [[1, 2, 4, 5, 8, 10], [3, 7], [6,
            9]], [[1, 2, 3, 5, 8, 10], [4, 7], [6, 9]], [[1, 2, 3, 4, 8, 
           10], [5, 7], [6, 9]], [[1, 3, 5, 6, 8, 10], [2, 4], [7, 9]], [[1, 
           2, 5, 6, 8, 10], [3, 4], [7, 9]], [[1, 3, 4, 6, 8, 10], [2, 5], [7,
            9]], [[1, 2, 4, 6, 8, 10], [3, 5], [7, 9]], [[1, 2, 3, 6, 8, 
           10], [4, 5], [7, 9]], [[1, 3, 4, 5, 8, 10], [2, 6], [7, 9]], [[1, 
           2, 4, 5, 8, 10], [3, 6], [7, 9]], [[1, 2, 3, 5, 8, 10], [4, 6], [7,
            9]], [[1, 2, 3, 4, 8, 10], [5, 6], [7, 9]], [[1, 4, 5, 6, 7, 
           10], [2, 8], [3, 9]], [[1, 3, 5, 6, 7, 10], [2, 8], [4, 9]], [[1, 
           2, 5, 6, 7, 10], [3, 8], [4, 9]], [[1, 3, 4, 6, 7, 10], [2, 8], [5,
            9]], [[1, 2, 4, 6, 7, 10], [3, 8], [5, 9]], [[1, 2, 3, 6, 7, 
           10], [4, 8], [5, 9]], [[1, 3, 4, 5, 7, 10], [2, 8], [6, 9]], [[1, 
           2, 4, 5, 7, 10], [3, 8], [6, 9]], [[1, 2, 3, 5, 7, 10], [4, 8], [6,
            9]], [[1, 2, 3, 4, 7, 10], [5, 8], [6, 9]], [[1, 3, 4, 5, 6, 
           10], [2, 8], [7, 9]], [[1, 2, 4, 5, 6, 10], [3, 8], [7, 9]], [[1, 
           2, 3, 5, 6, 10], [4, 8], [7, 9]], [[1, 2, 3, 4, 6, 10], [5, 8], [7,
            9]], [[1, 2, 3, 4, 5, 10], [6, 8], [7, 9]], [[1, 3, 5, 6, 7, 
           10], [2, 4], [8, 9]], [[1, 2, 5, 6, 7, 10], [3, 4], [8, 9]], [[1, 
           3, 4, 6, 7, 10], [2, 5], [8, 9]], [[1, 2, 4, 6, 7, 10], [3, 5], [8,
            9]], [[1, 2, 3, 6, 7, 10], [4, 5], [8, 9]], [[1, 3, 4, 5, 7, 
           10], [2, 6], [8, 9]], [[1, 2, 4, 5, 7, 10], [3, 6], [8, 9]], [[1, 
           2, 3, 5, 7, 10], [4, 6], [8, 9]], [[1, 2, 3, 4, 7, 10], [5, 6], [8,
            9]], [[1, 3, 4, 5, 6, 10], [2, 7], [8, 9]], [[1, 2, 4, 5, 6, 
           10], [3, 7], [8, 9]], [[1, 2, 3, 5, 6, 10], [4, 7], [8, 9]], [[1, 
           2, 3, 4, 6, 10], [5, 7], [8, 9]], [[1, 2, 3, 4, 5, 10], [6, 7], [8,
            9]], [[1, 4, 6, 7, 8, 9], [2, 5], [3, 10]], [[1, 3, 6, 7, 8, 
           9], [2, 5], [4, 10]], [[1, 2, 6, 7, 8, 9], [3, 5], [4, 10]], [[1, 
           3, 6, 7, 8, 9], [2, 4], [5, 10]], [[1, 2, 6, 7, 8, 9], [3, 4], [5, 
           10]], [[1, 4, 5, 7, 8, 9], [2, 6], [3, 10]], [[1, 3, 5, 7, 8, 
           9], [2, 6], [4, 10]], [[1, 2, 5, 7, 8, 9], [3, 6], [4, 10]], [[1, 
           3, 4, 7, 8, 9], [2, 6], [5, 10]], [[1, 2, 4, 7, 8, 9], [3, 6], [5, 
           10]], [[1, 2, 3, 7, 8, 9], [4, 6], [5, 10]], [[1, 3, 5, 7, 8, 
           9], [2, 4], [6, 10]], [[1, 2, 5, 7, 8, 9], [3, 4], [6, 10]], [[1, 
           3, 4, 7, 8, 9], [2, 5], [6, 10]], [[1, 2, 4, 7, 8, 9], [3, 5], [6, 
           10]], [[1, 2, 3, 7, 8, 9], [4, 5], [6, 10]], [[1, 4, 5, 6, 8, 
           9], [2, 7], [3, 10]], [[1, 3, 5, 6, 8, 9], [2, 7], [4, 10]], [[1, 
           2, 5, 6, 8, 9], [3, 7], [4, 10]], [[1, 3, 4, 6, 8, 9], [2, 7], [5, 
           10]], [[1, 2, 4, 6, 8, 9], [3, 7], [5, 10]], [[1, 2, 3, 6, 8, 
           9], [4, 7], [5, 10]], [[1, 3, 4, 5, 8, 9], [2, 7], [6, 10]], [[1, 
           2, 4, 5, 8, 9], [3, 7], [6, 10]], [[1, 2, 3, 5, 8, 9], [4, 7], [6, 
           10]], [[1, 2, 3, 4, 8, 9], [5, 7], [6, 10]], [[1, 3, 5, 6, 8, 
           9], [2, 4], [7, 10]], [[1, 2, 5, 6, 8, 9], [3, 4], [7, 10]], [[1, 
           3, 4, 6, 8, 9], [2, 5], [7, 10]], [[1, 2, 4, 6, 8, 9], [3, 5], [7, 
           10]], [[1, 2, 3, 6, 8, 9], [4, 5], [7, 10]], [[1, 3, 4, 5, 8, 
           9], [2, 6], [7, 10]], [[1, 2, 4, 5, 8, 9], [3, 6], [7, 10]], [[1, 
           2, 3, 5, 8, 9], [4, 6], [7, 10]], [[1, 2, 3, 4, 8, 9], [5, 6], [7, 
           10]], [[1, 4, 5, 6, 7, 9], [2, 8], [3, 10]], [[1, 3, 5, 6, 7, 
           9], [2, 8], [4, 10]], [[1, 2, 5, 6, 7, 9], [3, 8], [4, 10]], [[1, 
           3, 4, 6, 7, 9], [2, 8], [5, 10]], [[1, 2, 4, 6, 7, 9], [3, 8], [5, 
           10]], [[1, 2, 3, 6, 7, 9], [4, 8], [5, 10]], [[1, 3, 4, 5, 7, 
           9], [2, 8], [6, 10]], [[1, 2, 4, 5, 7, 9], [3, 8], [6, 10]], [[1, 
           2, 3, 5, 7, 9], [4, 8], [6, 10]], [[1, 2, 3, 4, 7, 9], [5, 8], [6, 
           10]], [[1, 3, 4, 5, 6, 9], [2, 8], [7, 10]], [[1, 2, 4, 5, 6, 
           9], [3, 8], [7, 10]], [[1, 2, 3, 5, 6, 9], [4, 8], [7, 10]], [[1, 
           2, 3, 4, 6, 9], [5, 8], [7, 10]], [[1, 2, 3, 4, 5, 9], [6, 8], [7, 
           10]], [[1, 3, 5, 6, 7, 9], [2, 4], [8, 10]], [[1, 2, 5, 6, 7, 
           9], [3, 4], [8, 10]], [[1, 3, 4, 6, 7, 9], [2, 5], [8, 10]], [[1, 
           2, 4, 6, 7, 9], [3, 5], [8, 10]], [[1, 2, 3, 6, 7, 9], [4, 5], [8, 
           10]], [[1, 3, 4, 5, 7, 9], [2, 6], [8, 10]], [[1, 2, 4, 5, 7, 
           9], [3, 6], [8, 10]], [[1, 2, 3, 5, 7, 9], [4, 6], [8, 10]], [[1, 
           2, 3, 4, 7, 9], [5, 6], [8, 10]], [[1, 3, 4, 5, 6, 9], [2, 7], [8, 
           10]], [[1, 2, 4, 5, 6, 9], [3, 7], [8, 10]], [[1, 2, 3, 5, 6, 
           9], [4, 7], [8, 10]], [[1, 2, 3, 4, 6, 9], [5, 7], [8, 10]], [[1, 
           2, 3, 4, 5, 9], [6, 7], [8, 10]], [[1, 4, 5, 6, 7, 8], [2, 9], [3, 
           10]], [[1, 3, 5, 6, 7, 8], [2, 9], [4, 10]], [[1, 2, 5, 6, 7, 
           8], [3, 9], [4, 10]], [[1, 3, 4, 6, 7, 8], [2, 9], [5, 10]], [[1, 
           2, 4, 6, 7, 8], [3, 9], [5, 10]], [[1, 2, 3, 6, 7, 8], [4, 9], [5, 
           10]], [[1, 3, 4, 5, 7, 8], [2, 9], [6, 10]], [[1, 2, 4, 5, 7, 
           8], [3, 9], [6, 10]], [[1, 2, 3, 5, 7, 8], [4, 9], [6, 10]], [[1, 
           2, 3, 4, 7, 8], [5, 9], [6, 10]], [[1, 3, 4, 5, 6, 8], [2, 9], [7, 
           10]], [[1, 2, 4, 5, 6, 8], [3, 9], [7, 10]], [[1, 2, 3, 5, 6, 
           8], [4, 9], [7, 10]], [[1, 2, 3, 4, 6, 8], [5, 9], [7, 10]], [[1, 
           2, 3, 4, 5, 8], [6, 9], [7, 10]], [[1, 3, 4, 5, 6, 7], [2, 9], [8, 
           10]], [[1, 2, 4, 5, 6, 7], [3, 9], [8, 10]], [[1, 2, 3, 5, 6, 
           7], [4, 9], [8, 10]], [[1, 2, 3, 4, 6, 7], [5, 9], [8, 10]], [[1, 
           2, 3, 4, 5, 7], [6, 9], [8, 10]], [[1, 2, 3, 4, 5, 6], [7, 9], [8, 
           10]], [[1, 3, 5, 6, 7, 8], [2, 4], [9, 10]], [[1, 2, 5, 6, 7, 
           8], [3, 4], [9, 10]], [[1, 3, 4, 6, 7, 8], [2, 5], [9, 10]], [[1, 
           2, 4, 6, 7, 8], [3, 5], [9, 10]], [[1, 2, 3, 6, 7, 8], [4, 5], [9, 
           10]], [[1, 3, 4, 5, 7, 8], [2, 6], [9, 10]], [[1, 2, 4, 5, 7, 
           8], [3, 6], [9, 10]], [[1, 2, 3, 5, 7, 8], [4, 6], [9, 10]], [[1, 
           2, 3, 4, 7, 8], [5, 6], [9, 10]], [[1, 3, 4, 5, 6, 8], [2, 7], [9, 
           10]], [[1, 2, 4, 5, 6, 8], [3, 7], [9, 10]], [[1, 2, 3, 5, 6, 
           8], [4, 7], [9, 10]], [[1, 2, 3, 4, 6, 8], [5, 7], [9, 10]], [[1, 
           2, 3, 4, 5, 8], [6, 7], [9, 10]], [[1, 3, 4, 5, 6, 7], [2, 8], [9, 
           10]], [[1, 2, 4, 5, 6, 7], [3, 8], [9, 10]], [[1, 2, 3, 5, 6, 
           7], [4, 8], [9, 10]], [[1, 2, 3, 4, 6, 7], [5, 8], [9, 10]], [[1, 
           2, 3, 4, 5, 7], [6, 8], [9, 10]], [[1, 2, 3, 4, 5, 6], [7, 8], [9, 
           10]]]
        
    elif T==[[1, 1, 1, 1, 1], [1, 1, 1, 1, 1], []]:
        
        MPM=[[[1, 3, 5, 7, 9], [2, 4, 6, 8, 10]], [[1, 2, 5, 7, 9], [3, 4, 6, 8, 
           10]], [[1, 3, 4, 7, 9], [2, 5, 6, 8, 10]], [[1, 2, 4, 7, 9], [3, 5,
            6, 8, 10]], [[1, 2, 3, 7, 9], [4, 5, 6, 8, 10]], [[1, 3, 5, 6, 
           9], [2, 4, 7, 8, 10]], [[1, 2, 5, 6, 9], [3, 4, 7, 8, 10]], [[1, 3,
            4, 6, 9], [2, 5, 7, 8, 10]], [[1, 2, 4, 6, 9], [3, 5, 7, 8, 
           10]], [[1, 2, 3, 6, 9], [4, 5, 7, 8, 10]], [[1, 3, 4, 5, 9], [2, 6,
            7, 8, 10]], [[1, 2, 4, 5, 9], [3, 6, 7, 8, 10]], [[1, 2, 3, 5, 
           9], [4, 6, 7, 8, 10]], [[1, 2, 3, 4, 9], [5, 6, 7, 8, 10]], [[1, 3,
            5, 7, 8], [2, 4, 6, 9, 10]], [[1, 2, 5, 7, 8], [3, 4, 6, 9, 
           10]], [[1, 3, 4, 7, 8], [2, 5, 6, 9, 10]], [[1, 2, 4, 7, 8], [3, 5,
            6, 9, 10]], [[1, 2, 3, 7, 8], [4, 5, 6, 9, 10]], [[1, 3, 5, 6, 
           8], [2, 4, 7, 9, 10]], [[1, 2, 5, 6, 8], [3, 4, 7, 9, 10]], [[1, 3,
            4, 6, 8], [2, 5, 7, 9, 10]], [[1, 2, 4, 6, 8], [3, 5, 7, 9, 
           10]], [[1, 2, 3, 6, 8], [4, 5, 7, 9, 10]], [[1, 3, 4, 5, 8], [2, 6,
            7, 9, 10]], [[1, 2, 4, 5, 8], [3, 6, 7, 9, 10]], [[1, 2, 3, 5, 
           8], [4, 6, 7, 9, 10]], [[1, 2, 3, 4, 8], [5, 6, 7, 9, 10]], [[1, 3,
            5, 6, 7], [2, 4, 8, 9, 10]], [[1, 2, 5, 6, 7], [3, 4, 8, 9, 
           10]], [[1, 3, 4, 6, 7], [2, 5, 8, 9, 10]], [[1, 2, 4, 6, 7], [3, 5,
            8, 9, 10]], [[1, 2, 3, 6, 7], [4, 5, 8, 9, 10]], [[1, 3, 4, 5, 
           7], [2, 6, 8, 9, 10]], [[1, 2, 4, 5, 7], [3, 6, 8, 9, 10]], [[1, 2,
            3, 5, 7], [4, 6, 8, 9, 10]], [[1, 2, 3, 4, 7], [5, 6, 8, 9, 
           10]], [[1, 3, 4, 5, 6], [2, 7, 8, 9, 10]], [[1, 2, 4, 5, 6], [3, 7,
            8, 9, 10]], [[1, 2, 3, 5, 6], [4, 7, 8, 9, 10]], [[1, 2, 3, 4, 
           6], [5, 7, 8, 9, 10]], [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]]]

        for i in MPM:
            i.append([])

        return MPM                                                               
        
    elif T==[[1, 1, 1, 1, 1], [1, 1, 1, 1], [1]]:
        
        return [[[1, 4, 6, 8, 10], [2, 5, 7, 9], [3]], [[1, 3, 6, 8, 10], [2, 5, 7, 
           9], [4]], [[1, 2, 6, 8, 10], [3, 5, 7, 9], [4]], [[1, 3, 6, 8, 
           10], [2, 4, 7, 9], [5]], [[1, 2, 6, 8, 10], [3, 4, 7, 
           9], [5]], [[1, 4, 5, 8, 10], [2, 6, 7, 9], [3]], [[1, 3, 5, 8, 
           10], [2, 6, 7, 9], [4]], [[1, 2, 5, 8, 10], [3, 6, 7, 
           9], [4]], [[1, 3, 4, 8, 10], [2, 6, 7, 9], [5]], [[1, 2, 4, 8, 
           10], [3, 6, 7, 9], [5]], [[1, 2, 3, 8, 10], [4, 6, 7, 
           9], [5]], [[1, 3, 5, 8, 10], [2, 4, 7, 9], [6]], [[1, 2, 5, 8, 
           10], [3, 4, 7, 9], [6]], [[1, 3, 4, 8, 10], [2, 5, 7, 
           9], [6]], [[1, 2, 4, 8, 10], [3, 5, 7, 9], [6]], [[1, 2, 3, 8, 
           10], [4, 5, 7, 9], [6]], [[1, 3, 5, 8, 10], [2, 4, 6, 
           9], [7]], [[1, 2, 5, 8, 10], [3, 4, 6, 9], [7]], [[1, 3, 4, 8, 
           10], [2, 5, 6, 9], [7]], [[1, 2, 4, 8, 10], [3, 5, 6, 
           9], [7]], [[1, 2, 3, 8, 10], [4, 5, 6, 9], [7]], [[1, 4, 6, 7, 
           10], [2, 5, 8, 9], [3]], [[1, 3, 6, 7, 10], [2, 5, 8, 
           9], [4]], [[1, 2, 6, 7, 10], [3, 5, 8, 9], [4]], [[1, 3, 6, 7, 
           10], [2, 4, 8, 9], [5]], [[1, 2, 6, 7, 10], [3, 4, 8, 
           9], [5]], [[1, 4, 5, 7, 10], [2, 6, 8, 9], [3]], [[1, 3, 5, 7, 
           10], [2, 6, 8, 9], [4]], [[1, 2, 5, 7, 10], [3, 6, 8, 
           9], [4]], [[1, 3, 4, 7, 10], [2, 6, 8, 9], [5]], [[1, 2, 4, 7, 
           10], [3, 6, 8, 9], [5]], [[1, 2, 3, 7, 10], [4, 6, 8, 
           9], [5]], [[1, 3, 5, 7, 10], [2, 4, 8, 9], [6]], [[1, 2, 5, 7, 
           10], [3, 4, 8, 9], [6]], [[1, 3, 4, 7, 10], [2, 5, 8, 
           9], [6]], [[1, 2, 4, 7, 10], [3, 5, 8, 9], [6]], [[1, 2, 3, 7, 
           10], [4, 5, 8, 9], [6]], [[1, 4, 5, 6, 10], [2, 7, 8, 
           9], [3]], [[1, 3, 5, 6, 10], [2, 7, 8, 9], [4]], [[1, 2, 5, 6, 
           10], [3, 7, 8, 9], [4]], [[1, 3, 4, 6, 10], [2, 7, 8, 
           9], [5]], [[1, 2, 4, 6, 10], [3, 7, 8, 9], [5]], [[1, 2, 3, 6, 
           10], [4, 7, 8, 9], [5]], [[1, 3, 4, 5, 10], [2, 7, 8, 
           9], [6]], [[1, 2, 4, 5, 10], [3, 7, 8, 9], [6]], [[1, 2, 3, 5, 
           10], [4, 7, 8, 9], [6]], [[1, 2, 3, 4, 10], [5, 7, 8, 
           9], [6]], [[1, 3, 5, 6, 10], [2, 4, 8, 9], [7]], [[1, 2, 5, 6, 
           10], [3, 4, 8, 9], [7]], [[1, 3, 4, 6, 10], [2, 5, 8, 
           9], [7]], [[1, 2, 4, 6, 10], [3, 5, 8, 9], [7]], [[1, 2, 3, 6, 
           10], [4, 5, 8, 9], [7]], [[1, 3, 4, 5, 10], [2, 6, 8, 
           9], [7]], [[1, 2, 4, 5, 10], [3, 6, 8, 9], [7]], [[1, 2, 3, 5, 
           10], [4, 6, 8, 9], [7]], [[1, 2, 3, 4, 10], [5, 6, 8, 
           9], [7]], [[1, 3, 5, 7, 10], [2, 4, 6, 9], [8]], [[1, 2, 5, 7, 
           10], [3, 4, 6, 9], [8]], [[1, 3, 4, 7, 10], [2, 5, 6, 
           9], [8]], [[1, 2, 4, 7, 10], [3, 5, 6, 9], [8]], [[1, 2, 3, 7, 
           10], [4, 5, 6, 9], [8]], [[1, 3, 5, 6, 10], [2, 4, 7, 
           9], [8]], [[1, 2, 5, 6, 10], [3, 4, 7, 9], [8]], [[1, 3, 4, 6, 
           10], [2, 5, 7, 9], [8]], [[1, 2, 4, 6, 10], [3, 5, 7, 
           9], [8]], [[1, 2, 3, 6, 10], [4, 5, 7, 9], [8]], [[1, 3, 4, 5, 
           10], [2, 6, 7, 9], [8]], [[1, 2, 4, 5, 10], [3, 6, 7, 
           9], [8]], [[1, 2, 3, 5, 10], [4, 6, 7, 9], [8]], [[1, 2, 3, 4, 
           10], [5, 6, 7, 9], [8]], [[1, 3, 5, 7, 10], [2, 4, 6, 
           8], [9]], [[1, 2, 5, 7, 10], [3, 4, 6, 8], [9]], [[1, 3, 4, 7, 
           10], [2, 5, 6, 8], [9]], [[1, 2, 4, 7, 10], [3, 5, 6, 
           8], [9]], [[1, 2, 3, 7, 10], [4, 5, 6, 8], [9]], [[1, 3, 5, 6, 
           10], [2, 4, 7, 8], [9]], [[1, 2, 5, 6, 10], [3, 4, 7, 
           8], [9]], [[1, 3, 4, 6, 10], [2, 5, 7, 8], [9]], [[1, 2, 4, 6, 
           10], [3, 5, 7, 8], [9]], [[1, 2, 3, 6, 10], [4, 5, 7, 
           8], [9]], [[1, 3, 4, 5, 10], [2, 6, 7, 8], [9]], [[1, 2, 4, 5, 
           10], [3, 6, 7, 8], [9]], [[1, 2, 3, 5, 10], [4, 6, 7, 
           8], [9]], [[1, 2, 3, 4, 10], [5, 6, 7, 8], [9]], [[1, 4, 6, 8, 
           9], [2, 5, 7, 10], [3]], [[1, 3, 6, 8, 9], [2, 5, 7, 
           10], [4]], [[1, 2, 6, 8, 9], [3, 5, 7, 10], [4]], [[1, 3, 6, 8, 
           9], [2, 4, 7, 10], [5]], [[1, 2, 6, 8, 9], [3, 4, 7, 
           10], [5]], [[1, 4, 5, 8, 9], [2, 6, 7, 10], [3]], [[1, 3, 5, 8, 
           9], [2, 6, 7, 10], [4]], [[1, 2, 5, 8, 9], [3, 6, 7, 
           10], [4]], [[1, 3, 4, 8, 9], [2, 6, 7, 10], [5]], [[1, 2, 4, 8, 
           9], [3, 6, 7, 10], [5]], [[1, 2, 3, 8, 9], [4, 6, 7, 
           10], [5]], [[1, 3, 5, 8, 9], [2, 4, 7, 10], [6]], [[1, 2, 5, 8, 
           9], [3, 4, 7, 10], [6]], [[1, 3, 4, 8, 9], [2, 5, 7, 
           10], [6]], [[1, 2, 4, 8, 9], [3, 5, 7, 10], [6]], [[1, 2, 3, 8, 
           9], [4, 5, 7, 10], [6]], [[1, 3, 5, 8, 9], [2, 4, 6, 
           10], [7]], [[1, 2, 5, 8, 9], [3, 4, 6, 10], [7]], [[1, 3, 4, 8, 
           9], [2, 5, 6, 10], [7]], [[1, 2, 4, 8, 9], [3, 5, 6, 
           10], [7]], [[1, 2, 3, 8, 9], [4, 5, 6, 10], [7]], [[1, 4, 6, 7, 
           9], [2, 5, 8, 10], [3]], [[1, 3, 6, 7, 9], [2, 5, 8, 
           10], [4]], [[1, 2, 6, 7, 9], [3, 5, 8, 10], [4]], [[1, 3, 6, 7, 
           9], [2, 4, 8, 10], [5]], [[1, 2, 6, 7, 9], [3, 4, 8, 
           10], [5]], [[1, 4, 5, 7, 9], [2, 6, 8, 10], [3]], [[1, 3, 5, 7, 
           9], [2, 6, 8, 10], [4]], [[1, 2, 5, 7, 9], [3, 6, 8, 
           10], [4]], [[1, 3, 4, 7, 9], [2, 6, 8, 10], [5]], [[1, 2, 4, 7, 
           9], [3, 6, 8, 10], [5]], [[1, 2, 3, 7, 9], [4, 6, 8, 
           10], [5]], [[1, 3, 5, 7, 9], [2, 4, 8, 10], [6]], [[1, 2, 5, 7, 
           9], [3, 4, 8, 10], [6]], [[1, 3, 4, 7, 9], [2, 5, 8, 
           10], [6]], [[1, 2, 4, 7, 9], [3, 5, 8, 10], [6]], [[1, 2, 3, 7, 
           9], [4, 5, 8, 10], [6]], [[1, 4, 5, 6, 9], [2, 7, 8, 
           10], [3]], [[1, 3, 5, 6, 9], [2, 7, 8, 10], [4]], [[1, 2, 5, 6, 
           9], [3, 7, 8, 10], [4]], [[1, 3, 4, 6, 9], [2, 7, 8, 
           10], [5]], [[1, 2, 4, 6, 9], [3, 7, 8, 10], [5]], [[1, 2, 3, 6, 
           9], [4, 7, 8, 10], [5]], [[1, 3, 4, 5, 9], [2, 7, 8, 
           10], [6]], [[1, 2, 4, 5, 9], [3, 7, 8, 10], [6]], [[1, 2, 3, 5, 
           9], [4, 7, 8, 10], [6]], [[1, 2, 3, 4, 9], [5, 7, 8, 
           10], [6]], [[1, 3, 5, 6, 9], [2, 4, 8, 10], [7]], [[1, 2, 5, 6, 
           9], [3, 4, 8, 10], [7]], [[1, 3, 4, 6, 9], [2, 5, 8, 
           10], [7]], [[1, 2, 4, 6, 9], [3, 5, 8, 10], [7]], [[1, 2, 3, 6, 
           9], [4, 5, 8, 10], [7]], [[1, 3, 4, 5, 9], [2, 6, 8, 
           10], [7]], [[1, 2, 4, 5, 9], [3, 6, 8, 10], [7]], [[1, 2, 3, 5, 
           9], [4, 6, 8, 10], [7]], [[1, 2, 3, 4, 9], [5, 6, 8, 
           10], [7]], [[1, 3, 5, 7, 9], [2, 4, 6, 10], [8]], [[1, 2, 5, 7, 
           9], [3, 4, 6, 10], [8]], [[1, 3, 4, 7, 9], [2, 5, 6, 
           10], [8]], [[1, 2, 4, 7, 9], [3, 5, 6, 10], [8]], [[1, 2, 3, 7, 
           9], [4, 5, 6, 10], [8]], [[1, 3, 5, 6, 9], [2, 4, 7, 
           10], [8]], [[1, 2, 5, 6, 9], [3, 4, 7, 10], [8]], [[1, 3, 4, 6, 
           9], [2, 5, 7, 10], [8]], [[1, 2, 4, 6, 9], [3, 5, 7, 
           10], [8]], [[1, 2, 3, 6, 9], [4, 5, 7, 10], [8]], [[1, 3, 4, 5, 
           9], [2, 6, 7, 10], [8]], [[1, 2, 4, 5, 9], [3, 6, 7, 
           10], [8]], [[1, 2, 3, 5, 9], [4, 6, 7, 10], [8]], [[1, 2, 3, 4, 
           9], [5, 6, 7, 10], [8]], [[1, 4, 6, 7, 8], [2, 5, 9, 
           10], [3]], [[1, 3, 6, 7, 8], [2, 5, 9, 10], [4]], [[1, 2, 6, 7, 
           8], [3, 5, 9, 10], [4]], [[1, 3, 6, 7, 8], [2, 4, 9, 
           10], [5]], [[1, 2, 6, 7, 8], [3, 4, 9, 10], [5]], [[1, 4, 5, 7, 
           8], [2, 6, 9, 10], [3]], [[1, 3, 5, 7, 8], [2, 6, 9, 
           10], [4]], [[1, 2, 5, 7, 8], [3, 6, 9, 10], [4]], [[1, 3, 4, 7, 
           8], [2, 6, 9, 10], [5]], [[1, 2, 4, 7, 8], [3, 6, 9, 
           10], [5]], [[1, 2, 3, 7, 8], [4, 6, 9, 10], [5]], [[1, 3, 5, 7, 
           8], [2, 4, 9, 10], [6]], [[1, 2, 5, 7, 8], [3, 4, 9, 
           10], [6]], [[1, 3, 4, 7, 8], [2, 5, 9, 10], [6]], [[1, 2, 4, 7, 
           8], [3, 5, 9, 10], [6]], [[1, 2, 3, 7, 8], [4, 5, 9, 
           10], [6]], [[1, 4, 5, 6, 8], [2, 7, 9, 10], [3]], [[1, 3, 5, 6, 
           8], [2, 7, 9, 10], [4]], [[1, 2, 5, 6, 8], [3, 7, 9, 
           10], [4]], [[1, 3, 4, 6, 8], [2, 7, 9, 10], [5]], [[1, 2, 4, 6, 
           8], [3, 7, 9, 10], [5]], [[1, 2, 3, 6, 8], [4, 7, 9, 
           10], [5]], [[1, 3, 4, 5, 8], [2, 7, 9, 10], [6]], [[1, 2, 4, 5, 
           8], [3, 7, 9, 10], [6]], [[1, 2, 3, 5, 8], [4, 7, 9, 
           10], [6]], [[1, 2, 3, 4, 8], [5, 7, 9, 10], [6]], [[1, 3, 5, 6, 
           8], [2, 4, 9, 10], [7]], [[1, 2, 5, 6, 8], [3, 4, 9, 
           10], [7]], [[1, 3, 4, 6, 8], [2, 5, 9, 10], [7]], [[1, 2, 4, 6, 
           8], [3, 5, 9, 10], [7]], [[1, 2, 3, 6, 8], [4, 5, 9, 
           10], [7]], [[1, 3, 4, 5, 8], [2, 6, 9, 10], [7]], [[1, 2, 4, 5, 
           8], [3, 6, 9, 10], [7]], [[1, 2, 3, 5, 8], [4, 6, 9, 
           10], [7]], [[1, 2, 3, 4, 8], [5, 6, 9, 10], [7]], [[1, 4, 5, 6, 
           7], [2, 8, 9, 10], [3]], [[1, 3, 5, 6, 7], [2, 8, 9, 
           10], [4]], [[1, 2, 5, 6, 7], [3, 8, 9, 10], [4]], [[1, 3, 4, 6, 
           7], [2, 8, 9, 10], [5]], [[1, 2, 4, 6, 7], [3, 8, 9, 
           10], [5]], [[1, 2, 3, 6, 7], [4, 8, 9, 10], [5]], [[1, 3, 4, 5, 
           7], [2, 8, 9, 10], [6]], [[1, 2, 4, 5, 7], [3, 8, 9, 
           10], [6]], [[1, 2, 3, 5, 7], [4, 8, 9, 10], [6]], [[1, 2, 3, 4, 
           7], [5, 8, 9, 10], [6]], [[1, 3, 4, 5, 6], [2, 8, 9, 
           10], [7]], [[1, 2, 4, 5, 6], [3, 8, 9, 10], [7]], [[1, 2, 3, 5, 
           6], [4, 8, 9, 10], [7]], [[1, 2, 3, 4, 6], [5, 8, 9, 
           10], [7]], [[1, 2, 3, 4, 5], [6, 8, 9, 10], [7]], [[1, 3, 5, 6, 
           7], [2, 4, 9, 10], [8]], [[1, 2, 5, 6, 7], [3, 4, 9, 
           10], [8]], [[1, 3, 4, 6, 7], [2, 5, 9, 10], [8]], [[1, 2, 4, 6, 
           7], [3, 5, 9, 10], [8]], [[1, 2, 3, 6, 7], [4, 5, 9, 
           10], [8]], [[1, 3, 4, 5, 7], [2, 6, 9, 10], [8]], [[1, 2, 4, 5, 
           7], [3, 6, 9, 10], [8]], [[1, 2, 3, 5, 7], [4, 6, 9, 
           10], [8]], [[1, 2, 3, 4, 7], [5, 6, 9, 10], [8]], [[1, 3, 4, 5, 
           6], [2, 7, 9, 10], [8]], [[1, 2, 4, 5, 6], [3, 7, 9, 
           10], [8]], [[1, 2, 3, 5, 6], [4, 7, 9, 10], [8]], [[1, 2, 3, 4, 
           6], [5, 7, 9, 10], [8]], [[1, 2, 3, 4, 5], [6, 7, 9, 
           10], [8]], [[1, 3, 5, 7, 8], [2, 4, 6, 10], [9]], [[1, 2, 5, 7, 
           8], [3, 4, 6, 10], [9]], [[1, 3, 4, 7, 8], [2, 5, 6, 
           10], [9]], [[1, 2, 4, 7, 8], [3, 5, 6, 10], [9]], [[1, 2, 3, 7, 
           8], [4, 5, 6, 10], [9]], [[1, 3, 5, 6, 8], [2, 4, 7, 
           10], [9]], [[1, 2, 5, 6, 8], [3, 4, 7, 10], [9]], [[1, 3, 4, 6, 
           8], [2, 5, 7, 10], [9]], [[1, 2, 4, 6, 8], [3, 5, 7, 
           10], [9]], [[1, 2, 3, 6, 8], [4, 5, 7, 10], [9]], [[1, 3, 4, 5, 
           8], [2, 6, 7, 10], [9]], [[1, 2, 4, 5, 8], [3, 6, 7, 
           10], [9]], [[1, 2, 3, 5, 8], [4, 6, 7, 10], [9]], [[1, 2, 3, 4, 
           8], [5, 6, 7, 10], [9]], [[1, 3, 5, 6, 7], [2, 4, 8, 
           10], [9]], [[1, 2, 5, 6, 7], [3, 4, 8, 10], [9]], [[1, 3, 4, 6, 
           7], [2, 5, 8, 10], [9]], [[1, 2, 4, 6, 7], [3, 5, 8, 
           10], [9]], [[1, 2, 3, 6, 7], [4, 5, 8, 10], [9]], [[1, 3, 4, 5, 
           7], [2, 6, 8, 10], [9]], [[1, 2, 4, 5, 7], [3, 6, 8, 
           10], [9]], [[1, 2, 3, 5, 7], [4, 6, 8, 10], [9]], [[1, 2, 3, 4, 
           7], [5, 6, 8, 10], [9]], [[1, 3, 4, 5, 6], [2, 7, 8, 
           10], [9]], [[1, 2, 4, 5, 6], [3, 7, 8, 10], [9]], [[1, 2, 3, 5, 
           6], [4, 7, 8, 10], [9]], [[1, 2, 3, 4, 6], [5, 7, 8, 
           10], [9]], [[1, 2, 3, 4, 5], [6, 7, 8, 10], [9]], [[1, 3, 5, 7, 
           9], [2, 4, 6, 8], [10]], [[1, 2, 5, 7, 9], [3, 4, 6, 
           8], [10]], [[1, 3, 4, 7, 9], [2, 5, 6, 8], [10]], [[1, 2, 4, 7, 
           9], [3, 5, 6, 8], [10]], [[1, 2, 3, 7, 9], [4, 5, 6, 
           8], [10]], [[1, 3, 5, 6, 9], [2, 4, 7, 8], [10]], [[1, 2, 5, 6, 
           9], [3, 4, 7, 8], [10]], [[1, 3, 4, 6, 9], [2, 5, 7, 
           8], [10]], [[1, 2, 4, 6, 9], [3, 5, 7, 8], [10]], [[1, 2, 3, 6, 
           9], [4, 5, 7, 8], [10]], [[1, 3, 4, 5, 9], [2, 6, 7, 
           8], [10]], [[1, 2, 4, 5, 9], [3, 6, 7, 8], [10]], [[1, 2, 3, 5, 
           9], [4, 6, 7, 8], [10]], [[1, 2, 3, 4, 9], [5, 6, 7, 
           8], [10]], [[1, 3, 5, 7, 8], [2, 4, 6, 9], [10]], [[1, 2, 5, 7, 
           8], [3, 4, 6, 9], [10]], [[1, 3, 4, 7, 8], [2, 5, 6, 
           9], [10]], [[1, 2, 4, 7, 8], [3, 5, 6, 9], [10]], [[1, 2, 3, 7, 
           8], [4, 5, 6, 9], [10]], [[1, 3, 5, 6, 8], [2, 4, 7, 
           9], [10]], [[1, 2, 5, 6, 8], [3, 4, 7, 9], [10]], [[1, 3, 4, 6, 
           8], [2, 5, 7, 9], [10]], [[1, 2, 4, 6, 8], [3, 5, 7, 
           9], [10]], [[1, 2, 3, 6, 8], [4, 5, 7, 9], [10]], [[1, 3, 4, 5, 
           8], [2, 6, 7, 9], [10]], [[1, 2, 4, 5, 8], [3, 6, 7, 
           9], [10]], [[1, 2, 3, 5, 8], [4, 6, 7, 9], [10]], [[1, 2, 3, 4, 
           8], [5, 6, 7, 9], [10]], [[1, 3, 5, 6, 7], [2, 4, 8, 
           9], [10]], [[1, 2, 5, 6, 7], [3, 4, 8, 9], [10]], [[1, 3, 4, 6, 
           7], [2, 5, 8, 9], [10]], [[1, 2, 4, 6, 7], [3, 5, 8, 
           9], [10]], [[1, 2, 3, 6, 7], [4, 5, 8, 9], [10]], [[1, 3, 4, 5, 
           7], [2, 6, 8, 9], [10]], [[1, 2, 4, 5, 7], [3, 6, 8, 
           9], [10]], [[1, 2, 3, 5, 7], [4, 6, 8, 9], [10]], [[1, 2, 3, 4, 
           7], [5, 6, 8, 9], [10]], [[1, 3, 4, 5, 6], [2, 7, 8, 
           9], [10]], [[1, 2, 4, 5, 6], [3, 7, 8, 9], [10]], [[1, 2, 3, 5, 
           6], [4, 7, 8, 9], [10]], [[1, 2, 3, 4, 6], [5, 7, 8, 
           9], [10]], [[1, 2, 3, 4, 5], [6, 7, 8, 9], [10]]]
        
    elif T==[[1, 1, 1, 1, 1], [1, 1, 1], [1, 1]]:
        
        return [[[1, 4, 7, 9, 10], [2, 5, 8], [3, 6]], [[1, 3, 7, 9, 10], [2, 5, 
           8], [4, 6]], [[1, 2, 7, 9, 10], [3, 5, 8], [4, 6]], [[1, 3, 7, 9, 
           10], [2, 4, 8], [5, 6]], [[1, 2, 7, 9, 10], [3, 4, 8], [5, 
           6]], [[1, 4, 6, 9, 10], [2, 5, 8], [3, 7]], [[1, 3, 6, 9, 10], [2, 
           5, 8], [4, 7]], [[1, 2, 6, 9, 10], [3, 5, 8], [4, 7]], [[1, 3, 6, 
           9, 10], [2, 4, 8], [5, 7]], [[1, 2, 6, 9, 10], [3, 4, 8], [5, 
           7]], [[1, 4, 5, 9, 10], [2, 6, 8], [3, 7]], [[1, 3, 5, 9, 10], [2, 
           6, 8], [4, 7]], [[1, 2, 5, 9, 10], [3, 6, 8], [4, 7]], [[1, 3, 4, 
           9, 10], [2, 6, 8], [5, 7]], [[1, 2, 4, 9, 10], [3, 6, 8], [5, 
           7]], [[1, 2, 3, 9, 10], [4, 6, 8], [5, 7]], [[1, 3, 5, 9, 10], [2, 
           4, 8], [6, 7]], [[1, 2, 5, 9, 10], [3, 4, 8], [6, 7]], [[1, 3, 4, 
           9, 10], [2, 5, 8], [6, 7]], [[1, 2, 4, 9, 10], [3, 5, 8], [6, 
           7]], [[1, 2, 3, 9, 10], [4, 5, 8], [6, 7]], [[1, 4, 6, 9, 10], [2, 
           5, 7], [3, 8]], [[1, 3, 6, 9, 10], [2, 5, 7], [4, 8]], [[1, 2, 6, 
           9, 10], [3, 5, 7], [4, 8]], [[1, 3, 6, 9, 10], [2, 4, 7], [5, 
           8]], [[1, 2, 6, 9, 10], [3, 4, 7], [5, 8]], [[1, 4, 5, 9, 10], [2, 
           6, 7], [3, 8]], [[1, 3, 5, 9, 10], [2, 6, 7], [4, 8]], [[1, 2, 5, 
           9, 10], [3, 6, 7], [4, 8]], [[1, 3, 4, 9, 10], [2, 6, 7], [5, 
           8]], [[1, 2, 4, 9, 10], [3, 6, 7], [5, 8]], [[1, 2, 3, 9, 10], [4, 
           6, 7], [5, 8]], [[1, 3, 5, 9, 10], [2, 4, 7], [6, 8]], [[1, 2, 5, 
           9, 10], [3, 4, 7], [6, 8]], [[1, 3, 4, 9, 10], [2, 5, 7], [6, 
           8]], [[1, 2, 4, 9, 10], [3, 5, 7], [6, 8]], [[1, 2, 3, 9, 10], [4, 
           5, 7], [6, 8]], [[1, 3, 5, 9, 10], [2, 4, 6], [7, 8]], [[1, 2, 5, 
           9, 10], [3, 4, 6], [7, 8]], [[1, 3, 4, 9, 10], [2, 5, 6], [7, 
           8]], [[1, 2, 4, 9, 10], [3, 5, 6], [7, 8]], [[1, 2, 3, 9, 10], [4, 
           5, 6], [7, 8]], [[1, 4, 7, 8, 10], [2, 5, 9], [3, 6]], [[1, 3, 7, 
           8, 10], [2, 5, 9], [4, 6]], [[1, 2, 7, 8, 10], [3, 5, 9], [4, 
           6]], [[1, 3, 7, 8, 10], [2, 4, 9], [5, 6]], [[1, 2, 7, 8, 10], [3, 
           4, 9], [5, 6]], [[1, 4, 6, 8, 10], [2, 5, 9], [3, 7]], [[1, 3, 6, 
           8, 10], [2, 5, 9], [4, 7]], [[1, 2, 6, 8, 10], [3, 5, 9], [4, 
           7]], [[1, 3, 6, 8, 10], [2, 4, 9], [5, 7]], [[1, 2, 6, 8, 10], [3, 
           4, 9], [5, 7]], [[1, 4, 5, 8, 10], [2, 6, 9], [3, 7]], [[1, 3, 5, 
           8, 10], [2, 6, 9], [4, 7]], [[1, 2, 5, 8, 10], [3, 6, 9], [4, 
           7]], [[1, 3, 4, 8, 10], [2, 6, 9], [5, 7]], [[1, 2, 4, 8, 10], [3, 
           6, 9], [5, 7]], [[1, 2, 3, 8, 10], [4, 6, 9], [5, 7]], [[1, 3, 5, 
           8, 10], [2, 4, 9], [6, 7]], [[1, 2, 5, 8, 10], [3, 4, 9], [6, 
           7]], [[1, 3, 4, 8, 10], [2, 5, 9], [6, 7]], [[1, 2, 4, 8, 10], [3, 
           5, 9], [6, 7]], [[1, 2, 3, 8, 10], [4, 5, 9], [6, 7]], [[1, 4, 6, 
           7, 10], [2, 5, 9], [3, 8]], [[1, 3, 6, 7, 10], [2, 5, 9], [4, 
           8]], [[1, 2, 6, 7, 10], [3, 5, 9], [4, 8]], [[1, 3, 6, 7, 10], [2, 
           4, 9], [5, 8]], [[1, 2, 6, 7, 10], [3, 4, 9], [5, 8]], [[1, 4, 5, 
           7, 10], [2, 6, 9], [3, 8]], [[1, 3, 5, 7, 10], [2, 6, 9], [4, 
           8]], [[1, 2, 5, 7, 10], [3, 6, 9], [4, 8]], [[1, 3, 4, 7, 10], [2, 
           6, 9], [5, 8]], [[1, 2, 4, 7, 10], [3, 6, 9], [5, 8]], [[1, 2, 3, 
           7, 10], [4, 6, 9], [5, 8]], [[1, 3, 5, 7, 10], [2, 4, 9], [6, 
           8]], [[1, 2, 5, 7, 10], [3, 4, 9], [6, 8]], [[1, 3, 4, 7, 10], [2, 
           5, 9], [6, 8]], [[1, 2, 4, 7, 10], [3, 5, 9], [6, 8]], [[1, 2, 3, 
           7, 10], [4, 5, 9], [6, 8]], [[1, 4, 5, 6, 10], [2, 7, 9], [3, 
           8]], [[1, 3, 5, 6, 10], [2, 7, 9], [4, 8]], [[1, 2, 5, 6, 10], [3, 
           7, 9], [4, 8]], [[1, 3, 4, 6, 10], [2, 7, 9], [5, 8]], [[1, 2, 4, 
           6, 10], [3, 7, 9], [5, 8]], [[1, 2, 3, 6, 10], [4, 7, 9], [5, 
           8]], [[1, 3, 4, 5, 10], [2, 7, 9], [6, 8]], [[1, 2, 4, 5, 10], [3, 
           7, 9], [6, 8]], [[1, 2, 3, 5, 10], [4, 7, 9], [6, 8]], [[1, 2, 3, 
           4, 10], [5, 7, 9], [6, 8]], [[1, 3, 5, 6, 10], [2, 4, 9], [7, 
           8]], [[1, 2, 5, 6, 10], [3, 4, 9], [7, 8]], [[1, 3, 4, 6, 10], [2, 
           5, 9], [7, 8]], [[1, 2, 4, 6, 10], [3, 5, 9], [7, 8]], [[1, 2, 3, 
           6, 10], [4, 5, 9], [7, 8]], [[1, 3, 4, 5, 10], [2, 6, 9], [7, 
           8]], [[1, 2, 4, 5, 10], [3, 6, 9], [7, 8]], [[1, 2, 3, 5, 10], [4, 
           6, 9], [7, 8]], [[1, 2, 3, 4, 10], [5, 6, 9], [7, 8]], [[1, 4, 6, 
           8, 10], [2, 5, 7], [3, 9]], [[1, 3, 6, 8, 10], [2, 5, 7], [4, 
           9]], [[1, 2, 6, 8, 10], [3, 5, 7], [4, 9]], [[1, 3, 6, 8, 10], [2, 
           4, 7], [5, 9]], [[1, 2, 6, 8, 10], [3, 4, 7], [5, 9]], [[1, 4, 5, 
           8, 10], [2, 6, 7], [3, 9]], [[1, 3, 5, 8, 10], [2, 6, 7], [4, 
           9]], [[1, 2, 5, 8, 10], [3, 6, 7], [4, 9]], [[1, 3, 4, 8, 10], [2, 
           6, 7], [5, 9]], [[1, 2, 4, 8, 10], [3, 6, 7], [5, 9]], [[1, 2, 3, 
           8, 10], [4, 6, 7], [5, 9]], [[1, 3, 5, 8, 10], [2, 4, 7], [6, 
           9]], [[1, 2, 5, 8, 10], [3, 4, 7], [6, 9]], [[1, 3, 4, 8, 10], [2, 
           5, 7], [6, 9]], [[1, 2, 4, 8, 10], [3, 5, 7], [6, 9]], [[1, 2, 3, 
           8, 10], [4, 5, 7], [6, 9]], [[1, 3, 5, 8, 10], [2, 4, 6], [7, 
           9]], [[1, 2, 5, 8, 10], [3, 4, 6], [7, 9]], [[1, 3, 4, 8, 10], [2, 
           5, 6], [7, 9]], [[1, 2, 4, 8, 10], [3, 5, 6], [7, 9]], [[1, 2, 3, 
           8, 10], [4, 5, 6], [7, 9]], [[1, 4, 6, 7, 10], [2, 5, 8], [3, 
           9]], [[1, 3, 6, 7, 10], [2, 5, 8], [4, 9]], [[1, 2, 6, 7, 10], [3, 
           5, 8], [4, 9]], [[1, 3, 6, 7, 10], [2, 4, 8], [5, 9]], [[1, 2, 6, 
           7, 10], [3, 4, 8], [5, 9]], [[1, 4, 5, 7, 10], [2, 6, 8], [3, 
           9]], [[1, 3, 5, 7, 10], [2, 6, 8], [4, 9]], [[1, 2, 5, 7, 10], [3, 
           6, 8], [4, 9]], [[1, 3, 4, 7, 10], [2, 6, 8], [5, 9]], [[1, 2, 4, 
           7, 10], [3, 6, 8], [5, 9]], [[1, 2, 3, 7, 10], [4, 6, 8], [5, 
           9]], [[1, 3, 5, 7, 10], [2, 4, 8], [6, 9]], [[1, 2, 5, 7, 10], [3, 
           4, 8], [6, 9]], [[1, 3, 4, 7, 10], [2, 5, 8], [6, 9]], [[1, 2, 4, 
           7, 10], [3, 5, 8], [6, 9]], [[1, 2, 3, 7, 10], [4, 5, 8], [6, 
           9]], [[1, 4, 5, 6, 10], [2, 7, 8], [3, 9]], [[1, 3, 5, 6, 10], [2, 
           7, 8], [4, 9]], [[1, 2, 5, 6, 10], [3, 7, 8], [4, 9]], [[1, 3, 4, 
           6, 10], [2, 7, 8], [5, 9]], [[1, 2, 4, 6, 10], [3, 7, 8], [5, 
           9]], [[1, 2, 3, 6, 10], [4, 7, 8], [5, 9]], [[1, 3, 4, 5, 10], [2, 
           7, 8], [6, 9]], [[1, 2, 4, 5, 10], [3, 7, 8], [6, 9]], [[1, 2, 3, 
           5, 10], [4, 7, 8], [6, 9]], [[1, 2, 3, 4, 10], [5, 7, 8], [6, 
           9]], [[1, 3, 5, 6, 10], [2, 4, 8], [7, 9]], [[1, 2, 5, 6, 10], [3, 
           4, 8], [7, 9]], [[1, 3, 4, 6, 10], [2, 5, 8], [7, 9]], [[1, 2, 4, 
           6, 10], [3, 5, 8], [7, 9]], [[1, 2, 3, 6, 10], [4, 5, 8], [7, 
           9]], [[1, 3, 4, 5, 10], [2, 6, 8], [7, 9]], [[1, 2, 4, 5, 10], [3, 
           6, 8], [7, 9]], [[1, 2, 3, 5, 10], [4, 6, 8], [7, 9]], [[1, 2, 3, 
           4, 10], [5, 6, 8], [7, 9]], [[1, 3, 5, 7, 10], [2, 4, 6], [8, 
           9]], [[1, 2, 5, 7, 10], [3, 4, 6], [8, 9]], [[1, 3, 4, 7, 10], [2, 
           5, 6], [8, 9]], [[1, 2, 4, 7, 10], [3, 5, 6], [8, 9]], [[1, 2, 3, 
           7, 10], [4, 5, 6], [8, 9]], [[1, 3, 5, 6, 10], [2, 4, 7], [8, 
           9]], [[1, 2, 5, 6, 10], [3, 4, 7], [8, 9]], [[1, 3, 4, 6, 10], [2, 
           5, 7], [8, 9]], [[1, 2, 4, 6, 10], [3, 5, 7], [8, 9]], [[1, 2, 3, 
           6, 10], [4, 5, 7], [8, 9]], [[1, 3, 4, 5, 10], [2, 6, 7], [8, 
           9]], [[1, 2, 4, 5, 10], [3, 6, 7], [8, 9]], [[1, 2, 3, 5, 10], [4, 
           6, 7], [8, 9]], [[1, 2, 3, 4, 10], [5, 6, 7], [8, 9]], [[1, 4, 7, 
           8, 9], [2, 5, 10], [3, 6]], [[1, 3, 7, 8, 9], [2, 5, 10], [4, 
           6]], [[1, 2, 7, 8, 9], [3, 5, 10], [4, 6]], [[1, 3, 7, 8, 9], [2, 
           4, 10], [5, 6]], [[1, 2, 7, 8, 9], [3, 4, 10], [5, 6]], [[1, 4, 6, 
           8, 9], [2, 5, 10], [3, 7]], [[1, 3, 6, 8, 9], [2, 5, 10], [4, 
           7]], [[1, 2, 6, 8, 9], [3, 5, 10], [4, 7]], [[1, 3, 6, 8, 9], [2, 
           4, 10], [5, 7]], [[1, 2, 6, 8, 9], [3, 4, 10], [5, 7]], [[1, 4, 5, 
           8, 9], [2, 6, 10], [3, 7]], [[1, 3, 5, 8, 9], [2, 6, 10], [4, 
           7]], [[1, 2, 5, 8, 9], [3, 6, 10], [4, 7]], [[1, 3, 4, 8, 9], [2, 
           6, 10], [5, 7]], [[1, 2, 4, 8, 9], [3, 6, 10], [5, 7]], [[1, 2, 3, 
           8, 9], [4, 6, 10], [5, 7]], [[1, 3, 5, 8, 9], [2, 4, 10], [6, 
           7]], [[1, 2, 5, 8, 9], [3, 4, 10], [6, 7]], [[1, 3, 4, 8, 9], [2, 
           5, 10], [6, 7]], [[1, 2, 4, 8, 9], [3, 5, 10], [6, 7]], [[1, 2, 3, 
           8, 9], [4, 5, 10], [6, 7]], [[1, 4, 6, 7, 9], [2, 5, 10], [3, 
           8]], [[1, 3, 6, 7, 9], [2, 5, 10], [4, 8]], [[1, 2, 6, 7, 9], [3, 
           5, 10], [4, 8]], [[1, 3, 6, 7, 9], [2, 4, 10], [5, 8]], [[1, 2, 6, 
           7, 9], [3, 4, 10], [5, 8]], [[1, 4, 5, 7, 9], [2, 6, 10], [3, 
           8]], [[1, 3, 5, 7, 9], [2, 6, 10], [4, 8]], [[1, 2, 5, 7, 9], [3, 
           6, 10], [4, 8]], [[1, 3, 4, 7, 9], [2, 6, 10], [5, 8]], [[1, 2, 4, 
           7, 9], [3, 6, 10], [5, 8]], [[1, 2, 3, 7, 9], [4, 6, 10], [5, 
           8]], [[1, 3, 5, 7, 9], [2, 4, 10], [6, 8]], [[1, 2, 5, 7, 9], [3, 
           4, 10], [6, 8]], [[1, 3, 4, 7, 9], [2, 5, 10], [6, 8]], [[1, 2, 4, 
           7, 9], [3, 5, 10], [6, 8]], [[1, 2, 3, 7, 9], [4, 5, 10], [6, 
           8]], [[1, 4, 5, 6, 9], [2, 7, 10], [3, 8]], [[1, 3, 5, 6, 9], [2, 
           7, 10], [4, 8]], [[1, 2, 5, 6, 9], [3, 7, 10], [4, 8]], [[1, 3, 4, 
           6, 9], [2, 7, 10], [5, 8]], [[1, 2, 4, 6, 9], [3, 7, 10], [5, 
           8]], [[1, 2, 3, 6, 9], [4, 7, 10], [5, 8]], [[1, 3, 4, 5, 9], [2, 
           7, 10], [6, 8]], [[1, 2, 4, 5, 9], [3, 7, 10], [6, 8]], [[1, 2, 3, 
           5, 9], [4, 7, 10], [6, 8]], [[1, 2, 3, 4, 9], [5, 7, 10], [6, 
           8]], [[1, 3, 5, 6, 9], [2, 4, 10], [7, 8]], [[1, 2, 5, 6, 9], [3, 
           4, 10], [7, 8]], [[1, 3, 4, 6, 9], [2, 5, 10], [7, 8]], [[1, 2, 4, 
           6, 9], [3, 5, 10], [7, 8]], [[1, 2, 3, 6, 9], [4, 5, 10], [7, 
           8]], [[1, 3, 4, 5, 9], [2, 6, 10], [7, 8]], [[1, 2, 4, 5, 9], [3, 
           6, 10], [7, 8]], [[1, 2, 3, 5, 9], [4, 6, 10], [7, 8]], [[1, 2, 3, 
           4, 9], [5, 6, 10], [7, 8]], [[1, 4, 6, 7, 8], [2, 5, 10], [3, 
           9]], [[1, 3, 6, 7, 8], [2, 5, 10], [4, 9]], [[1, 2, 6, 7, 8], [3, 
           5, 10], [4, 9]], [[1, 3, 6, 7, 8], [2, 4, 10], [5, 9]], [[1, 2, 6, 
           7, 8], [3, 4, 10], [5, 9]], [[1, 4, 5, 7, 8], [2, 6, 10], [3, 
           9]], [[1, 3, 5, 7, 8], [2, 6, 10], [4, 9]], [[1, 2, 5, 7, 8], [3, 
           6, 10], [4, 9]], [[1, 3, 4, 7, 8], [2, 6, 10], [5, 9]], [[1, 2, 4, 
           7, 8], [3, 6, 10], [5, 9]], [[1, 2, 3, 7, 8], [4, 6, 10], [5, 
           9]], [[1, 3, 5, 7, 8], [2, 4, 10], [6, 9]], [[1, 2, 5, 7, 8], [3, 
           4, 10], [6, 9]], [[1, 3, 4, 7, 8], [2, 5, 10], [6, 9]], [[1, 2, 4, 
           7, 8], [3, 5, 10], [6, 9]], [[1, 2, 3, 7, 8], [4, 5, 10], [6, 
           9]], [[1, 4, 5, 6, 8], [2, 7, 10], [3, 9]], [[1, 3, 5, 6, 8], [2, 
           7, 10], [4, 9]], [[1, 2, 5, 6, 8], [3, 7, 10], [4, 9]], [[1, 3, 4, 
           6, 8], [2, 7, 10], [5, 9]], [[1, 2, 4, 6, 8], [3, 7, 10], [5, 
           9]], [[1, 2, 3, 6, 8], [4, 7, 10], [5, 9]], [[1, 3, 4, 5, 8], [2, 
           7, 10], [6, 9]], [[1, 2, 4, 5, 8], [3, 7, 10], [6, 9]], [[1, 2, 3, 
           5, 8], [4, 7, 10], [6, 9]], [[1, 2, 3, 4, 8], [5, 7, 10], [6, 
           9]], [[1, 3, 5, 6, 8], [2, 4, 10], [7, 9]], [[1, 2, 5, 6, 8], [3, 
           4, 10], [7, 9]], [[1, 3, 4, 6, 8], [2, 5, 10], [7, 9]], [[1, 2, 4, 
           6, 8], [3, 5, 10], [7, 9]], [[1, 2, 3, 6, 8], [4, 5, 10], [7, 
           9]], [[1, 3, 4, 5, 8], [2, 6, 10], [7, 9]], [[1, 2, 4, 5, 8], [3, 
           6, 10], [7, 9]], [[1, 2, 3, 5, 8], [4, 6, 10], [7, 9]], [[1, 2, 3, 
           4, 8], [5, 6, 10], [7, 9]], [[1, 4, 5, 6, 7], [2, 8, 10], [3, 
           9]], [[1, 3, 5, 6, 7], [2, 8, 10], [4, 9]], [[1, 2, 5, 6, 7], [3, 
           8, 10], [4, 9]], [[1, 3, 4, 6, 7], [2, 8, 10], [5, 9]], [[1, 2, 4, 
           6, 7], [3, 8, 10], [5, 9]], [[1, 2, 3, 6, 7], [4, 8, 10], [5, 
           9]], [[1, 3, 4, 5, 7], [2, 8, 10], [6, 9]], [[1, 2, 4, 5, 7], [3, 
           8, 10], [6, 9]], [[1, 2, 3, 5, 7], [4, 8, 10], [6, 9]], [[1, 2, 3, 
           4, 7], [5, 8, 10], [6, 9]], [[1, 3, 4, 5, 6], [2, 8, 10], [7, 
           9]], [[1, 2, 4, 5, 6], [3, 8, 10], [7, 9]], [[1, 2, 3, 5, 6], [4, 
           8, 10], [7, 9]], [[1, 2, 3, 4, 6], [5, 8, 10], [7, 9]], [[1, 2, 3, 
           4, 5], [6, 8, 10], [7, 9]], [[1, 3, 5, 6, 7], [2, 4, 10], [8, 
           9]], [[1, 2, 5, 6, 7], [3, 4, 10], [8, 9]], [[1, 3, 4, 6, 7], [2, 
           5, 10], [8, 9]], [[1, 2, 4, 6, 7], [3, 5, 10], [8, 9]], [[1, 2, 3, 
           6, 7], [4, 5, 10], [8, 9]], [[1, 3, 4, 5, 7], [2, 6, 10], [8, 
           9]], [[1, 2, 4, 5, 7], [3, 6, 10], [8, 9]], [[1, 2, 3, 5, 7], [4, 
           6, 10], [8, 9]], [[1, 2, 3, 4, 7], [5, 6, 10], [8, 9]], [[1, 3, 4, 
           5, 6], [2, 7, 10], [8, 9]], [[1, 2, 4, 5, 6], [3, 7, 10], [8, 
           9]], [[1, 2, 3, 5, 6], [4, 7, 10], [8, 9]], [[1, 2, 3, 4, 6], [5, 
           7, 10], [8, 9]], [[1, 2, 3, 4, 5], [6, 7, 10], [8, 9]], [[1, 4, 6, 
           8, 9], [2, 5, 7], [3, 10]], [[1, 3, 6, 8, 9], [2, 5, 7], [4, 
           10]], [[1, 2, 6, 8, 9], [3, 5, 7], [4, 10]], [[1, 3, 6, 8, 9], [2, 
           4, 7], [5, 10]], [[1, 2, 6, 8, 9], [3, 4, 7], [5, 10]], [[1, 4, 5, 
           8, 9], [2, 6, 7], [3, 10]], [[1, 3, 5, 8, 9], [2, 6, 7], [4, 
           10]], [[1, 2, 5, 8, 9], [3, 6, 7], [4, 10]], [[1, 3, 4, 8, 9], [2, 
           6, 7], [5, 10]], [[1, 2, 4, 8, 9], [3, 6, 7], [5, 10]], [[1, 2, 3, 
           8, 9], [4, 6, 7], [5, 10]], [[1, 3, 5, 8, 9], [2, 4, 7], [6, 
           10]], [[1, 2, 5, 8, 9], [3, 4, 7], [6, 10]], [[1, 3, 4, 8, 9], [2, 
           5, 7], [6, 10]], [[1, 2, 4, 8, 9], [3, 5, 7], [6, 10]], [[1, 2, 3, 
           8, 9], [4, 5, 7], [6, 10]], [[1, 3, 5, 8, 9], [2, 4, 6], [7, 
           10]], [[1, 2, 5, 8, 9], [3, 4, 6], [7, 10]], [[1, 3, 4, 8, 9], [2, 
           5, 6], [7, 10]], [[1, 2, 4, 8, 9], [3, 5, 6], [7, 10]], [[1, 2, 3, 
           8, 9], [4, 5, 6], [7, 10]], [[1, 4, 6, 7, 9], [2, 5, 8], [3, 
           10]], [[1, 3, 6, 7, 9], [2, 5, 8], [4, 10]], [[1, 2, 6, 7, 9], [3, 
           5, 8], [4, 10]], [[1, 3, 6, 7, 9], [2, 4, 8], [5, 10]], [[1, 2, 6, 
           7, 9], [3, 4, 8], [5, 10]], [[1, 4, 5, 7, 9], [2, 6, 8], [3, 
           10]], [[1, 3, 5, 7, 9], [2, 6, 8], [4, 10]], [[1, 2, 5, 7, 9], [3, 
           6, 8], [4, 10]], [[1, 3, 4, 7, 9], [2, 6, 8], [5, 10]], [[1, 2, 4, 
           7, 9], [3, 6, 8], [5, 10]], [[1, 2, 3, 7, 9], [4, 6, 8], [5, 
           10]], [[1, 3, 5, 7, 9], [2, 4, 8], [6, 10]], [[1, 2, 5, 7, 9], [3, 
           4, 8], [6, 10]], [[1, 3, 4, 7, 9], [2, 5, 8], [6, 10]], [[1, 2, 4, 
           7, 9], [3, 5, 8], [6, 10]], [[1, 2, 3, 7, 9], [4, 5, 8], [6, 
           10]], [[1, 4, 5, 6, 9], [2, 7, 8], [3, 10]], [[1, 3, 5, 6, 9], [2, 
           7, 8], [4, 10]], [[1, 2, 5, 6, 9], [3, 7, 8], [4, 10]], [[1, 3, 4, 
           6, 9], [2, 7, 8], [5, 10]], [[1, 2, 4, 6, 9], [3, 7, 8], [5, 
           10]], [[1, 2, 3, 6, 9], [4, 7, 8], [5, 10]], [[1, 3, 4, 5, 9], [2, 
           7, 8], [6, 10]], [[1, 2, 4, 5, 9], [3, 7, 8], [6, 10]], [[1, 2, 3, 
           5, 9], [4, 7, 8], [6, 10]], [[1, 2, 3, 4, 9], [5, 7, 8], [6, 
           10]], [[1, 3, 5, 6, 9], [2, 4, 8], [7, 10]], [[1, 2, 5, 6, 9], [3, 
           4, 8], [7, 10]], [[1, 3, 4, 6, 9], [2, 5, 8], [7, 10]], [[1, 2, 4, 
           6, 9], [3, 5, 8], [7, 10]], [[1, 2, 3, 6, 9], [4, 5, 8], [7, 
           10]], [[1, 3, 4, 5, 9], [2, 6, 8], [7, 10]], [[1, 2, 4, 5, 9], [3, 
           6, 8], [7, 10]], [[1, 2, 3, 5, 9], [4, 6, 8], [7, 10]], [[1, 2, 3, 
           4, 9], [5, 6, 8], [7, 10]], [[1, 3, 5, 7, 9], [2, 4, 6], [8, 
           10]], [[1, 2, 5, 7, 9], [3, 4, 6], [8, 10]], [[1, 3, 4, 7, 9], [2, 
           5, 6], [8, 10]], [[1, 2, 4, 7, 9], [3, 5, 6], [8, 10]], [[1, 2, 3, 
           7, 9], [4, 5, 6], [8, 10]], [[1, 3, 5, 6, 9], [2, 4, 7], [8, 
           10]], [[1, 2, 5, 6, 9], [3, 4, 7], [8, 10]], [[1, 3, 4, 6, 9], [2, 
           5, 7], [8, 10]], [[1, 2, 4, 6, 9], [3, 5, 7], [8, 10]], [[1, 2, 3, 
           6, 9], [4, 5, 7], [8, 10]], [[1, 3, 4, 5, 9], [2, 6, 7], [8, 
           10]], [[1, 2, 4, 5, 9], [3, 6, 7], [8, 10]], [[1, 2, 3, 5, 9], [4, 
           6, 7], [8, 10]], [[1, 2, 3, 4, 9], [5, 6, 7], [8, 10]], [[1, 4, 6, 
           7, 8], [2, 5, 9], [3, 10]], [[1, 3, 6, 7, 8], [2, 5, 9], [4, 
           10]], [[1, 2, 6, 7, 8], [3, 5, 9], [4, 10]], [[1, 3, 6, 7, 8], [2, 
           4, 9], [5, 10]], [[1, 2, 6, 7, 8], [3, 4, 9], [5, 10]], [[1, 4, 5, 
           7, 8], [2, 6, 9], [3, 10]], [[1, 3, 5, 7, 8], [2, 6, 9], [4, 
           10]], [[1, 2, 5, 7, 8], [3, 6, 9], [4, 10]], [[1, 3, 4, 7, 8], [2, 
           6, 9], [5, 10]], [[1, 2, 4, 7, 8], [3, 6, 9], [5, 10]], [[1, 2, 3, 
           7, 8], [4, 6, 9], [5, 10]], [[1, 3, 5, 7, 8], [2, 4, 9], [6, 
           10]], [[1, 2, 5, 7, 8], [3, 4, 9], [6, 10]], [[1, 3, 4, 7, 8], [2, 
           5, 9], [6, 10]], [[1, 2, 4, 7, 8], [3, 5, 9], [6, 10]], [[1, 2, 3, 
           7, 8], [4, 5, 9], [6, 10]], [[1, 4, 5, 6, 8], [2, 7, 9], [3, 
           10]], [[1, 3, 5, 6, 8], [2, 7, 9], [4, 10]], [[1, 2, 5, 6, 8], [3, 
           7, 9], [4, 10]], [[1, 3, 4, 6, 8], [2, 7, 9], [5, 10]], [[1, 2, 4, 
           6, 8], [3, 7, 9], [5, 10]], [[1, 2, 3, 6, 8], [4, 7, 9], [5, 
           10]], [[1, 3, 4, 5, 8], [2, 7, 9], [6, 10]], [[1, 2, 4, 5, 8], [3, 
           7, 9], [6, 10]], [[1, 2, 3, 5, 8], [4, 7, 9], [6, 10]], [[1, 2, 3, 
           4, 8], [5, 7, 9], [6, 10]], [[1, 3, 5, 6, 8], [2, 4, 9], [7, 
           10]], [[1, 2, 5, 6, 8], [3, 4, 9], [7, 10]], [[1, 3, 4, 6, 8], [2, 
           5, 9], [7, 10]], [[1, 2, 4, 6, 8], [3, 5, 9], [7, 10]], [[1, 2, 3, 
           6, 8], [4, 5, 9], [7, 10]], [[1, 3, 4, 5, 8], [2, 6, 9], [7, 
           10]], [[1, 2, 4, 5, 8], [3, 6, 9], [7, 10]], [[1, 2, 3, 5, 8], [4, 
           6, 9], [7, 10]], [[1, 2, 3, 4, 8], [5, 6, 9], [7, 10]], [[1, 4, 5, 
           6, 7], [2, 8, 9], [3, 10]], [[1, 3, 5, 6, 7], [2, 8, 9], [4, 
           10]], [[1, 2, 5, 6, 7], [3, 8, 9], [4, 10]], [[1, 3, 4, 6, 7], [2, 
           8, 9], [5, 10]], [[1, 2, 4, 6, 7], [3, 8, 9], [5, 10]], [[1, 2, 3, 
           6, 7], [4, 8, 9], [5, 10]], [[1, 3, 4, 5, 7], [2, 8, 9], [6, 
           10]], [[1, 2, 4, 5, 7], [3, 8, 9], [6, 10]], [[1, 2, 3, 5, 7], [4, 
           8, 9], [6, 10]], [[1, 2, 3, 4, 7], [5, 8, 9], [6, 10]], [[1, 3, 4, 
           5, 6], [2, 8, 9], [7, 10]], [[1, 2, 4, 5, 6], [3, 8, 9], [7, 
           10]], [[1, 2, 3, 5, 6], [4, 8, 9], [7, 10]], [[1, 2, 3, 4, 6], [5, 
           8, 9], [7, 10]], [[1, 2, 3, 4, 5], [6, 8, 9], [7, 10]], [[1, 3, 5, 
           6, 7], [2, 4, 9], [8, 10]], [[1, 2, 5, 6, 7], [3, 4, 9], [8, 
           10]], [[1, 3, 4, 6, 7], [2, 5, 9], [8, 10]], [[1, 2, 4, 6, 7], [3, 
           5, 9], [8, 10]], [[1, 2, 3, 6, 7], [4, 5, 9], [8, 10]], [[1, 3, 4, 
           5, 7], [2, 6, 9], [8, 10]], [[1, 2, 4, 5, 7], [3, 6, 9], [8, 
           10]], [[1, 2, 3, 5, 7], [4, 6, 9], [8, 10]], [[1, 2, 3, 4, 7], [5, 
           6, 9], [8, 10]], [[1, 3, 4, 5, 6], [2, 7, 9], [8, 10]], [[1, 2, 4, 
           5, 6], [3, 7, 9], [8, 10]], [[1, 2, 3, 5, 6], [4, 7, 9], [8, 
           10]], [[1, 2, 3, 4, 6], [5, 7, 9], [8, 10]], [[1, 2, 3, 4, 5], [6, 
           7, 9], [8, 10]], [[1, 3, 5, 7, 8], [2, 4, 6], [9, 10]], [[1, 2, 5, 
           7, 8], [3, 4, 6], [9, 10]], [[1, 3, 4, 7, 8], [2, 5, 6], [9, 
           10]], [[1, 2, 4, 7, 8], [3, 5, 6], [9, 10]], [[1, 2, 3, 7, 8], [4, 
           5, 6], [9, 10]], [[1, 3, 5, 6, 8], [2, 4, 7], [9, 10]], [[1, 2, 5, 
           6, 8], [3, 4, 7], [9, 10]], [[1, 3, 4, 6, 8], [2, 5, 7], [9, 
           10]], [[1, 2, 4, 6, 8], [3, 5, 7], [9, 10]], [[1, 2, 3, 6, 8], [4, 
           5, 7], [9, 10]], [[1, 3, 4, 5, 8], [2, 6, 7], [9, 10]], [[1, 2, 4, 
           5, 8], [3, 6, 7], [9, 10]], [[1, 2, 3, 5, 8], [4, 6, 7], [9, 
           10]], [[1, 2, 3, 4, 8], [5, 6, 7], [9, 10]], [[1, 3, 5, 6, 7], [2, 
           4, 8], [9, 10]], [[1, 2, 5, 6, 7], [3, 4, 8], [9, 10]], [[1, 3, 4, 
           6, 7], [2, 5, 8], [9, 10]], [[1, 2, 4, 6, 7], [3, 5, 8], [9, 
           10]], [[1, 2, 3, 6, 7], [4, 5, 8], [9, 10]], [[1, 3, 4, 5, 7], [2, 
           6, 8], [9, 10]], [[1, 2, 4, 5, 7], [3, 6, 8], [9, 10]], [[1, 2, 3, 
           5, 7], [4, 6, 8], [9, 10]], [[1, 2, 3, 4, 7], [5, 6, 8], [9, 
           10]], [[1, 3, 4, 5, 6], [2, 7, 8], [9, 10]], [[1, 2, 4, 5, 6], [3, 
           7, 8], [9, 10]], [[1, 2, 3, 5, 6], [4, 7, 8], [9, 10]], [[1, 2, 3, 
           4, 6], [5, 7, 8], [9, 10]], [[1, 2, 3, 4, 5], [6, 7, 8], [9, 10]]]
        
    elif T==[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1]]:
        
        return [[[1, 4, 7, 9], [2, 5, 8, 10], [3, 6]], [[1, 3, 7, 9], [2, 5, 8, 
           10], [4, 6]], [[1, 2, 7, 9], [3, 5, 8, 10], [4, 6]], [[1, 3, 7, 
           9], [2, 4, 8, 10], [5, 6]], [[1, 2, 7, 9], [3, 4, 8, 10], [5, 
           6]], [[1, 4, 6, 9], [2, 5, 8, 10], [3, 7]], [[1, 3, 6, 9], [2, 5, 
           8, 10], [4, 7]], [[1, 2, 6, 9], [3, 5, 8, 10], [4, 7]], [[1, 3, 6, 
           9], [2, 4, 8, 10], [5, 7]], [[1, 2, 6, 9], [3, 4, 8, 10], [5, 
           7]], [[1, 4, 5, 9], [2, 6, 8, 10], [3, 7]], [[1, 3, 5, 9], [2, 6, 
           8, 10], [4, 7]], [[1, 2, 5, 9], [3, 6, 8, 10], [4, 7]], [[1, 3, 4, 
           9], [2, 6, 8, 10], [5, 7]], [[1, 2, 4, 9], [3, 6, 8, 10], [5, 
           7]], [[1, 2, 3, 9], [4, 6, 8, 10], [5, 7]], [[1, 3, 5, 9], [2, 4, 
           8, 10], [6, 7]], [[1, 2, 5, 9], [3, 4, 8, 10], [6, 7]], [[1, 3, 4, 
           9], [2, 5, 8, 10], [6, 7]], [[1, 2, 4, 9], [3, 5, 8, 10], [6, 
           7]], [[1, 2, 3, 9], [4, 5, 8, 10], [6, 7]], [[1, 4, 6, 9], [2, 5, 
           7, 10], [3, 8]], [[1, 3, 6, 9], [2, 5, 7, 10], [4, 8]], [[1, 2, 6, 
           9], [3, 5, 7, 10], [4, 8]], [[1, 3, 6, 9], [2, 4, 7, 10], [5, 
           8]], [[1, 2, 6, 9], [3, 4, 7, 10], [5, 8]], [[1, 4, 5, 9], [2, 6, 
           7, 10], [3, 8]], [[1, 3, 5, 9], [2, 6, 7, 10], [4, 8]], [[1, 2, 5, 
           9], [3, 6, 7, 10], [4, 8]], [[1, 3, 4, 9], [2, 6, 7, 10], [5, 
           8]], [[1, 2, 4, 9], [3, 6, 7, 10], [5, 8]], [[1, 2, 3, 9], [4, 6, 
           7, 10], [5, 8]], [[1, 3, 5, 9], [2, 4, 7, 10], [6, 8]], [[1, 2, 5, 
           9], [3, 4, 7, 10], [6, 8]], [[1, 3, 4, 9], [2, 5, 7, 10], [6, 
           8]], [[1, 2, 4, 9], [3, 5, 7, 10], [6, 8]], [[1, 2, 3, 9], [4, 5, 
           7, 10], [6, 8]], [[1, 3, 5, 9], [2, 4, 6, 10], [7, 8]], [[1, 2, 5, 
           9], [3, 4, 6, 10], [7, 8]], [[1, 3, 4, 9], [2, 5, 6, 10], [7, 
           8]], [[1, 2, 4, 9], [3, 5, 6, 10], [7, 8]], [[1, 2, 3, 9], [4, 5, 
           6, 10], [7, 8]], [[1, 4, 7, 8], [2, 5, 9, 10], [3, 6]], [[1, 3, 7, 
           8], [2, 5, 9, 10], [4, 6]], [[1, 2, 7, 8], [3, 5, 9, 10], [4, 
           6]], [[1, 3, 7, 8], [2, 4, 9, 10], [5, 6]], [[1, 2, 7, 8], [3, 4, 
           9, 10], [5, 6]], [[1, 4, 6, 8], [2, 5, 9, 10], [3, 7]], [[1, 3, 6, 
           8], [2, 5, 9, 10], [4, 7]], [[1, 2, 6, 8], [3, 5, 9, 10], [4, 
           7]], [[1, 3, 6, 8], [2, 4, 9, 10], [5, 7]], [[1, 2, 6, 8], [3, 4, 
           9, 10], [5, 7]], [[1, 4, 5, 8], [2, 6, 9, 10], [3, 7]], [[1, 3, 5, 
           8], [2, 6, 9, 10], [4, 7]], [[1, 2, 5, 8], [3, 6, 9, 10], [4, 
           7]], [[1, 3, 4, 8], [2, 6, 9, 10], [5, 7]], [[1, 2, 4, 8], [3, 6, 
           9, 10], [5, 7]], [[1, 2, 3, 8], [4, 6, 9, 10], [5, 7]], [[1, 3, 5, 
           8], [2, 4, 9, 10], [6, 7]], [[1, 2, 5, 8], [3, 4, 9, 10], [6, 
           7]], [[1, 3, 4, 8], [2, 5, 9, 10], [6, 7]], [[1, 2, 4, 8], [3, 5, 
           9, 10], [6, 7]], [[1, 2, 3, 8], [4, 5, 9, 10], [6, 7]], [[1, 4, 6, 
           7], [2, 5, 9, 10], [3, 8]], [[1, 3, 6, 7], [2, 5, 9, 10], [4, 
           8]], [[1, 2, 6, 7], [3, 5, 9, 10], [4, 8]], [[1, 3, 6, 7], [2, 4, 
           9, 10], [5, 8]], [[1, 2, 6, 7], [3, 4, 9, 10], [5, 8]], [[1, 4, 5, 
           7], [2, 6, 9, 10], [3, 8]], [[1, 3, 5, 7], [2, 6, 9, 10], [4, 
           8]], [[1, 2, 5, 7], [3, 6, 9, 10], [4, 8]], [[1, 3, 4, 7], [2, 6, 
           9, 10], [5, 8]], [[1, 2, 4, 7], [3, 6, 9, 10], [5, 8]], [[1, 2, 3, 
           7], [4, 6, 9, 10], [5, 8]], [[1, 3, 5, 7], [2, 4, 9, 10], [6, 
           8]], [[1, 2, 5, 7], [3, 4, 9, 10], [6, 8]], [[1, 3, 4, 7], [2, 5, 
           9, 10], [6, 8]], [[1, 2, 4, 7], [3, 5, 9, 10], [6, 8]], [[1, 2, 3, 
           7], [4, 5, 9, 10], [6, 8]], [[1, 4, 5, 6], [2, 7, 9, 10], [3, 
           8]], [[1, 3, 5, 6], [2, 7, 9, 10], [4, 8]], [[1, 2, 5, 6], [3, 7, 
           9, 10], [4, 8]], [[1, 3, 4, 6], [2, 7, 9, 10], [5, 8]], [[1, 2, 4, 
           6], [3, 7, 9, 10], [5, 8]], [[1, 2, 3, 6], [4, 7, 9, 10], [5, 
           8]], [[1, 3, 4, 5], [2, 7, 9, 10], [6, 8]], [[1, 2, 4, 5], [3, 7, 
           9, 10], [6, 8]], [[1, 2, 3, 5], [4, 7, 9, 10], [6, 8]], [[1, 2, 3, 
           4], [5, 7, 9, 10], [6, 8]], [[1, 3, 5, 6], [2, 4, 9, 10], [7, 
           8]], [[1, 2, 5, 6], [3, 4, 9, 10], [7, 8]], [[1, 3, 4, 6], [2, 5, 
           9, 10], [7, 8]], [[1, 2, 4, 6], [3, 5, 9, 10], [7, 8]], [[1, 2, 3, 
           6], [4, 5, 9, 10], [7, 8]], [[1, 3, 4, 5], [2, 6, 9, 10], [7, 
           8]], [[1, 2, 4, 5], [3, 6, 9, 10], [7, 8]], [[1, 2, 3, 5], [4, 6, 
           9, 10], [7, 8]], [[1, 2, 3, 4], [5, 6, 9, 10], [7, 8]], [[1, 4, 6, 
           8], [2, 5, 7, 10], [3, 9]], [[1, 3, 6, 8], [2, 5, 7, 10], [4, 
           9]], [[1, 2, 6, 8], [3, 5, 7, 10], [4, 9]], [[1, 3, 6, 8], [2, 4, 
           7, 10], [5, 9]], [[1, 2, 6, 8], [3, 4, 7, 10], [5, 9]], [[1, 4, 5, 
           8], [2, 6, 7, 10], [3, 9]], [[1, 3, 5, 8], [2, 6, 7, 10], [4, 
           9]], [[1, 2, 5, 8], [3, 6, 7, 10], [4, 9]], [[1, 3, 4, 8], [2, 6, 
           7, 10], [5, 9]], [[1, 2, 4, 8], [3, 6, 7, 10], [5, 9]], [[1, 2, 3, 
           8], [4, 6, 7, 10], [5, 9]], [[1, 3, 5, 8], [2, 4, 7, 10], [6, 
           9]], [[1, 2, 5, 8], [3, 4, 7, 10], [6, 9]], [[1, 3, 4, 8], [2, 5, 
           7, 10], [6, 9]], [[1, 2, 4, 8], [3, 5, 7, 10], [6, 9]], [[1, 2, 3, 
           8], [4, 5, 7, 10], [6, 9]], [[1, 3, 5, 8], [2, 4, 6, 10], [7, 
           9]], [[1, 2, 5, 8], [3, 4, 6, 10], [7, 9]], [[1, 3, 4, 8], [2, 5, 
           6, 10], [7, 9]], [[1, 2, 4, 8], [3, 5, 6, 10], [7, 9]], [[1, 2, 3, 
           8], [4, 5, 6, 10], [7, 9]], [[1, 4, 6, 7], [2, 5, 8, 10], [3, 
           9]], [[1, 3, 6, 7], [2, 5, 8, 10], [4, 9]], [[1, 2, 6, 7], [3, 5, 
           8, 10], [4, 9]], [[1, 3, 6, 7], [2, 4, 8, 10], [5, 9]], [[1, 2, 6, 
           7], [3, 4, 8, 10], [5, 9]], [[1, 4, 5, 7], [2, 6, 8, 10], [3, 
           9]], [[1, 3, 5, 7], [2, 6, 8, 10], [4, 9]], [[1, 2, 5, 7], [3, 6, 
           8, 10], [4, 9]], [[1, 3, 4, 7], [2, 6, 8, 10], [5, 9]], [[1, 2, 4, 
           7], [3, 6, 8, 10], [5, 9]], [[1, 2, 3, 7], [4, 6, 8, 10], [5, 
           9]], [[1, 3, 5, 7], [2, 4, 8, 10], [6, 9]], [[1, 2, 5, 7], [3, 4, 
           8, 10], [6, 9]], [[1, 3, 4, 7], [2, 5, 8, 10], [6, 9]], [[1, 2, 4, 
           7], [3, 5, 8, 10], [6, 9]], [[1, 2, 3, 7], [4, 5, 8, 10], [6, 
           9]], [[1, 4, 5, 6], [2, 7, 8, 10], [3, 9]], [[1, 3, 5, 6], [2, 7, 
           8, 10], [4, 9]], [[1, 2, 5, 6], [3, 7, 8, 10], [4, 9]], [[1, 3, 4, 
           6], [2, 7, 8, 10], [5, 9]], [[1, 2, 4, 6], [3, 7, 8, 10], [5, 
           9]], [[1, 2, 3, 6], [4, 7, 8, 10], [5, 9]], [[1, 3, 4, 5], [2, 7, 
           8, 10], [6, 9]], [[1, 2, 4, 5], [3, 7, 8, 10], [6, 9]], [[1, 2, 3, 
           5], [4, 7, 8, 10], [6, 9]], [[1, 2, 3, 4], [5, 7, 8, 10], [6, 
           9]], [[1, 3, 5, 6], [2, 4, 8, 10], [7, 9]], [[1, 2, 5, 6], [3, 4, 
           8, 10], [7, 9]], [[1, 3, 4, 6], [2, 5, 8, 10], [7, 9]], [[1, 2, 4, 
           6], [3, 5, 8, 10], [7, 9]], [[1, 2, 3, 6], [4, 5, 8, 10], [7, 
           9]], [[1, 3, 4, 5], [2, 6, 8, 10], [7, 9]], [[1, 2, 4, 5], [3, 6, 
           8, 10], [7, 9]], [[1, 2, 3, 5], [4, 6, 8, 10], [7, 9]], [[1, 2, 3, 
           4], [5, 6, 8, 10], [7, 9]], [[1, 3, 5, 7], [2, 4, 6, 10], [8, 
           9]], [[1, 2, 5, 7], [3, 4, 6, 10], [8, 9]], [[1, 3, 4, 7], [2, 5, 
           6, 10], [8, 9]], [[1, 2, 4, 7], [3, 5, 6, 10], [8, 9]], [[1, 2, 3, 
           7], [4, 5, 6, 10], [8, 9]], [[1, 3, 5, 6], [2, 4, 7, 10], [8, 
           9]], [[1, 2, 5, 6], [3, 4, 7, 10], [8, 9]], [[1, 3, 4, 6], [2, 5, 
           7, 10], [8, 9]], [[1, 2, 4, 6], [3, 5, 7, 10], [8, 9]], [[1, 2, 3, 
           6], [4, 5, 7, 10], [8, 9]], [[1, 3, 4, 5], [2, 6, 7, 10], [8, 
           9]], [[1, 2, 4, 5], [3, 6, 7, 10], [8, 9]], [[1, 2, 3, 5], [4, 6, 
           7, 10], [8, 9]], [[1, 2, 3, 4], [5, 6, 7, 10], [8, 9]], [[1, 4, 6, 
           8], [2, 5, 7, 9], [3, 10]], [[1, 3, 6, 8], [2, 5, 7, 9], [4, 
           10]], [[1, 2, 6, 8], [3, 5, 7, 9], [4, 10]], [[1, 3, 6, 8], [2, 4, 
           7, 9], [5, 10]], [[1, 2, 6, 8], [3, 4, 7, 9], [5, 10]], [[1, 4, 5, 
           8], [2, 6, 7, 9], [3, 10]], [[1, 3, 5, 8], [2, 6, 7, 9], [4, 
           10]], [[1, 2, 5, 8], [3, 6, 7, 9], [4, 10]], [[1, 3, 4, 8], [2, 6, 
           7, 9], [5, 10]], [[1, 2, 4, 8], [3, 6, 7, 9], [5, 10]], [[1, 2, 3, 
           8], [4, 6, 7, 9], [5, 10]], [[1, 3, 5, 8], [2, 4, 7, 9], [6, 
           10]], [[1, 2, 5, 8], [3, 4, 7, 9], [6, 10]], [[1, 3, 4, 8], [2, 5, 
           7, 9], [6, 10]], [[1, 2, 4, 8], [3, 5, 7, 9], [6, 10]], [[1, 2, 3, 
           8], [4, 5, 7, 9], [6, 10]], [[1, 3, 5, 8], [2, 4, 6, 9], [7, 
           10]], [[1, 2, 5, 8], [3, 4, 6, 9], [7, 10]], [[1, 3, 4, 8], [2, 5, 
           6, 9], [7, 10]], [[1, 2, 4, 8], [3, 5, 6, 9], [7, 10]], [[1, 2, 3, 
           8], [4, 5, 6, 9], [7, 10]], [[1, 4, 6, 7], [2, 5, 8, 9], [3, 
           10]], [[1, 3, 6, 7], [2, 5, 8, 9], [4, 10]], [[1, 2, 6, 7], [3, 5, 
           8, 9], [4, 10]], [[1, 3, 6, 7], [2, 4, 8, 9], [5, 10]], [[1, 2, 6, 
           7], [3, 4, 8, 9], [5, 10]], [[1, 4, 5, 7], [2, 6, 8, 9], [3, 
           10]], [[1, 3, 5, 7], [2, 6, 8, 9], [4, 10]], [[1, 2, 5, 7], [3, 6, 
           8, 9], [4, 10]], [[1, 3, 4, 7], [2, 6, 8, 9], [5, 10]], [[1, 2, 4, 
           7], [3, 6, 8, 9], [5, 10]], [[1, 2, 3, 7], [4, 6, 8, 9], [5, 
           10]], [[1, 3, 5, 7], [2, 4, 8, 9], [6, 10]], [[1, 2, 5, 7], [3, 4, 
           8, 9], [6, 10]], [[1, 3, 4, 7], [2, 5, 8, 9], [6, 10]], [[1, 2, 4, 
           7], [3, 5, 8, 9], [6, 10]], [[1, 2, 3, 7], [4, 5, 8, 9], [6, 
           10]], [[1, 4, 5, 6], [2, 7, 8, 9], [3, 10]], [[1, 3, 5, 6], [2, 7, 
           8, 9], [4, 10]], [[1, 2, 5, 6], [3, 7, 8, 9], [4, 10]], [[1, 3, 4, 
           6], [2, 7, 8, 9], [5, 10]], [[1, 2, 4, 6], [3, 7, 8, 9], [5, 
           10]], [[1, 2, 3, 6], [4, 7, 8, 9], [5, 10]], [[1, 3, 4, 5], [2, 7, 
           8, 9], [6, 10]], [[1, 2, 4, 5], [3, 7, 8, 9], [6, 10]], [[1, 2, 3, 
           5], [4, 7, 8, 9], [6, 10]], [[1, 2, 3, 4], [5, 7, 8, 9], [6, 
           10]], [[1, 3, 5, 6], [2, 4, 8, 9], [7, 10]], [[1, 2, 5, 6], [3, 4, 
           8, 9], [7, 10]], [[1, 3, 4, 6], [2, 5, 8, 9], [7, 10]], [[1, 2, 4, 
           6], [3, 5, 8, 9], [7, 10]], [[1, 2, 3, 6], [4, 5, 8, 9], [7, 
           10]], [[1, 3, 4, 5], [2, 6, 8, 9], [7, 10]], [[1, 2, 4, 5], [3, 6, 
           8, 9], [7, 10]], [[1, 2, 3, 5], [4, 6, 8, 9], [7, 10]], [[1, 2, 3, 
           4], [5, 6, 8, 9], [7, 10]], [[1, 3, 5, 7], [2, 4, 6, 9], [8, 
           10]], [[1, 2, 5, 7], [3, 4, 6, 9], [8, 10]], [[1, 3, 4, 7], [2, 5, 
           6, 9], [8, 10]], [[1, 2, 4, 7], [3, 5, 6, 9], [8, 10]], [[1, 2, 3, 
           7], [4, 5, 6, 9], [8, 10]], [[1, 3, 5, 6], [2, 4, 7, 9], [8, 
           10]], [[1, 2, 5, 6], [3, 4, 7, 9], [8, 10]], [[1, 3, 4, 6], [2, 5, 
           7, 9], [8, 10]], [[1, 2, 4, 6], [3, 5, 7, 9], [8, 10]], [[1, 2, 3, 
           6], [4, 5, 7, 9], [8, 10]], [[1, 3, 4, 5], [2, 6, 7, 9], [8, 
           10]], [[1, 2, 4, 5], [3, 6, 7, 9], [8, 10]], [[1, 2, 3, 5], [4, 6, 
           7, 9], [8, 10]], [[1, 2, 3, 4], [5, 6, 7, 9], [8, 10]], [[1, 3, 5, 
           7], [2, 4, 6, 8], [9, 10]], [[1, 2, 5, 7], [3, 4, 6, 8], [9, 
           10]], [[1, 3, 4, 7], [2, 5, 6, 8], [9, 10]], [[1, 2, 4, 7], [3, 5, 
           6, 8], [9, 10]], [[1, 2, 3, 7], [4, 5, 6, 8], [9, 10]], [[1, 3, 5, 
           6], [2, 4, 7, 8], [9, 10]], [[1, 2, 5, 6], [3, 4, 7, 8], [9, 
           10]], [[1, 3, 4, 6], [2, 5, 7, 8], [9, 10]], [[1, 2, 4, 6], [3, 5, 
           7, 8], [9, 10]], [[1, 2, 3, 6], [4, 5, 7, 8], [9, 10]], [[1, 3, 4, 
           5], [2, 6, 7, 8], [9, 10]], [[1, 2, 4, 5], [3, 6, 7, 8], [9, 
           10]], [[1, 2, 3, 5], [4, 6, 7, 8], [9, 10]], [[1, 2, 3, 4], [5, 6, 
           7, 8], [9, 10]]]
        
    elif T==[[1, 1, 1, 1], [1, 1, 1], [1, 1, 1]]:
        
        return [[[1, 4, 7, 10], [2, 5, 8], [3, 6, 9]], [[1, 3, 7, 10], [2, 5, 8], [4,
            6, 9]], [[1, 2, 7, 10], [3, 5, 8], [4, 6, 9]], [[1, 3, 7, 10], [2,
            4, 8], [5, 6, 9]], [[1, 2, 7, 10], [3, 4, 8], [5, 6, 9]], [[1, 4, 
           6, 10], [2, 5, 8], [3, 7, 9]], [[1, 3, 6, 10], [2, 5, 8], [4, 7, 
           9]], [[1, 2, 6, 10], [3, 5, 8], [4, 7, 9]], [[1, 3, 6, 10], [2, 4, 
           8], [5, 7, 9]], [[1, 2, 6, 10], [3, 4, 8], [5, 7, 9]], [[1, 4, 5, 
           10], [2, 6, 8], [3, 7, 9]], [[1, 3, 5, 10], [2, 6, 8], [4, 7, 
           9]], [[1, 2, 5, 10], [3, 6, 8], [4, 7, 9]], [[1, 3, 4, 10], [2, 6, 
           8], [5, 7, 9]], [[1, 2, 4, 10], [3, 6, 8], [5, 7, 9]], [[1, 2, 3, 
           10], [4, 6, 8], [5, 7, 9]], [[1, 3, 5, 10], [2, 4, 8], [6, 7, 
           9]], [[1, 2, 5, 10], [3, 4, 8], [6, 7, 9]], [[1, 3, 4, 10], [2, 5, 
           8], [6, 7, 9]], [[1, 2, 4, 10], [3, 5, 8], [6, 7, 9]], [[1, 2, 3, 
           10], [4, 5, 8], [6, 7, 9]], [[1, 4, 6, 10], [2, 5, 7], [3, 8, 
           9]], [[1, 3, 6, 10], [2, 5, 7], [4, 8, 9]], [[1, 2, 6, 10], [3, 5, 
           7], [4, 8, 9]], [[1, 3, 6, 10], [2, 4, 7], [5, 8, 9]], [[1, 2, 6, 
           10], [3, 4, 7], [5, 8, 9]], [[1, 4, 5, 10], [2, 6, 7], [3, 8, 
           9]], [[1, 3, 5, 10], [2, 6, 7], [4, 8, 9]], [[1, 2, 5, 10], [3, 6, 
           7], [4, 8, 9]], [[1, 3, 4, 10], [2, 6, 7], [5, 8, 9]], [[1, 2, 4, 
           10], [3, 6, 7], [5, 8, 9]], [[1, 2, 3, 10], [4, 6, 7], [5, 8, 
           9]], [[1, 3, 5, 10], [2, 4, 7], [6, 8, 9]], [[1, 2, 5, 10], [3, 4, 
           7], [6, 8, 9]], [[1, 3, 4, 10], [2, 5, 7], [6, 8, 9]], [[1, 2, 4, 
           10], [3, 5, 7], [6, 8, 9]], [[1, 2, 3, 10], [4, 5, 7], [6, 8, 
           9]], [[1, 3, 5, 10], [2, 4, 6], [7, 8, 9]], [[1, 2, 5, 10], [3, 4, 
           6], [7, 8, 9]], [[1, 3, 4, 10], [2, 5, 6], [7, 8, 9]], [[1, 2, 4, 
           10], [3, 5, 6], [7, 8, 9]], [[1, 2, 3, 10], [4, 5, 6], [7, 8, 
           9]], [[1, 4, 7, 9], [2, 5, 8], [3, 6, 10]], [[1, 3, 7, 9], [2, 5, 
           8], [4, 6, 10]], [[1, 2, 7, 9], [3, 5, 8], [4, 6, 10]], [[1, 3, 7, 
           9], [2, 4, 8], [5, 6, 10]], [[1, 2, 7, 9], [3, 4, 8], [5, 6, 
           10]], [[1, 4, 6, 9], [2, 5, 8], [3, 7, 10]], [[1, 3, 6, 9], [2, 5, 
           8], [4, 7, 10]], [[1, 2, 6, 9], [3, 5, 8], [4, 7, 10]], [[1, 3, 6, 
           9], [2, 4, 8], [5, 7, 10]], [[1, 2, 6, 9], [3, 4, 8], [5, 7, 
           10]], [[1, 4, 5, 9], [2, 6, 8], [3, 7, 10]], [[1, 3, 5, 9], [2, 6, 
           8], [4, 7, 10]], [[1, 2, 5, 9], [3, 6, 8], [4, 7, 10]], [[1, 3, 4, 
           9], [2, 6, 8], [5, 7, 10]], [[1, 2, 4, 9], [3, 6, 8], [5, 7, 
           10]], [[1, 2, 3, 9], [4, 6, 8], [5, 7, 10]], [[1, 3, 5, 9], [2, 4, 
           8], [6, 7, 10]], [[1, 2, 5, 9], [3, 4, 8], [6, 7, 10]], [[1, 3, 4, 
           9], [2, 5, 8], [6, 7, 10]], [[1, 2, 4, 9], [3, 5, 8], [6, 7, 
           10]], [[1, 2, 3, 9], [4, 5, 8], [6, 7, 10]], [[1, 4, 6, 9], [2, 5, 
           7], [3, 8, 10]], [[1, 3, 6, 9], [2, 5, 7], [4, 8, 10]], [[1, 2, 6, 
           9], [3, 5, 7], [4, 8, 10]], [[1, 3, 6, 9], [2, 4, 7], [5, 8, 
           10]], [[1, 2, 6, 9], [3, 4, 7], [5, 8, 10]], [[1, 4, 5, 9], [2, 6, 
           7], [3, 8, 10]], [[1, 3, 5, 9], [2, 6, 7], [4, 8, 10]], [[1, 2, 5, 
           9], [3, 6, 7], [4, 8, 10]], [[1, 3, 4, 9], [2, 6, 7], [5, 8, 
           10]], [[1, 2, 4, 9], [3, 6, 7], [5, 8, 10]], [[1, 2, 3, 9], [4, 6, 
           7], [5, 8, 10]], [[1, 3, 5, 9], [2, 4, 7], [6, 8, 10]], [[1, 2, 5, 
           9], [3, 4, 7], [6, 8, 10]], [[1, 3, 4, 9], [2, 5, 7], [6, 8, 
           10]], [[1, 2, 4, 9], [3, 5, 7], [6, 8, 10]], [[1, 2, 3, 9], [4, 5, 
           7], [6, 8, 10]], [[1, 3, 5, 9], [2, 4, 6], [7, 8, 10]], [[1, 2, 5, 
           9], [3, 4, 6], [7, 8, 10]], [[1, 3, 4, 9], [2, 5, 6], [7, 8, 
           10]], [[1, 2, 4, 9], [3, 5, 6], [7, 8, 10]], [[1, 2, 3, 9], [4, 5, 
           6], [7, 8, 10]], [[1, 4, 7, 8], [2, 5, 9], [3, 6, 10]], [[1, 3, 7, 
           8], [2, 5, 9], [4, 6, 10]], [[1, 2, 7, 8], [3, 5, 9], [4, 6, 
           10]], [[1, 3, 7, 8], [2, 4, 9], [5, 6, 10]], [[1, 2, 7, 8], [3, 4, 
           9], [5, 6, 10]], [[1, 4, 6, 8], [2, 5, 9], [3, 7, 10]], [[1, 3, 6, 
           8], [2, 5, 9], [4, 7, 10]], [[1, 2, 6, 8], [3, 5, 9], [4, 7, 
           10]], [[1, 3, 6, 8], [2, 4, 9], [5, 7, 10]], [[1, 2, 6, 8], [3, 4, 
           9], [5, 7, 10]], [[1, 4, 5, 8], [2, 6, 9], [3, 7, 10]], [[1, 3, 5, 
           8], [2, 6, 9], [4, 7, 10]], [[1, 2, 5, 8], [3, 6, 9], [4, 7, 
           10]], [[1, 3, 4, 8], [2, 6, 9], [5, 7, 10]], [[1, 2, 4, 8], [3, 6, 
           9], [5, 7, 10]], [[1, 2, 3, 8], [4, 6, 9], [5, 7, 10]], [[1, 3, 5, 
           8], [2, 4, 9], [6, 7, 10]], [[1, 2, 5, 8], [3, 4, 9], [6, 7, 
           10]], [[1, 3, 4, 8], [2, 5, 9], [6, 7, 10]], [[1, 2, 4, 8], [3, 5, 
           9], [6, 7, 10]], [[1, 2, 3, 8], [4, 5, 9], [6, 7, 10]], [[1, 4, 6, 
           7], [2, 5, 9], [3, 8, 10]], [[1, 3, 6, 7], [2, 5, 9], [4, 8, 
           10]], [[1, 2, 6, 7], [3, 5, 9], [4, 8, 10]], [[1, 3, 6, 7], [2, 4, 
           9], [5, 8, 10]], [[1, 2, 6, 7], [3, 4, 9], [5, 8, 10]], [[1, 4, 5, 
           7], [2, 6, 9], [3, 8, 10]], [[1, 3, 5, 7], [2, 6, 9], [4, 8, 
           10]], [[1, 2, 5, 7], [3, 6, 9], [4, 8, 10]], [[1, 3, 4, 7], [2, 6, 
           9], [5, 8, 10]], [[1, 2, 4, 7], [3, 6, 9], [5, 8, 10]], [[1, 2, 3, 
           7], [4, 6, 9], [5, 8, 10]], [[1, 3, 5, 7], [2, 4, 9], [6, 8, 
           10]], [[1, 2, 5, 7], [3, 4, 9], [6, 8, 10]], [[1, 3, 4, 7], [2, 5, 
           9], [6, 8, 10]], [[1, 2, 4, 7], [3, 5, 9], [6, 8, 10]], [[1, 2, 3, 
           7], [4, 5, 9], [6, 8, 10]], [[1, 4, 5, 6], [2, 7, 9], [3, 8, 
           10]], [[1, 3, 5, 6], [2, 7, 9], [4, 8, 10]], [[1, 2, 5, 6], [3, 7, 
           9], [4, 8, 10]], [[1, 3, 4, 6], [2, 7, 9], [5, 8, 10]], [[1, 2, 4, 
           6], [3, 7, 9], [5, 8, 10]], [[1, 2, 3, 6], [4, 7, 9], [5, 8, 
           10]], [[1, 3, 4, 5], [2, 7, 9], [6, 8, 10]], [[1, 2, 4, 5], [3, 7, 
           9], [6, 8, 10]], [[1, 2, 3, 5], [4, 7, 9], [6, 8, 10]], [[1, 2, 3, 
           4], [5, 7, 9], [6, 8, 10]], [[1, 3, 5, 6], [2, 4, 9], [7, 8, 
           10]], [[1, 2, 5, 6], [3, 4, 9], [7, 8, 10]], [[1, 3, 4, 6], [2, 5, 
           9], [7, 8, 10]], [[1, 2, 4, 6], [3, 5, 9], [7, 8, 10]], [[1, 2, 3, 
           6], [4, 5, 9], [7, 8, 10]], [[1, 3, 4, 5], [2, 6, 9], [7, 8, 
           10]], [[1, 2, 4, 5], [3, 6, 9], [7, 8, 10]], [[1, 2, 3, 5], [4, 6, 
           9], [7, 8, 10]], [[1, 2, 3, 4], [5, 6, 9], [7, 8, 10]], [[1, 4, 6, 
           8], [2, 5, 7], [3, 9, 10]], [[1, 3, 6, 8], [2, 5, 7], [4, 9, 
           10]], [[1, 2, 6, 8], [3, 5, 7], [4, 9, 10]], [[1, 3, 6, 8], [2, 4, 
           7], [5, 9, 10]], [[1, 2, 6, 8], [3, 4, 7], [5, 9, 10]], [[1, 4, 5, 
           8], [2, 6, 7], [3, 9, 10]], [[1, 3, 5, 8], [2, 6, 7], [4, 9, 
           10]], [[1, 2, 5, 8], [3, 6, 7], [4, 9, 10]], [[1, 3, 4, 8], [2, 6, 
           7], [5, 9, 10]], [[1, 2, 4, 8], [3, 6, 7], [5, 9, 10]], [[1, 2, 3, 
           8], [4, 6, 7], [5, 9, 10]], [[1, 3, 5, 8], [2, 4, 7], [6, 9, 
           10]], [[1, 2, 5, 8], [3, 4, 7], [6, 9, 10]], [[1, 3, 4, 8], [2, 5, 
           7], [6, 9, 10]], [[1, 2, 4, 8], [3, 5, 7], [6, 9, 10]], [[1, 2, 3, 
           8], [4, 5, 7], [6, 9, 10]], [[1, 3, 5, 8], [2, 4, 6], [7, 9, 
           10]], [[1, 2, 5, 8], [3, 4, 6], [7, 9, 10]], [[1, 3, 4, 8], [2, 5, 
           6], [7, 9, 10]], [[1, 2, 4, 8], [3, 5, 6], [7, 9, 10]], [[1, 2, 3, 
           8], [4, 5, 6], [7, 9, 10]], [[1, 4, 6, 7], [2, 5, 8], [3, 9, 
           10]], [[1, 3, 6, 7], [2, 5, 8], [4, 9, 10]], [[1, 2, 6, 7], [3, 5, 
           8], [4, 9, 10]], [[1, 3, 6, 7], [2, 4, 8], [5, 9, 10]], [[1, 2, 6, 
           7], [3, 4, 8], [5, 9, 10]], [[1, 4, 5, 7], [2, 6, 8], [3, 9, 
           10]], [[1, 3, 5, 7], [2, 6, 8], [4, 9, 10]], [[1, 2, 5, 7], [3, 6, 
           8], [4, 9, 10]], [[1, 3, 4, 7], [2, 6, 8], [5, 9, 10]], [[1, 2, 4, 
           7], [3, 6, 8], [5, 9, 10]], [[1, 2, 3, 7], [4, 6, 8], [5, 9, 
           10]], [[1, 3, 5, 7], [2, 4, 8], [6, 9, 10]], [[1, 2, 5, 7], [3, 4, 
           8], [6, 9, 10]], [[1, 3, 4, 7], [2, 5, 8], [6, 9, 10]], [[1, 2, 4, 
           7], [3, 5, 8], [6, 9, 10]], [[1, 2, 3, 7], [4, 5, 8], [6, 9, 
           10]], [[1, 4, 5, 6], [2, 7, 8], [3, 9, 10]], [[1, 3, 5, 6], [2, 7, 
           8], [4, 9, 10]], [[1, 2, 5, 6], [3, 7, 8], [4, 9, 10]], [[1, 3, 4, 
           6], [2, 7, 8], [5, 9, 10]], [[1, 2, 4, 6], [3, 7, 8], [5, 9, 
           10]], [[1, 2, 3, 6], [4, 7, 8], [5, 9, 10]], [[1, 3, 4, 5], [2, 7, 
           8], [6, 9, 10]], [[1, 2, 4, 5], [3, 7, 8], [6, 9, 10]], [[1, 2, 3, 
           5], [4, 7, 8], [6, 9, 10]], [[1, 2, 3, 4], [5, 7, 8], [6, 9, 
           10]], [[1, 3, 5, 6], [2, 4, 8], [7, 9, 10]], [[1, 2, 5, 6], [3, 4, 
           8], [7, 9, 10]], [[1, 3, 4, 6], [2, 5, 8], [7, 9, 10]], [[1, 2, 4, 
           6], [3, 5, 8], [7, 9, 10]], [[1, 2, 3, 6], [4, 5, 8], [7, 9, 
           10]], [[1, 3, 4, 5], [2, 6, 8], [7, 9, 10]], [[1, 2, 4, 5], [3, 6, 
           8], [7, 9, 10]], [[1, 2, 3, 5], [4, 6, 8], [7, 9, 10]], [[1, 2, 3, 
           4], [5, 6, 8], [7, 9, 10]], [[1, 3, 5, 7], [2, 4, 6], [8, 9, 
           10]], [[1, 2, 5, 7], [3, 4, 6], [8, 9, 10]], [[1, 3, 4, 7], [2, 5, 
           6], [8, 9, 10]], [[1, 2, 4, 7], [3, 5, 6], [8, 9, 10]], [[1, 2, 3, 
           7], [4, 5, 6], [8, 9, 10]], [[1, 3, 5, 6], [2, 4, 7], [8, 9, 
           10]], [[1, 2, 5, 6], [3, 4, 7], [8, 9, 10]], [[1, 3, 4, 6], [2, 5, 
           7], [8, 9, 10]], [[1, 2, 4, 6], [3, 5, 7], [8, 9, 10]], [[1, 2, 3, 
           6], [4, 5, 7], [8, 9, 10]], [[1, 3, 4, 5], [2, 6, 7], [8, 9, 
           10]], [[1, 2, 4, 5], [3, 6, 7], [8, 9, 10]], [[1, 2, 3, 5], [4, 6, 
           7], [8, 9, 10]], [[1, 2, 3, 4], [5, 6, 7], [8, 9, 10]]]
                                                                   
                                                                   
    
    
                                                                        
    elif T==[[1,1,1,1,1,1,1],[],[]]:
        return [[[1,2,3,4,5,6,7],[],[]]]
    
    elif T==[[1,1,1,1,1,1],[1],[]]:
        return [[[1, 3, 4, 5, 6, 7], [2],[]], [[1, 2, 4, 5, 6, 7], [3],[]], [[1, 2, 3, 5, 
           6, 7], [4],[]], [[1, 2, 3, 4, 6, 7], [5],[]], [[1, 2, 3, 4, 5, 
           7], [6],[]], [[1, 2, 3, 4, 5, 6], [7],[]]]
                                                           
    elif T==[[1, 1, 1, 1, 1], [1, 1], []]:
        return [[[1, 3, 5, 6, 7], [2, 4],[]], [[1, 2, 5, 6, 7], [3, 4],[]], [[1, 3, 4, 6, 
           7], [2, 5],[]], [[1, 2, 4, 6, 7], [3, 5],[]], [[1, 2, 3, 6, 7], [4, 
           5],[]], [[1, 3, 4, 5, 7], [2, 6],[]], [[1, 2, 4, 5, 7], [3, 6],[]], [[1, 2, 
           3, 5, 7], [4, 6],[]], [[1, 2, 3, 4, 7], [5, 6],[]], [[1, 3, 4, 5, 6], [2,
            7],[]], [[1, 2, 4, 5, 6], [3, 7],[]], [[1, 2, 3, 5, 6], [4, 7],[]], [[1, 2,
            3, 4, 6], [5, 7],[]], [[1, 2, 3, 4, 5], [6, 7],[]]]
                                                                                  
    elif T==[[1, 1, 1, 1, 1], [1], [1]]:
        return [[[1, 4, 5, 6, 7], [2], [3]], [[1, 3, 5, 6, 7], [2], [4]], [[1, 2, 5, 
           6, 7], [3], [4]], [[1, 3, 4, 6, 7], [2], [5]], [[1, 2, 4, 6, 
           7], [3], [5]], [[1, 2, 3, 6, 7], [4], [5]], [[1, 3, 4, 5, 
           7], [2], [6]], [[1, 2, 4, 5, 7], [3], [6]], [[1, 2, 3, 5, 
           7], [4], [6]], [[1, 2, 3, 4, 7], [5], [6]], [[1, 3, 4, 5, 
           6], [2], [7]], [[1, 2, 4, 5, 6], [3], [7]], [[1, 2, 3, 5, 
           6], [4], [7]], [[1, 2, 3, 4, 6], [5], [7]], [[1, 2, 3, 4, 
           5], [6], [7]]]
                                                        
    elif T==[[1, 1, 1, 1], [1, 1, 1], []]:

        return [[[1, 3, 5, 7], [2, 4, 6],[]], [[1, 2, 5, 7], [3, 4, 6],[]], [[1, 3, 4, 
           7], [2, 5, 6],[]], [[1, 2, 4, 7], [3, 5, 6],[]], [[1, 2, 3, 7], [4, 5, 
           6],[]], [[1, 3, 5, 6], [2, 4, 7],[]], [[1, 2, 5, 6], [3, 4, 7],[]], [[1, 3, 
           4, 6], [2, 5, 7],[]], [[1, 2, 4, 6], [3, 5, 7],[]], [[1, 2, 3, 6], [4, 5,
            7],[]], [[1, 3, 4, 5], [2, 6, 7],[]], [[1, 2, 4, 5], [3, 6, 7],[]], [[1, 2,
            3, 5], [4, 6, 7],[]], [[1, 2, 3, 4], [5, 6, 7],[]]]
                                                                         
    elif T==[[1, 1, 1, 1], [1, 1], [1]]:

        return [[[1, 4, 6, 7], [2, 5], [3]], [[1, 3, 6, 7], [2, 5], [4]], [[1, 2, 6, 
           7], [3, 5], [4]], [[1, 3, 6, 7], [2, 4], [5]], [[1, 2, 6, 7], [3, 
           4], [5]], [[1, 4, 5, 7], [2, 6], [3]], [[1, 3, 5, 7], [2, 
           6], [4]], [[1, 2, 5, 7], [3, 6], [4]], [[1, 3, 4, 7], [2, 
           6], [5]], [[1, 2, 4, 7], [3, 6], [5]], [[1, 2, 3, 7], [4, 
           6], [5]], [[1, 3, 5, 7], [2, 4], [6]], [[1, 2, 5, 7], [3, 
           4], [6]], [[1, 3, 4, 7], [2, 5], [6]], [[1, 2, 4, 7], [3, 
           5], [6]], [[1, 2, 3, 7], [4, 5], [6]], [[1, 4, 5, 6], [2, 
           7], [3]], [[1, 3, 5, 6], [2, 7], [4]], [[1, 2, 5, 6], [3, 
           7], [4]], [[1, 3, 4, 6], [2, 7], [5]], [[1, 2, 4, 6], [3, 
           7], [5]], [[1, 2, 3, 6], [4, 7], [5]], [[1, 3, 4, 5], [2, 
           7], [6]], [[1, 2, 4, 5], [3, 7], [6]], [[1, 2, 3, 5], [4, 
           7], [6]], [[1, 2, 3, 4], [5, 7], [6]], [[1, 3, 5, 6], [2, 
           4], [7]], [[1, 2, 5, 6], [3, 4], [7]], [[1, 3, 4, 6], [2, 
           5], [7]], [[1, 2, 4, 6], [3, 5], [7]], [[1, 2, 3, 6], [4, 
           5], [7]], [[1, 3, 4, 5], [2, 6], [7]], [[1, 2, 4, 5], [3, 
           6], [7]], [[1, 2, 3, 5], [4, 6], [7]], [[1, 2, 3, 4], [5, 6], [7]]] 

    elif T==[[1, 1, 1], [1, 1, 1], [1]]:

        return [[[1, 4, 6], [2, 5, 7], [3]], [[1, 3, 6], [2, 5, 7], [4]], [[1, 2, 
           6], [3, 5, 7], [4]], [[1, 3, 6], [2, 4, 7], [5]], [[1, 2, 6], [3, 
           4, 7], [5]], [[1, 4, 5], [2, 6, 7], [3]], [[1, 3, 5], [2, 6, 
           7], [4]], [[1, 2, 5], [3, 6, 7], [4]], [[1, 3, 4], [2, 6, 
           7], [5]], [[1, 2, 4], [3, 6, 7], [5]], [[1, 2, 3], [4, 6, 
           7], [5]], [[1, 3, 5], [2, 4, 7], [6]], [[1, 2, 5], [3, 4, 
           7], [6]], [[1, 3, 4], [2, 5, 7], [6]], [[1, 2, 4], [3, 5, 
           7], [6]], [[1, 2, 3], [4, 5, 7], [6]], [[1, 3, 5], [2, 4, 
           6], [7]], [[1, 2, 5], [3, 4, 6], [7]], [[1, 3, 4], [2, 5, 
           6], [7]], [[1, 2, 4], [3, 5, 6], [7]], [[1, 2, 3], [4, 5, 6], [7]]] 

    elif T==[[1, 1, 1], [1, 1], [1, 1]]:

        return [[[1, 4, 7], [2, 5], [3, 6]], [[1, 3, 7], [2, 5], [4, 6]], [[1, 2, 
           7], [3, 5], [4, 6]], [[1, 3, 7], [2, 4], [5, 6]], [[1, 2, 7], [3, 
           4], [5, 6]], [[1, 4, 6], [2, 5], [3, 7]], [[1, 3, 6], [2, 5], [4, 
           7]], [[1, 2, 6], [3, 5], [4, 7]], [[1, 3, 6], [2, 4], [5, 7]], [[1,
            2, 6], [3, 4], [5, 7]], [[1, 4, 5], [2, 6], [3, 7]], [[1, 3, 
           5], [2, 6], [4, 7]], [[1, 2, 5], [3, 6], [4, 7]], [[1, 3, 4], [2, 
           6], [5, 7]], [[1, 2, 4], [3, 6], [5, 7]], [[1, 2, 3], [4, 6], [5, 
           7]], [[1, 3, 5], [2, 4], [6, 7]], [[1, 2, 5], [3, 4], [6, 7]], [[1,
            3, 4], [2, 5], [6, 7]], [[1, 2, 4], [3, 5], [6, 7]], [[1, 2, 
           3], [4, 5], [6, 7]]]                                                                      
                                                                              
    elif T==[[1, 1, 1, 1, 1, 1, 1, 1], [], []]:
        return [[[1,2,3,4,5,6,7,8],[],[]]]

    elif T==[[1, 1, 1, 1, 1, 1, 1], [1], []]:
        return [[[1, 3, 4, 5, 6, 7, 8], [2],[]], [[1, 2, 4, 5, 6, 7, 8], [3],[]], [[1, 2, 
           3, 5, 6, 7, 8], [4],[]], [[1, 2, 3, 4, 6, 7, 8], [5],[]], [[1, 2, 3, 4, 
           5, 7, 8], [6],[]], [[1, 2, 3, 4, 5, 6, 8], [7],[]], [[1, 2, 3, 4, 5, 6, 
           7], [8],[]]]    
                                                           
    elif T==[[1, 1, 1, 1, 1, 1], [1, 1], []]:
        return [[[1, 3, 5, 6, 7, 8], [2, 4],[]], [[1, 2, 5, 6, 7, 8], [3, 4],[]], [[1, 3, 
           4, 6, 7, 8], [2, 5],[]], [[1, 2, 4, 6, 7, 8], [3, 5],[]], [[1, 2, 3, 6, 
           7, 8], [4, 5],[]], [[1, 3, 4, 5, 7, 8], [2, 6],[]], [[1, 2, 4, 5, 7, 
           8], [3, 6],[]], [[1, 2, 3, 5, 7, 8], [4, 6],[]], [[1, 2, 3, 4, 7, 8], [5,
            6],[]], [[1, 3, 4, 5, 6, 8], [2, 7],[]], [[1, 2, 4, 5, 6, 8], [3, 
           7],[]], [[1, 2, 3, 5, 6, 8], [4, 7],[]], [[1, 2, 3, 4, 6, 8], [5, 
           7],[]], [[1, 2, 3, 4, 5, 8], [6, 7],[]], [[1, 3, 4, 5, 6, 7], [2, 
           8],[]], [[1, 2, 4, 5, 6, 7], [3, 8],[]], [[1, 2, 3, 5, 6, 7], [4, 
           8],[]], [[1, 2, 3, 4, 6, 7], [5, 8],[]], [[1, 2, 3, 4, 5, 7], [6, 
           8],[]], [[1, 2, 3, 4, 5, 6], [7, 8],[]]]
                                                                          
    elif T==[[1, 1, 1, 1, 1, 1], [1], [1]]:
        return [[[1, 4, 5, 6, 7, 8], [2], [3]], [[1, 3, 5, 6, 7, 8], [2], [4]], [[1, 
           2, 5, 6, 7, 8], [3], [4]], [[1, 3, 4, 6, 7, 8], [2], [5]], [[1, 2, 
           4, 6, 7, 8], [3], [5]], [[1, 2, 3, 6, 7, 8], [4], [5]], [[1, 3, 4, 
           5, 7, 8], [2], [6]], [[1, 2, 4, 5, 7, 8], [3], [6]], [[1, 2, 3, 5, 
           7, 8], [4], [6]], [[1, 2, 3, 4, 7, 8], [5], [6]], [[1, 3, 4, 5, 6, 
           8], [2], [7]], [[1, 2, 4, 5, 6, 8], [3], [7]], [[1, 2, 3, 5, 6, 
           8], [4], [7]], [[1, 2, 3, 4, 6, 8], [5], [7]], [[1, 2, 3, 4, 5, 
           8], [6], [7]], [[1, 3, 4, 5, 6, 7], [2], [8]], [[1, 2, 4, 5, 6, 
           7], [3], [8]], [[1, 2, 3, 5, 6, 7], [4], [8]], [[1, 2, 3, 4, 6, 
           7], [5], [8]], [[1, 2, 3, 4, 5, 7], [6], [8]], [[1, 2, 3, 4, 5, 
           6], [7], [8]]]

    elif T== [[1, 1, 1, 1, 1], [1, 1, 1], []]:
        return [[[1, 3, 5, 7, 8], [2, 4, 6],[]], [[1, 2, 5, 7, 8], [3, 4, 6],[]], [[1, 3, 
           4, 7, 8], [2, 5, 6],[]], [[1, 2, 4, 7, 8], [3, 5, 6],[]], [[1, 2, 3, 7, 
           8], [4, 5, 6],[]], [[1, 3, 5, 6, 8], [2, 4, 7],[]], [[1, 2, 5, 6, 8], [3,
            4, 7],[]], [[1, 3, 4, 6, 8], [2, 5, 7],[]], [[1, 2, 4, 6, 8], [3, 5, 
           7],[]], [[1, 2, 3, 6, 8], [4, 5, 7],[]], [[1, 3, 4, 5, 8], [2, 6, 
           7],[]], [[1, 2, 4, 5, 8], [3, 6, 7],[]], [[1, 2, 3, 5, 8], [4, 6, 
           7],[]], [[1, 2, 3, 4, 8], [5, 6, 7],[]], [[1, 3, 5, 6, 7], [2, 4, 
           8],[]], [[1, 2, 5, 6, 7], [3, 4, 8],[]], [[1, 3, 4, 6, 7], [2, 5, 
           8],[]], [[1, 2, 4, 6, 7], [3, 5, 8],[]], [[1, 2, 3, 6, 7], [4, 5, 
           8],[]], [[1, 3, 4, 5, 7], [2, 6, 8],[]], [[1, 2, 4, 5, 7], [3, 6, 
           8],[]], [[1, 2, 3, 5, 7], [4, 6, 8],[]], [[1, 2, 3, 4, 7], [5, 6, 
           8],[]], [[1, 3, 4, 5, 6], [2, 7, 8],[]], [[1, 2, 4, 5, 6], [3, 7, 
           8],[]], [[1, 2, 3, 5, 6], [4, 7, 8],[]], [[1, 2, 3, 4, 6], [5, 7, 
           8],[]], [[1, 2, 3, 4, 5], [6, 7, 8],[]]]
                                                                       
    elif T==[[1, 1, 1, 1, 1], [1, 1], [1]]:
        return [[[1, 4, 6, 7, 8], [2, 5], [3]], [[1, 3, 6, 7, 8], [2, 5], [4]], [[1, 
           2, 6, 7, 8], [3, 5], [4]], [[1, 3, 6, 7, 8], [2, 4], [5]], [[1, 2, 
           6, 7, 8], [3, 4], [5]], [[1, 4, 5, 7, 8], [2, 6], [3]], [[1, 3, 5, 
           7, 8], [2, 6], [4]], [[1, 2, 5, 7, 8], [3, 6], [4]], [[1, 3, 4, 7, 
           8], [2, 6], [5]], [[1, 2, 4, 7, 8], [3, 6], [5]], [[1, 2, 3, 7, 
           8], [4, 6], [5]], [[1, 3, 5, 7, 8], [2, 4], [6]], [[1, 2, 5, 7, 
           8], [3, 4], [6]], [[1, 3, 4, 7, 8], [2, 5], [6]], [[1, 2, 4, 7, 
           8], [3, 5], [6]], [[1, 2, 3, 7, 8], [4, 5], [6]], [[1, 4, 5, 6, 
           8], [2, 7], [3]], [[1, 3, 5, 6, 8], [2, 7], [4]], [[1, 2, 5, 6, 
           8], [3, 7], [4]], [[1, 3, 4, 6, 8], [2, 7], [5]], [[1, 2, 4, 6, 
           8], [3, 7], [5]], [[1, 2, 3, 6, 8], [4, 7], [5]], [[1, 3, 4, 5, 
           8], [2, 7], [6]], [[1, 2, 4, 5, 8], [3, 7], [6]], [[1, 2, 3, 5, 
           8], [4, 7], [6]], [[1, 2, 3, 4, 8], [5, 7], [6]], [[1, 3, 5, 6, 
           8], [2, 4], [7]], [[1, 2, 5, 6, 8], [3, 4], [7]], [[1, 3, 4, 6, 
           8], [2, 5], [7]], [[1, 2, 4, 6, 8], [3, 5], [7]], [[1, 2, 3, 6, 
           8], [4, 5], [7]], [[1, 3, 4, 5, 8], [2, 6], [7]], [[1, 2, 4, 5, 
           8], [3, 6], [7]], [[1, 2, 3, 5, 8], [4, 6], [7]], [[1, 2, 3, 4, 
           8], [5, 6], [7]], [[1, 4, 5, 6, 7], [2, 8], [3]], [[1, 3, 5, 6, 
           7], [2, 8], [4]], [[1, 2, 5, 6, 7], [3, 8], [4]], [[1, 3, 4, 6, 
           7], [2, 8], [5]], [[1, 2, 4, 6, 7], [3, 8], [5]], [[1, 2, 3, 6, 
           7], [4, 8], [5]], [[1, 3, 4, 5, 7], [2, 8], [6]], [[1, 2, 4, 5, 
           7], [3, 8], [6]], [[1, 2, 3, 5, 7], [4, 8], [6]], [[1, 2, 3, 4, 
           7], [5, 8], [6]], [[1, 3, 4, 5, 6], [2, 8], [7]], [[1, 2, 4, 5, 
           6], [3, 8], [7]], [[1, 2, 3, 5, 6], [4, 8], [7]], [[1, 2, 3, 4, 
           6], [5, 8], [7]], [[1, 2, 3, 4, 5], [6, 8], [7]], [[1, 3, 5, 6, 
           7], [2, 4], [8]], [[1, 2, 5, 6, 7], [3, 4], [8]], [[1, 3, 4, 6, 
           7], [2, 5], [8]], [[1, 2, 4, 6, 7], [3, 5], [8]], [[1, 2, 3, 6, 
           7], [4, 5], [8]], [[1, 3, 4, 5, 7], [2, 6], [8]], [[1, 2, 4, 5, 
           7], [3, 6], [8]], [[1, 2, 3, 5, 7], [4, 6], [8]], [[1, 2, 3, 4, 
           7], [5, 6], [8]], [[1, 3, 4, 5, 6], [2, 7], [8]], [[1, 2, 4, 5, 
           6], [3, 7], [8]], [[1, 2, 3, 5, 6], [4, 7], [8]], [[1, 2, 3, 4, 
           6], [5, 7], [8]], [[1, 2, 3, 4, 5], [6, 7], [8]]]                                                                      
    
    elif T==[[1, 1, 1, 1], [1, 1, 1, 1], []]:

        return [[[1, 3, 5, 7], [2, 4, 6, 8],[]], [[1, 2, 5, 7], [3, 4, 6, 8],[]], [[1, 3, 
           4, 7], [2, 5, 6, 8],[]], [[1, 2, 4, 7], [3, 5, 6, 8],[]], [[1, 2, 3, 
           7], [4, 5, 6, 8],[]], [[1, 3, 5, 6], [2, 4, 7, 8],[]], [[1, 2, 5, 6], [3,
            4, 7, 8],[]], [[1, 3, 4, 6], [2, 5, 7, 8],[]], [[1, 2, 4, 6], [3, 5, 7, 
           8],[]], [[1, 2, 3, 6], [4, 5, 7, 8],[]], [[1, 3, 4, 5], [2, 6, 7, 
           8],[]], [[1, 2, 4, 5], [3, 6, 7, 8],[]], [[1, 2, 3, 5], [4, 6, 7, 
           8],[]], [[1, 2, 3, 4], [5, 6, 7, 8],[]]]
                                                                    
    elif T==[[1, 1, 1, 1], [1, 1, 1], [1]] :
        return [[[1, 4, 6, 8], [2, 5, 7], [3]], [[1, 3, 6, 8], [2, 5, 7], [4]], [[1, 
           2, 6, 8], [3, 5, 7], [4]], [[1, 3, 6, 8], [2, 4, 7], [5]], [[1, 2, 
           6, 8], [3, 4, 7], [5]], [[1, 4, 5, 8], [2, 6, 7], [3]], [[1, 3, 5, 
           8], [2, 6, 7], [4]], [[1, 2, 5, 8], [3, 6, 7], [4]], [[1, 3, 4, 
           8], [2, 6, 7], [5]], [[1, 2, 4, 8], [3, 6, 7], [5]], [[1, 2, 3, 
           8], [4, 6, 7], [5]], [[1, 3, 5, 8], [2, 4, 7], [6]], [[1, 2, 5, 
           8], [3, 4, 7], [6]], [[1, 3, 4, 8], [2, 5, 7], [6]], [[1, 2, 4, 
           8], [3, 5, 7], [6]], [[1, 2, 3, 8], [4, 5, 7], [6]], [[1, 3, 5, 
           8], [2, 4, 6], [7]], [[1, 2, 5, 8], [3, 4, 6], [7]], [[1, 3, 4, 
           8], [2, 5, 6], [7]], [[1, 2, 4, 8], [3, 5, 6], [7]], [[1, 2, 3, 
           8], [4, 5, 6], [7]], [[1, 4, 6, 7], [2, 5, 8], [3]], [[1, 3, 6, 
           7], [2, 5, 8], [4]], [[1, 2, 6, 7], [3, 5, 8], [4]], [[1, 3, 6, 
           7], [2, 4, 8], [5]], [[1, 2, 6, 7], [3, 4, 8], [5]], [[1, 4, 5, 
           7], [2, 6, 8], [3]], [[1, 3, 5, 7], [2, 6, 8], [4]], [[1, 2, 5, 
           7], [3, 6, 8], [4]], [[1, 3, 4, 7], [2, 6, 8], [5]], [[1, 2, 4, 
           7], [3, 6, 8], [5]], [[1, 2, 3, 7], [4, 6, 8], [5]], [[1, 3, 5, 
           7], [2, 4, 8], [6]], [[1, 2, 5, 7], [3, 4, 8], [6]], [[1, 3, 4, 
           7], [2, 5, 8], [6]], [[1, 2, 4, 7], [3, 5, 8], [6]], [[1, 2, 3, 
           7], [4, 5, 8], [6]], [[1, 4, 5, 6], [2, 7, 8], [3]], [[1, 3, 5, 
           6], [2, 7, 8], [4]], [[1, 2, 5, 6], [3, 7, 8], [4]], [[1, 3, 4, 
           6], [2, 7, 8], [5]], [[1, 2, 4, 6], [3, 7, 8], [5]], [[1, 2, 3, 
           6], [4, 7, 8], [5]], [[1, 3, 4, 5], [2, 7, 8], [6]], [[1, 2, 4, 
           5], [3, 7, 8], [6]], [[1, 2, 3, 5], [4, 7, 8], [6]], [[1, 2, 3, 
           4], [5, 7, 8], [6]], [[1, 3, 5, 6], [2, 4, 8], [7]], [[1, 2, 5, 
           6], [3, 4, 8], [7]], [[1, 3, 4, 6], [2, 5, 8], [7]], [[1, 2, 4, 
           6], [3, 5, 8], [7]], [[1, 2, 3, 6], [4, 5, 8], [7]], [[1, 3, 4, 
           5], [2, 6, 8], [7]], [[1, 2, 4, 5], [3, 6, 8], [7]], [[1, 2, 3, 
           5], [4, 6, 8], [7]], [[1, 2, 3, 4], [5, 6, 8], [7]], [[1, 3, 5, 
           7], [2, 4, 6], [8]], [[1, 2, 5, 7], [3, 4, 6], [8]], [[1, 3, 4, 
           7], [2, 5, 6], [8]], [[1, 2, 4, 7], [3, 5, 6], [8]], [[1, 2, 3, 
           7], [4, 5, 6], [8]], [[1, 3, 5, 6], [2, 4, 7], [8]], [[1, 2, 5, 
           6], [3, 4, 7], [8]], [[1, 3, 4, 6], [2, 5, 7], [8]], [[1, 2, 4, 
           6], [3, 5, 7], [8]], [[1, 2, 3, 6], [4, 5, 7], [8]], [[1, 3, 4, 
           5], [2, 6, 7], [8]], [[1, 2, 4, 5], [3, 6, 7], [8]], [[1, 2, 3, 
           5], [4, 6, 7], [8]], [[1, 2, 3, 4], [5, 6, 7], [8]]]     
                                                                  
    elif  T==[[1, 1, 1, 1], [1, 1], [1, 1]]:
    
        return [[[1, 4, 6, 8], [2, 5, 7], [3]], [[1, 3, 6, 8], [2, 5, 7], [4]], [[1, 
       2, 6, 8], [3, 5, 7], [4]], [[1, 3, 6, 8], [2, 4, 7], [5]], [[1, 2, 
       6, 8], [3, 4, 7], [5]], [[1, 4, 5, 8], [2, 6, 7], [3]], [[1, 3, 5, 
       8], [2, 6, 7], [4]], [[1, 2, 5, 8], [3, 6, 7], [4]], [[1, 3, 4, 
       8], [2, 6, 7], [5]], [[1, 2, 4, 8], [3, 6, 7], [5]], [[1, 2, 3, 
       8], [4, 6, 7], [5]], [[1, 3, 5, 8], [2, 4, 7], [6]], [[1, 2, 5, 
       8], [3, 4, 7], [6]], [[1, 3, 4, 8], [2, 5, 7], [6]], [[1, 2, 4, 
       8], [3, 5, 7], [6]], [[1, 2, 3, 8], [4, 5, 7], [6]], [[1, 3, 5, 
       8], [2, 4, 6], [7]], [[1, 2, 5, 8], [3, 4, 6], [7]], [[1, 3, 4, 
       8], [2, 5, 6], [7]], [[1, 2, 4, 8], [3, 5, 6], [7]], [[1, 2, 3, 
       8], [4, 5, 6], [7]], [[1, 4, 6, 7], [2, 5, 8], [3]], [[1, 3, 6, 
       7], [2, 5, 8], [4]], [[1, 2, 6, 7], [3, 5, 8], [4]], [[1, 3, 6, 
       7], [2, 4, 8], [5]], [[1, 2, 6, 7], [3, 4, 8], [5]], [[1, 4, 5, 
       7], [2, 6, 8], [3]], [[1, 3, 5, 7], [2, 6, 8], [4]], [[1, 2, 5, 
       7], [3, 6, 8], [4]], [[1, 3, 4, 7], [2, 6, 8], [5]], [[1, 2, 4, 
       7], [3, 6, 8], [5]], [[1, 2, 3, 7], [4, 6, 8], [5]], [[1, 3, 5, 
       7], [2, 4, 8], [6]], [[1, 2, 5, 7], [3, 4, 8], [6]], [[1, 3, 4, 
       7], [2, 5, 8], [6]], [[1, 2, 4, 7], [3, 5, 8], [6]], [[1, 2, 3, 
       7], [4, 5, 8], [6]], [[1, 4, 5, 6], [2, 7, 8], [3]], [[1, 3, 5, 
       6], [2, 7, 8], [4]], [[1, 2, 5, 6], [3, 7, 8], [4]], [[1, 3, 4, 
       6], [2, 7, 8], [5]], [[1, 2, 4, 6], [3, 7, 8], [5]], [[1, 2, 3, 
       6], [4, 7, 8], [5]], [[1, 3, 4, 5], [2, 7, 8], [6]], [[1, 2, 4, 
       5], [3, 7, 8], [6]], [[1, 2, 3, 5], [4, 7, 8], [6]], [[1, 2, 3, 
       4], [5, 7, 8], [6]], [[1, 3, 5, 6], [2, 4, 8], [7]], [[1, 2, 5, 
       6], [3, 4, 8], [7]], [[1, 3, 4, 6], [2, 5, 8], [7]], [[1, 2, 4, 
       6], [3, 5, 8], [7]], [[1, 2, 3, 6], [4, 5, 8], [7]], [[1, 3, 4, 
       5], [2, 6, 8], [7]], [[1, 2, 4, 5], [3, 6, 8], [7]], [[1, 2, 3, 
       5], [4, 6, 8], [7]], [[1, 2, 3, 4], [5, 6, 8], [7]], [[1, 3, 5, 
       7], [2, 4, 6], [8]], [[1, 2, 5, 7], [3, 4, 6], [8]], [[1, 3, 4, 
       7], [2, 5, 6], [8]], [[1, 2, 4, 7], [3, 5, 6], [8]], [[1, 2, 3, 
       7], [4, 5, 6], [8]], [[1, 3, 5, 6], [2, 4, 7], [8]], [[1, 2, 5, 
       6], [3, 4, 7], [8]], [[1, 3, 4, 6], [2, 5, 7], [8]], [[1, 2, 4, 
       6], [3, 5, 7], [8]], [[1, 2, 3, 6], [4, 5, 7], [8]], [[1, 3, 4, 
       5], [2, 6, 7], [8]], [[1, 2, 4, 5], [3, 6, 7], [8]], [[1, 2, 3, 
       5], [4, 6, 7], [8]], [[1, 2, 3, 4], [5, 6, 7], [8]]]
            
    elif T==[[1, 1, 1], [1, 1, 1], [1, 1]]:

        return  [[[1, 4, 7], [2, 5, 8], [3, 6]], [[1, 3, 7], [2, 5, 8], [4, 6]], [[1, 
           2, 7], [3, 5, 8], [4, 6]], [[1, 3, 7], [2, 4, 8], [5, 6]], [[1, 2, 
           7], [3, 4, 8], [5, 6]], [[1, 4, 6], [2, 5, 8], [3, 7]], [[1, 3, 
           6], [2, 5, 8], [4, 7]], [[1, 2, 6], [3, 5, 8], [4, 7]], [[1, 3, 
           6], [2, 4, 8], [5, 7]], [[1, 2, 6], [3, 4, 8], [5, 7]], [[1, 4, 
           5], [2, 6, 8], [3, 7]], [[1, 3, 5], [2, 6, 8], [4, 7]], [[1, 2, 
           5], [3, 6, 8], [4, 7]], [[1, 3, 4], [2, 6, 8], [5, 7]], [[1, 2, 
           4], [3, 6, 8], [5, 7]], [[1, 2, 3], [4, 6, 8], [5, 7]], [[1, 3, 
           5], [2, 4, 8], [6, 7]], [[1, 2, 5], [3, 4, 8], [6, 7]], [[1, 3, 
           4], [2, 5, 8], [6, 7]], [[1, 2, 4], [3, 5, 8], [6, 7]], [[1, 2, 
           3], [4, 5, 8], [6, 7]], [[1, 4, 6], [2, 5, 7], [3, 8]], [[1, 3, 
           6], [2, 5, 7], [4, 8]], [[1, 2, 6], [3, 5, 7], [4, 8]], [[1, 3, 
           6], [2, 4, 7], [5, 8]], [[1, 2, 6], [3, 4, 7], [5, 8]], [[1, 4, 
           5], [2, 6, 7], [3, 8]], [[1, 3, 5], [2, 6, 7], [4, 8]], [[1, 2, 
           5], [3, 6, 7], [4, 8]], [[1, 3, 4], [2, 6, 7], [5, 8]], [[1, 2, 
           4], [3, 6, 7], [5, 8]], [[1, 2, 3], [4, 6, 7], [5, 8]], [[1, 3, 
           5], [2, 4, 7], [6, 8]], [[1, 2, 5], [3, 4, 7], [6, 8]], [[1, 3, 
           4], [2, 5, 7], [6, 8]], [[1, 2, 4], [3, 5, 7], [6, 8]], [[1, 2, 
           3], [4, 5, 7], [6, 8]], [[1, 3, 5], [2, 4, 6], [7, 8]], [[1, 2, 
           5], [3, 4, 6], [7, 8]], [[1, 3, 4], [2, 5, 6], [7, 8]], [[1, 2, 
           4], [3, 5, 6], [7, 8]], [[1, 2, 3], [4, 5, 6], [7, 8]]]                                                             
     

    elif T==[[1, 1, 1, 1, 1, 1, 1, 1, 1], [], []]:
        return  [[[1,2,3,4,5,6,7,8,9],[],[]]]     

    
    elif T==[[1, 1, 1, 1, 1, 1, 1, 1], [1], []]:
        return [[[1, 3, 4, 5, 6, 7, 8, 9], [2],[]], [[1, 2, 4, 5, 6, 7, 8, 
           9], [3],[]], [[1, 2, 3, 5, 6, 7, 8, 9], [4],[]], [[1, 2, 3, 4, 6, 7, 8, 
           9], [5],[]], [[1, 2, 3, 4, 5, 7, 8, 9], [6],[]], [[1, 2, 3, 4, 5, 6, 8, 
           9], [7],[]], [[1, 2, 3, 4, 5, 6, 7, 9], [8],[]], [[1, 2, 3, 4, 5, 6, 7, 
           8], [9],[]]]
    
    elif T==[[1, 1, 1, 1, 1, 1, 1], [1, 1], []]:
        return [[[1, 3, 5, 6, 7, 8, 9], [2, 4],[]], [[1, 2, 5, 6, 7, 8, 9], [3, 
           4],[]], [[1, 3, 4, 6, 7, 8, 9], [2, 5],[]], [[1, 2, 4, 6, 7, 8, 9], [3, 
           5],[]], [[1, 2, 3, 6, 7, 8, 9], [4, 5],[]], [[1, 3, 4, 5, 7, 8, 9], [2, 
           6],[]], [[1, 2, 4, 5, 7, 8, 9], [3, 6],[]], [[1, 2, 3, 5, 7, 8, 9], [4, 
           6],[]], [[1, 2, 3, 4, 7, 8, 9], [5, 6],[]], [[1, 3, 4, 5, 6, 8, 9], [2, 
           7],[]], [[1, 2, 4, 5, 6, 8, 9], [3, 7],[]], [[1, 2, 3, 5, 6, 8, 9], [4, 
           7],[]], [[1, 2, 3, 4, 6, 8, 9], [5, 7],[]], [[1, 2, 3, 4, 5, 8, 9], [6, 
           7],[]], [[1, 3, 4, 5, 6, 7, 9], [2, 8],[]], [[1, 2, 4, 5, 6, 7, 9], [3, 
           8],[]], [[1, 2, 3, 5, 6, 7, 9], [4, 8],[]], [[1, 2, 3, 4, 6, 7, 9], [5, 
           8],[]], [[1, 2, 3, 4, 5, 7, 9], [6, 8],[]], [[1, 2, 3, 4, 5, 6, 9], [7, 
           8],[]], [[1, 3, 4, 5, 6, 7, 8], [2, 9],[]], [[1, 2, 4, 5, 6, 7, 8], [3, 
           9],[]], [[1, 2, 3, 5, 6, 7, 8], [4, 9],[]], [[1, 2, 3, 4, 6, 7, 8], [5, 
           9],[]], [[1, 2, 3, 4, 5, 7, 8], [6, 9],[]], [[1, 2, 3, 4, 5, 6, 8], [7, 
           9],[]], [[1, 2, 3, 4, 5, 6, 7], [8, 9],[]]]
                                                                                
    elif T==[[1, 1, 1, 1, 1, 1, 1], [1], [1]]:
        return [[[1, 4, 5, 6, 7, 8, 9], [2], [3]], [[1, 3, 5, 6, 7, 8, 
           9], [2], [4]], [[1, 2, 5, 6, 7, 8, 9], [3], [4]], [[1, 3, 4, 6, 7, 
           8, 9], [2], [5]], [[1, 2, 4, 6, 7, 8, 9], [3], [5]], [[1, 2, 3, 6, 
           7, 8, 9], [4], [5]], [[1, 3, 4, 5, 7, 8, 9], [2], [6]], [[1, 2, 4, 
           5, 7, 8, 9], [3], [6]], [[1, 2, 3, 5, 7, 8, 9], [4], [6]], [[1, 2, 
           3, 4, 7, 8, 9], [5], [6]], [[1, 3, 4, 5, 6, 8, 9], [2], [7]], [[1, 
           2, 4, 5, 6, 8, 9], [3], [7]], [[1, 2, 3, 5, 6, 8, 
           9], [4], [7]], [[1, 2, 3, 4, 6, 8, 9], [5], [7]], [[1, 2, 3, 4, 5, 
           8, 9], [6], [7]], [[1, 3, 4, 5, 6, 7, 9], [2], [8]], [[1, 2, 4, 5, 
           6, 7, 9], [3], [8]], [[1, 2, 3, 5, 6, 7, 9], [4], [8]], [[1, 2, 3, 
           4, 6, 7, 9], [5], [8]], [[1, 2, 3, 4, 5, 7, 9], [6], [8]], [[1, 2, 
           3, 4, 5, 6, 9], [7], [8]], [[1, 3, 4, 5, 6, 7, 8], [2], [9]], [[1, 
           2, 4, 5, 6, 7, 8], [3], [9]], [[1, 2, 3, 5, 6, 7, 
           8], [4], [9]], [[1, 2, 3, 4, 6, 7, 8], [5], [9]], [[1, 2, 3, 4, 5, 
           7, 8], [6], [9]], [[1, 2, 3, 4, 5, 6, 8], [7], [9]], [[1, 2, 3, 4, 
           5, 6, 7], [8], [9]]]

    elif T==[[1, 1, 1, 1, 1, 1], [1, 1, 1], []]:
        return [[[1, 3, 5, 7, 8, 9], [2, 4, 6],[]], [[1, 2, 5, 7, 8, 9], [3, 4, 
           6],[]], [[1, 3, 4, 7, 8, 9], [2, 5, 6],[]], [[1, 2, 4, 7, 8, 9], [3, 5, 
           6],[]], [[1, 2, 3, 7, 8, 9], [4, 5, 6],[]], [[1, 3, 5, 6, 8, 9], [2, 4, 
           7],[]], [[1, 2, 5, 6, 8, 9], [3, 4, 7],[]], [[1, 3, 4, 6, 8, 9], [2, 5, 
           7],[]], [[1, 2, 4, 6, 8, 9], [3, 5, 7],[]], [[1, 2, 3, 6, 8, 9], [4, 5, 
           7],[]], [[1, 3, 4, 5, 8, 9], [2, 6, 7],[]], [[1, 2, 4, 5, 8, 9], [3, 6, 
           7],[]], [[1, 2, 3, 5, 8, 9], [4, 6, 7],[]], [[1, 2, 3, 4, 8, 9], [5, 6, 
           7],[]], [[1, 3, 5, 6, 7, 9], [2, 4, 8],[]], [[1, 2, 5, 6, 7, 9], [3, 4, 
           8],[]], [[1, 3, 4, 6, 7, 9], [2, 5, 8],[]], [[1, 2, 4, 6, 7, 9], [3, 5, 
           8],[]], [[1, 2, 3, 6, 7, 9], [4, 5, 8],[]], [[1, 3, 4, 5, 7, 9], [2, 6, 
           8],[]], [[1, 2, 4, 5, 7, 9], [3, 6, 8],[]], [[1, 2, 3, 5, 7, 9], [4, 6, 
           8],[]], [[1, 2, 3, 4, 7, 9], [5, 6, 8],[]], [[1, 3, 4, 5, 6, 9], [2, 7, 
           8],[]], [[1, 2, 4, 5, 6, 9], [3, 7, 8],[]], [[1, 2, 3, 5, 6, 9], [4, 7, 
           8],[]], [[1, 2, 3, 4, 6, 9], [5, 7, 8],[]], [[1, 2, 3, 4, 5, 9], [6, 7, 
           8],[]], [[1, 3, 5, 6, 7, 8], [2, 4, 9],[]], [[1, 2, 5, 6, 7, 8], [3, 4, 
           9],[]], [[1, 3, 4, 6, 7, 8], [2, 5, 9],[]], [[1, 2, 4, 6, 7, 8], [3, 5, 
           9],[]], [[1, 2, 3, 6, 7, 8], [4, 5, 9],[]], [[1, 3, 4, 5, 7, 8], [2, 6, 
           9],[]], [[1, 2, 4, 5, 7, 8], [3, 6, 9],[]], [[1, 2, 3, 5, 7, 8], [4, 6, 
           9],[]], [[1, 2, 3, 4, 7, 8], [5, 6, 9],[]], [[1, 3, 4, 5, 6, 8], [2, 7, 
           9],[]], [[1, 2, 4, 5, 6, 8], [3, 7, 9],[]], [[1, 2, 3, 5, 6, 8], [4, 7, 
           9],[]], [[1, 2, 3, 4, 6, 8], [5, 7, 9],[]], [[1, 2, 3, 4, 5, 8], [6, 7, 
           9],[]], [[1, 3, 4, 5, 6, 7], [2, 8, 9],[]], [[1, 2, 4, 5, 6, 7], [3, 8, 
           9],[]], [[1, 2, 3, 5, 6, 7], [4, 8, 9],[]], [[1, 2, 3, 4, 6, 7], [5, 8, 
           9],[]], [[1, 2, 3, 4, 5, 7], [6, 8, 9],[]], [[1, 2, 3, 4, 5, 6], [7, 8, 
           9],[]]]

    elif T==[[1,1,1,1,1,1],[1,1],[1]]: 
        return [[[1, 4, 6, 7, 8, 9], [2, 5], [3]], [[1, 3, 6, 7, 8, 9], [2, 
           5], [4]], [[1, 2, 6, 7, 8, 9], [3, 5], [4]], [[1, 3, 6, 7, 8, 
           9], [2, 4], [5]], [[1, 2, 6, 7, 8, 9], [3, 4], [5]], [[1, 4, 5, 7, 
           8, 9], [2, 6], [3]], [[1, 3, 5, 7, 8, 9], [2, 6], [4]], [[1, 2, 5, 
           7, 8, 9], [3, 6], [4]], [[1, 3, 4, 7, 8, 9], [2, 6], [5]], [[1, 2, 
           4, 7, 8, 9], [3, 6], [5]], [[1, 2, 3, 7, 8, 9], [4, 6], [5]], [[1, 
           3, 5, 7, 8, 9], [2, 4], [6]], [[1, 2, 5, 7, 8, 9], [3, 
           4], [6]], [[1, 3, 4, 7, 8, 9], [2, 5], [6]], [[1, 2, 4, 7, 8, 
           9], [3, 5], [6]], [[1, 2, 3, 7, 8, 9], [4, 5], [6]], [[1, 4, 5, 6, 
           8, 9], [2, 7], [3]], [[1, 3, 5, 6, 8, 9], [2, 7], [4]], [[1, 2, 5, 
           6, 8, 9], [3, 7], [4]], [[1, 3, 4, 6, 8, 9], [2, 7], [5]], [[1, 2, 
           4, 6, 8, 9], [3, 7], [5]], [[1, 2, 3, 6, 8, 9], [4, 7], [5]], [[1, 
           3, 4, 5, 8, 9], [2, 7], [6]], [[1, 2, 4, 5, 8, 9], [3, 
           7], [6]], [[1, 2, 3, 5, 8, 9], [4, 7], [6]], [[1, 2, 3, 4, 8, 
           9], [5, 7], [6]], [[1, 3, 5, 6, 8, 9], [2, 4], [7]], [[1, 2, 5, 6, 
           8, 9], [3, 4], [7]], [[1, 3, 4, 6, 8, 9], [2, 5], [7]], [[1, 2, 4, 
           6, 8, 9], [3, 5], [7]], [[1, 2, 3, 6, 8, 9], [4, 5], [7]], [[1, 3, 
           4, 5, 8, 9], [2, 6], [7]], [[1, 2, 4, 5, 8, 9], [3, 6], [7]], [[1, 
           2, 3, 5, 8, 9], [4, 6], [7]], [[1, 2, 3, 4, 8, 9], [5, 
           6], [7]], [[1, 4, 5, 6, 7, 9], [2, 8], [3]], [[1, 3, 5, 6, 7, 
           9], [2, 8], [4]], [[1, 2, 5, 6, 7, 9], [3, 8], [4]], [[1, 3, 4, 6, 
           7, 9], [2, 8], [5]], [[1, 2, 4, 6, 7, 9], [3, 8], [5]], [[1, 2, 3, 
           6, 7, 9], [4, 8], [5]], [[1, 3, 4, 5, 7, 9], [2, 8], [6]], [[1, 2, 
           4, 5, 7, 9], [3, 8], [6]], [[1, 2, 3, 5, 7, 9], [4, 8], [6]], [[1, 
           2, 3, 4, 7, 9], [5, 8], [6]], [[1, 3, 4, 5, 6, 9], [2, 
           8], [7]], [[1, 2, 4, 5, 6, 9], [3, 8], [7]], [[1, 2, 3, 5, 6, 
           9], [4, 8], [7]], [[1, 2, 3, 4, 6, 9], [5, 8], [7]], [[1, 2, 3, 4, 
           5, 9], [6, 8], [7]], [[1, 3, 5, 6, 7, 9], [2, 4], [8]], [[1, 2, 5, 
           6, 7, 9], [3, 4], [8]], [[1, 3, 4, 6, 7, 9], [2, 5], [8]], [[1, 2, 
           4, 6, 7, 9], [3, 5], [8]], [[1, 2, 3, 6, 7, 9], [4, 5], [8]], [[1, 
           3, 4, 5, 7, 9], [2, 6], [8]], [[1, 2, 4, 5, 7, 9], [3, 
           6], [8]], [[1, 2, 3, 5, 7, 9], [4, 6], [8]], [[1, 2, 3, 4, 7, 
           9], [5, 6], [8]], [[1, 3, 4, 5, 6, 9], [2, 7], [8]], [[1, 2, 4, 5, 
           6, 9], [3, 7], [8]], [[1, 2, 3, 5, 6, 9], [4, 7], [8]], [[1, 2, 3, 
           4, 6, 9], [5, 7], [8]], [[1, 2, 3, 4, 5, 9], [6, 7], [8]], [[1, 4, 
           5, 6, 7, 8], [2, 9], [3]], [[1, 3, 5, 6, 7, 8], [2, 9], [4]], [[1, 
           2, 5, 6, 7, 8], [3, 9], [4]], [[1, 3, 4, 6, 7, 8], [2, 
           9], [5]], [[1, 2, 4, 6, 7, 8], [3, 9], [5]], [[1, 2, 3, 6, 7, 
           8], [4, 9], [5]], [[1, 3, 4, 5, 7, 8], [2, 9], [6]], [[1, 2, 4, 5, 
           7, 8], [3, 9], [6]], [[1, 2, 3, 5, 7, 8], [4, 9], [6]], [[1, 2, 3, 
           4, 7, 8], [5, 9], [6]], [[1, 3, 4, 5, 6, 8], [2, 9], [7]], [[1, 2, 
           4, 5, 6, 8], [3, 9], [7]], [[1, 2, 3, 5, 6, 8], [4, 9], [7]], [[1, 
           2, 3, 4, 6, 8], [5, 9], [7]], [[1, 2, 3, 4, 5, 8], [6, 
           9], [7]], [[1, 3, 4, 5, 6, 7], [2, 9], [8]], [[1, 2, 4, 5, 6, 
           7], [3, 9], [8]], [[1, 2, 3, 5, 6, 7], [4, 9], [8]], [[1, 2, 3, 4, 
           6, 7], [5, 9], [8]], [[1, 2, 3, 4, 5, 7], [6, 9], [8]], [[1, 2, 3, 
           4, 5, 6], [7, 9], [8]], [[1, 3, 5, 6, 7, 8], [2, 4], [9]], [[1, 2, 
           5, 6, 7, 8], [3, 4], [9]], [[1, 3, 4, 6, 7, 8], [2, 5], [9]], [[1, 
           2, 4, 6, 7, 8], [3, 5], [9]], [[1, 2, 3, 6, 7, 8], [4, 
           5], [9]], [[1, 3, 4, 5, 7, 8], [2, 6], [9]], [[1, 2, 4, 5, 7, 
           8], [3, 6], [9]], [[1, 2, 3, 5, 7, 8], [4, 6], [9]], [[1, 2, 3, 4, 
           7, 8], [5, 6], [9]], [[1, 3, 4, 5, 6, 8], [2, 7], [9]], [[1, 2, 4, 
           5, 6, 8], [3, 7], [9]], [[1, 2, 3, 5, 6, 8], [4, 7], [9]], [[1, 2, 
           3, 4, 6, 8], [5, 7], [9]], [[1, 2, 3, 4, 5, 8], [6, 7], [9]], [[1, 
           3, 4, 5, 6, 7], [2, 8], [9]], [[1, 2, 4, 5, 6, 7], [3, 
           8], [9]], [[1, 2, 3, 5, 6, 7], [4, 8], [9]], [[1, 2, 3, 4, 6, 
           7], [5, 8], [9]], [[1, 2, 3, 4, 5, 7], [6, 8], [9]], [[1, 2, 3, 4, 
           5, 6], [7, 8], [9]]]
                                                                     

    elif T==[[1, 1, 1, 1, 1], [1, 1, 1, 1], []]:
        return [[[1, 3, 5, 7, 9], [2, 4, 6, 8],[]], [[1, 2, 5, 7, 9], [3, 4, 6, 
           8],[]], [[1, 3, 4, 7, 9], [2, 5, 6, 8],[]], [[1, 2, 4, 7, 9], [3, 5, 6, 
           8],[]], [[1, 2, 3, 7, 9], [4, 5, 6, 8],[]], [[1, 3, 5, 6, 9], [2, 4, 7, 
           8],[]], [[1, 2, 5, 6, 9], [3, 4, 7, 8],[]], [[1, 3, 4, 6, 9], [2, 5, 7, 
           8],[]], [[1, 2, 4, 6, 9], [3, 5, 7, 8],[]], [[1, 2, 3, 6, 9], [4, 5, 7, 
           8],[]], [[1, 3, 4, 5, 9], [2, 6, 7, 8],[]], [[1, 2, 4, 5, 9], [3, 6, 7, 
           8],[]], [[1, 2, 3, 5, 9], [4, 6, 7, 8],[]], [[1, 2, 3, 4, 9], [5, 6, 7, 
           8],[]], [[1, 3, 5, 7, 8], [2, 4, 6, 9],[]], [[1, 2, 5, 7, 8], [3, 4, 6, 
           9],[]], [[1, 3, 4, 7, 8], [2, 5, 6, 9],[]], [[1, 2, 4, 7, 8], [3, 5, 6, 
           9],[]], [[1, 2, 3, 7, 8], [4, 5, 6, 9],[]], [[1, 3, 5, 6, 8], [2, 4, 7, 
           9],[]], [[1, 2, 5, 6, 8], [3, 4, 7, 9],[]], [[1, 3, 4, 6, 8], [2, 5, 7, 
           9],[]], [[1, 2, 4, 6, 8], [3, 5, 7, 9],[]], [[1, 2, 3, 6, 8], [4, 5, 7, 
           9],[]], [[1, 3, 4, 5, 8], [2, 6, 7, 9],[]], [[1, 2, 4, 5, 8], [3, 6, 7, 
           9],[]], [[1, 2, 3, 5, 8], [4, 6, 7, 9],[]], [[1, 2, 3, 4, 8], [5, 6, 7, 
           9],[]], [[1, 3, 5, 6, 7], [2, 4, 8, 9],[]], [[1, 2, 5, 6, 7], [3, 4, 8, 
           9],[]], [[1, 3, 4, 6, 7], [2, 5, 8, 9],[]], [[1, 2, 4, 6, 7], [3, 5, 8, 
           9],[]], [[1, 2, 3, 6, 7], [4, 5, 8, 9],[]], [[1, 3, 4, 5, 7], [2, 6, 8, 
           9],[]], [[1, 2, 4, 5, 7], [3, 6, 8, 9],[]], [[1, 2, 3, 5, 7], [4, 6, 8, 
           9],[]], [[1, 2, 3, 4, 7], [5, 6, 8, 9],[]], [[1, 3, 4, 5, 6], [2, 7, 8, 
           9],[]], [[1, 2, 4, 5, 6], [3, 7, 8, 9],[]], [[1, 2, 3, 5, 6], [4, 7, 8, 
           9],[]], [[1, 2, 3, 4, 6], [5, 7, 8, 9],[]], [[1, 2, 3, 4, 5], [6, 7, 8, 
           9],[]]]                                                               
                                                                  
    elif T==[[1, 1, 1, 1, 1], [1, 1, 1], [1]]:
        return [[[1, 4, 6, 8, 9], [2, 5, 7], [3]], [[1, 3, 6, 8, 9], [2, 5, 
           7], [4]], [[1, 2, 6, 8, 9], [3, 5, 7], [4]], [[1, 3, 6, 8, 9], [2, 
           4, 7], [5]], [[1, 2, 6, 8, 9], [3, 4, 7], [5]], [[1, 4, 5, 8, 
           9], [2, 6, 7], [3]], [[1, 3, 5, 8, 9], [2, 6, 7], [4]], [[1, 2, 5, 
           8, 9], [3, 6, 7], [4]], [[1, 3, 4, 8, 9], [2, 6, 7], [5]], [[1, 2, 
           4, 8, 9], [3, 6, 7], [5]], [[1, 2, 3, 8, 9], [4, 6, 7], [5]], [[1, 
           3, 5, 8, 9], [2, 4, 7], [6]], [[1, 2, 5, 8, 9], [3, 4, 
           7], [6]], [[1, 3, 4, 8, 9], [2, 5, 7], [6]], [[1, 2, 4, 8, 9], [3, 
           5, 7], [6]], [[1, 2, 3, 8, 9], [4, 5, 7], [6]], [[1, 3, 5, 8, 
           9], [2, 4, 6], [7]], [[1, 2, 5, 8, 9], [3, 4, 6], [7]], [[1, 3, 4, 
           8, 9], [2, 5, 6], [7]], [[1, 2, 4, 8, 9], [3, 5, 6], [7]], [[1, 2, 
           3, 8, 9], [4, 5, 6], [7]], [[1, 4, 6, 7, 9], [2, 5, 8], [3]], [[1, 
           3, 6, 7, 9], [2, 5, 8], [4]], [[1, 2, 6, 7, 9], [3, 5, 
           8], [4]], [[1, 3, 6, 7, 9], [2, 4, 8], [5]], [[1, 2, 6, 7, 9], [3, 
           4, 8], [5]], [[1, 4, 5, 7, 9], [2, 6, 8], [3]], [[1, 3, 5, 7, 
           9], [2, 6, 8], [4]], [[1, 2, 5, 7, 9], [3, 6, 8], [4]], [[1, 3, 4, 
           7, 9], [2, 6, 8], [5]], [[1, 2, 4, 7, 9], [3, 6, 8], [5]], [[1, 2, 
           3, 7, 9], [4, 6, 8], [5]], [[1, 3, 5, 7, 9], [2, 4, 8], [6]], [[1, 
           2, 5, 7, 9], [3, 4, 8], [6]], [[1, 3, 4, 7, 9], [2, 5, 
           8], [6]], [[1, 2, 4, 7, 9], [3, 5, 8], [6]], [[1, 2, 3, 7, 9], [4, 
           5, 8], [6]], [[1, 4, 5, 6, 9], [2, 7, 8], [3]], [[1, 3, 5, 6, 
           9], [2, 7, 8], [4]], [[1, 2, 5, 6, 9], [3, 7, 8], [4]], [[1, 3, 4, 
           6, 9], [2, 7, 8], [5]], [[1, 2, 4, 6, 9], [3, 7, 8], [5]], [[1, 2, 
           3, 6, 9], [4, 7, 8], [5]], [[1, 3, 4, 5, 9], [2, 7, 8], [6]], [[1, 
           2, 4, 5, 9], [3, 7, 8], [6]], [[1, 2, 3, 5, 9], [4, 7, 
           8], [6]], [[1, 2, 3, 4, 9], [5, 7, 8], [6]], [[1, 3, 5, 6, 9], [2, 
           4, 8], [7]], [[1, 2, 5, 6, 9], [3, 4, 8], [7]], [[1, 3, 4, 6, 
           9], [2, 5, 8], [7]], [[1, 2, 4, 6, 9], [3, 5, 8], [7]], [[1, 2, 3, 
           6, 9], [4, 5, 8], [7]], [[1, 3, 4, 5, 9], [2, 6, 8], [7]], [[1, 2, 
           4, 5, 9], [3, 6, 8], [7]], [[1, 2, 3, 5, 9], [4, 6, 8], [7]], [[1, 
           2, 3, 4, 9], [5, 6, 8], [7]], [[1, 3, 5, 7, 9], [2, 4, 
           6], [8]], [[1, 2, 5, 7, 9], [3, 4, 6], [8]], [[1, 3, 4, 7, 9], [2, 
           5, 6], [8]], [[1, 2, 4, 7, 9], [3, 5, 6], [8]], [[1, 2, 3, 7, 
           9], [4, 5, 6], [8]], [[1, 3, 5, 6, 9], [2, 4, 7], [8]], [[1, 2, 5, 
           6, 9], [3, 4, 7], [8]], [[1, 3, 4, 6, 9], [2, 5, 7], [8]], [[1, 2, 
           4, 6, 9], [3, 5, 7], [8]], [[1, 2, 3, 6, 9], [4, 5, 7], [8]], [[1, 
           3, 4, 5, 9], [2, 6, 7], [8]], [[1, 2, 4, 5, 9], [3, 6, 
           7], [8]], [[1, 2, 3, 5, 9], [4, 6, 7], [8]], [[1, 2, 3, 4, 9], [5, 
           6, 7], [8]], [[1, 4, 6, 7, 8], [2, 5, 9], [3]], [[1, 3, 6, 7, 
           8], [2, 5, 9], [4]], [[1, 2, 6, 7, 8], [3, 5, 9], [4]], [[1, 3, 6, 
           7, 8], [2, 4, 9], [5]], [[1, 2, 6, 7, 8], [3, 4, 9], [5]], [[1, 4, 
           5, 7, 8], [2, 6, 9], [3]], [[1, 3, 5, 7, 8], [2, 6, 9], [4]], [[1, 
           2, 5, 7, 8], [3, 6, 9], [4]], [[1, 3, 4, 7, 8], [2, 6, 
           9], [5]], [[1, 2, 4, 7, 8], [3, 6, 9], [5]], [[1, 2, 3, 7, 8], [4, 
           6, 9], [5]], [[1, 3, 5, 7, 8], [2, 4, 9], [6]], [[1, 2, 5, 7, 
           8], [3, 4, 9], [6]], [[1, 3, 4, 7, 8], [2, 5, 9], [6]], [[1, 2, 4, 
           7, 8], [3, 5, 9], [6]], [[1, 2, 3, 7, 8], [4, 5, 9], [6]], [[1, 4, 
           5, 6, 8], [2, 7, 9], [3]], [[1, 3, 5, 6, 8], [2, 7, 9], [4]], [[1, 
           2, 5, 6, 8], [3, 7, 9], [4]], [[1, 3, 4, 6, 8], [2, 7, 
           9], [5]], [[1, 2, 4, 6, 8], [3, 7, 9], [5]], [[1, 2, 3, 6, 8], [4, 
           7, 9], [5]], [[1, 3, 4, 5, 8], [2, 7, 9], [6]], [[1, 2, 4, 5, 
           8], [3, 7, 9], [6]], [[1, 2, 3, 5, 8], [4, 7, 9], [6]], [[1, 2, 3, 
           4, 8], [5, 7, 9], [6]], [[1, 3, 5, 6, 8], [2, 4, 9], [7]], [[1, 2, 
           5, 6, 8], [3, 4, 9], [7]], [[1, 3, 4, 6, 8], [2, 5, 9], [7]], [[1, 
           2, 4, 6, 8], [3, 5, 9], [7]], [[1, 2, 3, 6, 8], [4, 5, 
           9], [7]], [[1, 3, 4, 5, 8], [2, 6, 9], [7]], [[1, 2, 4, 5, 8], [3, 
           6, 9], [7]], [[1, 2, 3, 5, 8], [4, 6, 9], [7]], [[1, 2, 3, 4, 
           8], [5, 6, 9], [7]], [[1, 4, 5, 6, 7], [2, 8, 9], [3]], [[1, 3, 5, 
           6, 7], [2, 8, 9], [4]], [[1, 2, 5, 6, 7], [3, 8, 9], [4]], [[1, 3, 
           4, 6, 7], [2, 8, 9], [5]], [[1, 2, 4, 6, 7], [3, 8, 9], [5]], [[1, 
           2, 3, 6, 7], [4, 8, 9], [5]], [[1, 3, 4, 5, 7], [2, 8, 
           9], [6]], [[1, 2, 4, 5, 7], [3, 8, 9], [6]], [[1, 2, 3, 5, 7], [4, 
           8, 9], [6]], [[1, 2, 3, 4, 7], [5, 8, 9], [6]], [[1, 3, 4, 5, 
           6], [2, 8, 9], [7]], [[1, 2, 4, 5, 6], [3, 8, 9], [7]], [[1, 2, 3, 
           5, 6], [4, 8, 9], [7]], [[1, 2, 3, 4, 6], [5, 8, 9], [7]], [[1, 2, 
           3, 4, 5], [6, 8, 9], [7]], [[1, 3, 5, 6, 7], [2, 4, 9], [8]], [[1, 
           2, 5, 6, 7], [3, 4, 9], [8]], [[1, 3, 4, 6, 7], [2, 5, 
           9], [8]], [[1, 2, 4, 6, 7], [3, 5, 9], [8]], [[1, 2, 3, 6, 7], [4, 
           5, 9], [8]], [[1, 3, 4, 5, 7], [2, 6, 9], [8]], [[1, 2, 4, 5, 
           7], [3, 6, 9], [8]], [[1, 2, 3, 5, 7], [4, 6, 9], [8]], [[1, 2, 3, 
           4, 7], [5, 6, 9], [8]], [[1, 3, 4, 5, 6], [2, 7, 9], [8]], [[1, 2, 
           4, 5, 6], [3, 7, 9], [8]], [[1, 2, 3, 5, 6], [4, 7, 9], [8]], [[1, 
           2, 3, 4, 6], [5, 7, 9], [8]], [[1, 2, 3, 4, 5], [6, 7, 
           9], [8]], [[1, 3, 5, 7, 8], [2, 4, 6], [9]], [[1, 2, 5, 7, 8], [3, 
           4, 6], [9]], [[1, 3, 4, 7, 8], [2, 5, 6], [9]], [[1, 2, 4, 7, 
           8], [3, 5, 6], [9]], [[1, 2, 3, 7, 8], [4, 5, 6], [9]], [[1, 3, 5, 
           6, 8], [2, 4, 7], [9]], [[1, 2, 5, 6, 8], [3, 4, 7], [9]], [[1, 3, 
           4, 6, 8], [2, 5, 7], [9]], [[1, 2, 4, 6, 8], [3, 5, 7], [9]], [[1, 
           2, 3, 6, 8], [4, 5, 7], [9]], [[1, 3, 4, 5, 8], [2, 6, 
           7], [9]], [[1, 2, 4, 5, 8], [3, 6, 7], [9]], [[1, 2, 3, 5, 8], [4, 
           6, 7], [9]], [[1, 2, 3, 4, 8], [5, 6, 7], [9]], [[1, 3, 5, 6, 
           7], [2, 4, 8], [9]], [[1, 2, 5, 6, 7], [3, 4, 8], [9]], [[1, 3, 4, 
           6, 7], [2, 5, 8], [9]], [[1, 2, 4, 6, 7], [3, 5, 8], [9]], [[1, 2, 
           3, 6, 7], [4, 5, 8], [9]], [[1, 3, 4, 5, 7], [2, 6, 8], [9]], [[1, 
           2, 4, 5, 7], [3, 6, 8], [9]], [[1, 2, 3, 5, 7], [4, 6, 
           8], [9]], [[1, 2, 3, 4, 7], [5, 6, 8], [9]], [[1, 3, 4, 5, 6], [2, 
           7, 8], [9]], [[1, 2, 4, 5, 6], [3, 7, 8], [9]], [[1, 2, 3, 5, 
           6], [4, 7, 8], [9]], [[1, 2, 3, 4, 6], [5, 7, 8], [9]], [[1, 2, 3, 
           4, 5], [6, 7, 8], [9]]]

    elif  T==[[1, 1, 1, 1, 1], [1, 1], [1, 1]]:

        return  [[[1, 4, 7, 8, 9], [2, 5], [3, 6]], [[1, 3, 7, 8, 9], [2, 5], [4, 
           6]], [[1, 2, 7, 8, 9], [3, 5], [4, 6]], [[1, 3, 7, 8, 9], [2, 
           4], [5, 6]], [[1, 2, 7, 8, 9], [3, 4], [5, 6]], [[1, 4, 6, 8, 
           9], [2, 5], [3, 7]], [[1, 3, 6, 8, 9], [2, 5], [4, 7]], [[1, 2, 6, 
           8, 9], [3, 5], [4, 7]], [[1, 3, 6, 8, 9], [2, 4], [5, 7]], [[1, 2, 
           6, 8, 9], [3, 4], [5, 7]], [[1, 4, 5, 8, 9], [2, 6], [3, 7]], [[1, 
           3, 5, 8, 9], [2, 6], [4, 7]], [[1, 2, 5, 8, 9], [3, 6], [4, 
           7]], [[1, 3, 4, 8, 9], [2, 6], [5, 7]], [[1, 2, 4, 8, 9], [3, 
           6], [5, 7]], [[1, 2, 3, 8, 9], [4, 6], [5, 7]], [[1, 3, 5, 8, 
           9], [2, 4], [6, 7]], [[1, 2, 5, 8, 9], [3, 4], [6, 7]], [[1, 3, 4, 
           8, 9], [2, 5], [6, 7]], [[1, 2, 4, 8, 9], [3, 5], [6, 7]], [[1, 2, 
           3, 8, 9], [4, 5], [6, 7]], [[1, 4, 6, 7, 9], [2, 5], [3, 8]], [[1, 
           3, 6, 7, 9], [2, 5], [4, 8]], [[1, 2, 6, 7, 9], [3, 5], [4, 
           8]], [[1, 3, 6, 7, 9], [2, 4], [5, 8]], [[1, 2, 6, 7, 9], [3, 
           4], [5, 8]], [[1, 4, 5, 7, 9], [2, 6], [3, 8]], [[1, 3, 5, 7, 
           9], [2, 6], [4, 8]], [[1, 2, 5, 7, 9], [3, 6], [4, 8]], [[1, 3, 4, 
           7, 9], [2, 6], [5, 8]], [[1, 2, 4, 7, 9], [3, 6], [5, 8]], [[1, 2, 
           3, 7, 9], [4, 6], [5, 8]], [[1, 3, 5, 7, 9], [2, 4], [6, 8]], [[1, 
           2, 5, 7, 9], [3, 4], [6, 8]], [[1, 3, 4, 7, 9], [2, 5], [6, 
           8]], [[1, 2, 4, 7, 9], [3, 5], [6, 8]], [[1, 2, 3, 7, 9], [4, 
           5], [6, 8]], [[1, 4, 5, 6, 9], [2, 7], [3, 8]], [[1, 3, 5, 6, 
           9], [2, 7], [4, 8]], [[1, 2, 5, 6, 9], [3, 7], [4, 8]], [[1, 3, 4, 
           6, 9], [2, 7], [5, 8]], [[1, 2, 4, 6, 9], [3, 7], [5, 8]], [[1, 2, 
           3, 6, 9], [4, 7], [5, 8]], [[1, 3, 4, 5, 9], [2, 7], [6, 8]], [[1, 
           2, 4, 5, 9], [3, 7], [6, 8]], [[1, 2, 3, 5, 9], [4, 7], [6, 
           8]], [[1, 2, 3, 4, 9], [5, 7], [6, 8]], [[1, 3, 5, 6, 9], [2, 
           4], [7, 8]], [[1, 2, 5, 6, 9], [3, 4], [7, 8]], [[1, 3, 4, 6, 
           9], [2, 5], [7, 8]], [[1, 2, 4, 6, 9], [3, 5], [7, 8]], [[1, 2, 3, 
           6, 9], [4, 5], [7, 8]], [[1, 3, 4, 5, 9], [2, 6], [7, 8]], [[1, 2, 
           4, 5, 9], [3, 6], [7, 8]], [[1, 2, 3, 5, 9], [4, 6], [7, 8]], [[1, 
           2, 3, 4, 9], [5, 6], [7, 8]], [[1, 4, 6, 7, 8], [2, 5], [3, 
           9]], [[1, 3, 6, 7, 8], [2, 5], [4, 9]], [[1, 2, 6, 7, 8], [3, 
           5], [4, 9]], [[1, 3, 6, 7, 8], [2, 4], [5, 9]], [[1, 2, 6, 7, 
           8], [3, 4], [5, 9]], [[1, 4, 5, 7, 8], [2, 6], [3, 9]], [[1, 3, 5, 
           7, 8], [2, 6], [4, 9]], [[1, 2, 5, 7, 8], [3, 6], [4, 9]], [[1, 3, 
           4, 7, 8], [2, 6], [5, 9]], [[1, 2, 4, 7, 8], [3, 6], [5, 9]], [[1, 
           2, 3, 7, 8], [4, 6], [5, 9]], [[1, 3, 5, 7, 8], [2, 4], [6, 
           9]], [[1, 2, 5, 7, 8], [3, 4], [6, 9]], [[1, 3, 4, 7, 8], [2, 
           5], [6, 9]], [[1, 2, 4, 7, 8], [3, 5], [6, 9]], [[1, 2, 3, 7, 
           8], [4, 5], [6, 9]], [[1, 4, 5, 6, 8], [2, 7], [3, 9]], [[1, 3, 5, 
           6, 8], [2, 7], [4, 9]], [[1, 2, 5, 6, 8], [3, 7], [4, 9]], [[1, 3, 
           4, 6, 8], [2, 7], [5, 9]], [[1, 2, 4, 6, 8], [3, 7], [5, 9]], [[1, 
           2, 3, 6, 8], [4, 7], [5, 9]], [[1, 3, 4, 5, 8], [2, 7], [6, 
           9]], [[1, 2, 4, 5, 8], [3, 7], [6, 9]], [[1, 2, 3, 5, 8], [4, 
           7], [6, 9]], [[1, 2, 3, 4, 8], [5, 7], [6, 9]], [[1, 3, 5, 6, 
           8], [2, 4], [7, 9]], [[1, 2, 5, 6, 8], [3, 4], [7, 9]], [[1, 3, 4, 
           6, 8], [2, 5], [7, 9]], [[1, 2, 4, 6, 8], [3, 5], [7, 9]], [[1, 2, 
           3, 6, 8], [4, 5], [7, 9]], [[1, 3, 4, 5, 8], [2, 6], [7, 9]], [[1, 
           2, 4, 5, 8], [3, 6], [7, 9]], [[1, 2, 3, 5, 8], [4, 6], [7, 
           9]], [[1, 2, 3, 4, 8], [5, 6], [7, 9]], [[1, 4, 5, 6, 7], [2, 
           8], [3, 9]], [[1, 3, 5, 6, 7], [2, 8], [4, 9]], [[1, 2, 5, 6, 
           7], [3, 8], [4, 9]], [[1, 3, 4, 6, 7], [2, 8], [5, 9]], [[1, 2, 4, 
           6, 7], [3, 8], [5, 9]], [[1, 2, 3, 6, 7], [4, 8], [5, 9]], [[1, 3, 
           4, 5, 7], [2, 8], [6, 9]], [[1, 2, 4, 5, 7], [3, 8], [6, 9]], [[1, 
           2, 3, 5, 7], [4, 8], [6, 9]], [[1, 2, 3, 4, 7], [5, 8], [6, 
           9]], [[1, 3, 4, 5, 6], [2, 8], [7, 9]], [[1, 2, 4, 5, 6], [3, 
           8], [7, 9]], [[1, 2, 3, 5, 6], [4, 8], [7, 9]], [[1, 2, 3, 4, 
           6], [5, 8], [7, 9]], [[1, 2, 3, 4, 5], [6, 8], [7, 9]], [[1, 3, 5, 
           6, 7], [2, 4], [8, 9]], [[1, 2, 5, 6, 7], [3, 4], [8, 9]], [[1, 3, 
           4, 6, 7], [2, 5], [8, 9]], [[1, 2, 4, 6, 7], [3, 5], [8, 9]], [[1, 
           2, 3, 6, 7], [4, 5], [8, 9]], [[1, 3, 4, 5, 7], [2, 6], [8, 
           9]], [[1, 2, 4, 5, 7], [3, 6], [8, 9]], [[1, 2, 3, 5, 7], [4, 
           6], [8, 9]], [[1, 2, 3, 4, 7], [5, 6], [8, 9]], [[1, 3, 4, 5, 
           6], [2, 7], [8, 9]], [[1, 2, 4, 5, 6], [3, 7], [8, 9]], [[1, 2, 3, 
           5, 6], [4, 7], [8, 9]], [[1, 2, 3, 4, 6], [5, 7], [8, 9]], [[1, 2, 
           3, 4, 5], [6, 7], [8, 9]]]                                                               
    elif T==[[1, 1, 1, 1], [1, 1, 1, 1], [1]]:

        return [[[1, 4, 6, 8], [2, 5, 7, 9], [3]], [[1, 3, 6, 8], [2, 5, 7, 
           9], [4]], [[1, 2, 6, 8], [3, 5, 7, 9], [4]], [[1, 3, 6, 8], [2, 4, 
           7, 9], [5]], [[1, 2, 6, 8], [3, 4, 7, 9], [5]], [[1, 4, 5, 8], [2, 
           6, 7, 9], [3]], [[1, 3, 5, 8], [2, 6, 7, 9], [4]], [[1, 2, 5, 
           8], [3, 6, 7, 9], [4]], [[1, 3, 4, 8], [2, 6, 7, 9], [5]], [[1, 2, 
           4, 8], [3, 6, 7, 9], [5]], [[1, 2, 3, 8], [4, 6, 7, 9], [5]], [[1, 
           3, 5, 8], [2, 4, 7, 9], [6]], [[1, 2, 5, 8], [3, 4, 7, 
           9], [6]], [[1, 3, 4, 8], [2, 5, 7, 9], [6]], [[1, 2, 4, 8], [3, 5, 
           7, 9], [6]], [[1, 2, 3, 8], [4, 5, 7, 9], [6]], [[1, 3, 5, 8], [2, 
           4, 6, 9], [7]], [[1, 2, 5, 8], [3, 4, 6, 9], [7]], [[1, 3, 4, 
           8], [2, 5, 6, 9], [7]], [[1, 2, 4, 8], [3, 5, 6, 9], [7]], [[1, 2, 
           3, 8], [4, 5, 6, 9], [7]], [[1, 4, 6, 7], [2, 5, 8, 9], [3]], [[1, 
           3, 6, 7], [2, 5, 8, 9], [4]], [[1, 2, 6, 7], [3, 5, 8, 
           9], [4]], [[1, 3, 6, 7], [2, 4, 8, 9], [5]], [[1, 2, 6, 7], [3, 4, 
           8, 9], [5]], [[1, 4, 5, 7], [2, 6, 8, 9], [3]], [[1, 3, 5, 7], [2, 
           6, 8, 9], [4]], [[1, 2, 5, 7], [3, 6, 8, 9], [4]], [[1, 3, 4, 
           7], [2, 6, 8, 9], [5]], [[1, 2, 4, 7], [3, 6, 8, 9], [5]], [[1, 2, 
           3, 7], [4, 6, 8, 9], [5]], [[1, 3, 5, 7], [2, 4, 8, 9], [6]], [[1, 
           2, 5, 7], [3, 4, 8, 9], [6]], [[1, 3, 4, 7], [2, 5, 8, 
           9], [6]], [[1, 2, 4, 7], [3, 5, 8, 9], [6]], [[1, 2, 3, 7], [4, 5, 
           8, 9], [6]], [[1, 4, 5, 6], [2, 7, 8, 9], [3]], [[1, 3, 5, 6], [2, 
           7, 8, 9], [4]], [[1, 2, 5, 6], [3, 7, 8, 9], [4]], [[1, 3, 4, 
           6], [2, 7, 8, 9], [5]], [[1, 2, 4, 6], [3, 7, 8, 9], [5]], [[1, 2, 
           3, 6], [4, 7, 8, 9], [5]], [[1, 3, 4, 5], [2, 7, 8, 9], [6]], [[1, 
           2, 4, 5], [3, 7, 8, 9], [6]], [[1, 2, 3, 5], [4, 7, 8, 
           9], [6]], [[1, 2, 3, 4], [5, 7, 8, 9], [6]], [[1, 3, 5, 6], [2, 4, 
           8, 9], [7]], [[1, 2, 5, 6], [3, 4, 8, 9], [7]], [[1, 3, 4, 6], [2, 
           5, 8, 9], [7]], [[1, 2, 4, 6], [3, 5, 8, 9], [7]], [[1, 2, 3, 
           6], [4, 5, 8, 9], [7]], [[1, 3, 4, 5], [2, 6, 8, 9], [7]], [[1, 2, 
           4, 5], [3, 6, 8, 9], [7]], [[1, 2, 3, 5], [4, 6, 8, 9], [7]], [[1, 
           2, 3, 4], [5, 6, 8, 9], [7]], [[1, 3, 5, 7], [2, 4, 6, 
           9], [8]], [[1, 2, 5, 7], [3, 4, 6, 9], [8]], [[1, 3, 4, 7], [2, 5, 
           6, 9], [8]], [[1, 2, 4, 7], [3, 5, 6, 9], [8]], [[1, 2, 3, 7], [4, 
           5, 6, 9], [8]], [[1, 3, 5, 6], [2, 4, 7, 9], [8]], [[1, 2, 5, 
           6], [3, 4, 7, 9], [8]], [[1, 3, 4, 6], [2, 5, 7, 9], [8]], [[1, 2, 
           4, 6], [3, 5, 7, 9], [8]], [[1, 2, 3, 6], [4, 5, 7, 9], [8]], [[1, 
           3, 4, 5], [2, 6, 7, 9], [8]], [[1, 2, 4, 5], [3, 6, 7, 
           9], [8]], [[1, 2, 3, 5], [4, 6, 7, 9], [8]], [[1, 2, 3, 4], [5, 6, 
           7, 9], [8]], [[1, 3, 5, 7], [2, 4, 6, 8], [9]], [[1, 2, 5, 7], [3, 
           4, 6, 8], [9]], [[1, 3, 4, 7], [2, 5, 6, 8], [9]], [[1, 2, 4, 
           7], [3, 5, 6, 8], [9]], [[1, 2, 3, 7], [4, 5, 6, 8], [9]], [[1, 3, 
           5, 6], [2, 4, 7, 8], [9]], [[1, 2, 5, 6], [3, 4, 7, 8], [9]], [[1, 
           3, 4, 6], [2, 5, 7, 8], [9]], [[1, 2, 4, 6], [3, 5, 7, 
           8], [9]], [[1, 2, 3, 6], [4, 5, 7, 8], [9]], [[1, 3, 4, 5], [2, 6, 
           7, 8], [9]], [[1, 2, 4, 5], [3, 6, 7, 8], [9]], [[1, 2, 3, 5], [4, 
           6, 7, 8], [9]], [[1, 2, 3, 4], [5, 6, 7, 8], [9]]]
                                                                          
    elif T==[[1, 1, 1, 1], [1, 1, 1], [1, 1]]:
        return [[[1, 4, 7, 9], [2, 5, 8], [3, 6]], [[1, 3, 7, 9], [2, 5, 8], [4, 
           6]], [[1, 2, 7, 9], [3, 5, 8], [4, 6]], [[1, 3, 7, 9], [2, 4, 
           8], [5, 6]], [[1, 2, 7, 9], [3, 4, 8], [5, 6]], [[1, 4, 6, 9], [2, 
           5, 8], [3, 7]], [[1, 3, 6, 9], [2, 5, 8], [4, 7]], [[1, 2, 6, 
           9], [3, 5, 8], [4, 7]], [[1, 3, 6, 9], [2, 4, 8], [5, 7]], [[1, 2, 
           6, 9], [3, 4, 8], [5, 7]], [[1, 4, 5, 9], [2, 6, 8], [3, 7]], [[1, 
           3, 5, 9], [2, 6, 8], [4, 7]], [[1, 2, 5, 9], [3, 6, 8], [4, 
           7]], [[1, 3, 4, 9], [2, 6, 8], [5, 7]], [[1, 2, 4, 9], [3, 6, 
           8], [5, 7]], [[1, 2, 3, 9], [4, 6, 8], [5, 7]], [[1, 3, 5, 9], [2, 
           4, 8], [6, 7]], [[1, 2, 5, 9], [3, 4, 8], [6, 7]], [[1, 3, 4, 
           9], [2, 5, 8], [6, 7]], [[1, 2, 4, 9], [3, 5, 8], [6, 7]], [[1, 2, 
           3, 9], [4, 5, 8], [6, 7]], [[1, 4, 6, 9], [2, 5, 7], [3, 8]], [[1, 
           3, 6, 9], [2, 5, 7], [4, 8]], [[1, 2, 6, 9], [3, 5, 7], [4, 
           8]], [[1, 3, 6, 9], [2, 4, 7], [5, 8]], [[1, 2, 6, 9], [3, 4, 
           7], [5, 8]], [[1, 4, 5, 9], [2, 6, 7], [3, 8]], [[1, 3, 5, 9], [2, 
           6, 7], [4, 8]], [[1, 2, 5, 9], [3, 6, 7], [4, 8]], [[1, 3, 4, 
           9], [2, 6, 7], [5, 8]], [[1, 2, 4, 9], [3, 6, 7], [5, 8]], [[1, 2, 
           3, 9], [4, 6, 7], [5, 8]], [[1, 3, 5, 9], [2, 4, 7], [6, 8]], [[1, 
           2, 5, 9], [3, 4, 7], [6, 8]], [[1, 3, 4, 9], [2, 5, 7], [6, 
           8]], [[1, 2, 4, 9], [3, 5, 7], [6, 8]], [[1, 2, 3, 9], [4, 5, 
           7], [6, 8]], [[1, 3, 5, 9], [2, 4, 6], [7, 8]], [[1, 2, 5, 9], [3, 
           4, 6], [7, 8]], [[1, 3, 4, 9], [2, 5, 6], [7, 8]], [[1, 2, 4, 
           9], [3, 5, 6], [7, 8]], [[1, 2, 3, 9], [4, 5, 6], [7, 8]], [[1, 4, 
           7, 8], [2, 5, 9], [3, 6]], [[1, 3, 7, 8], [2, 5, 9], [4, 6]], [[1, 
           2, 7, 8], [3, 5, 9], [4, 6]], [[1, 3, 7, 8], [2, 4, 9], [5, 
           6]], [[1, 2, 7, 8], [3, 4, 9], [5, 6]], [[1, 4, 6, 8], [2, 5, 
           9], [3, 7]], [[1, 3, 6, 8], [2, 5, 9], [4, 7]], [[1, 2, 6, 8], [3, 
           5, 9], [4, 7]], [[1, 3, 6, 8], [2, 4, 9], [5, 7]], [[1, 2, 6, 
           8], [3, 4, 9], [5, 7]], [[1, 4, 5, 8], [2, 6, 9], [3, 7]], [[1, 3, 
           5, 8], [2, 6, 9], [4, 7]], [[1, 2, 5, 8], [3, 6, 9], [4, 7]], [[1, 
           3, 4, 8], [2, 6, 9], [5, 7]], [[1, 2, 4, 8], [3, 6, 9], [5, 
           7]], [[1, 2, 3, 8], [4, 6, 9], [5, 7]], [[1, 3, 5, 8], [2, 4, 
           9], [6, 7]], [[1, 2, 5, 8], [3, 4, 9], [6, 7]], [[1, 3, 4, 8], [2, 
           5, 9], [6, 7]], [[1, 2, 4, 8], [3, 5, 9], [6, 7]], [[1, 2, 3, 
           8], [4, 5, 9], [6, 7]], [[1, 4, 6, 7], [2, 5, 9], [3, 8]], [[1, 3, 
           6, 7], [2, 5, 9], [4, 8]], [[1, 2, 6, 7], [3, 5, 9], [4, 8]], [[1, 
           3, 6, 7], [2, 4, 9], [5, 8]], [[1, 2, 6, 7], [3, 4, 9], [5, 
           8]], [[1, 4, 5, 7], [2, 6, 9], [3, 8]], [[1, 3, 5, 7], [2, 6, 
           9], [4, 8]], [[1, 2, 5, 7], [3, 6, 9], [4, 8]], [[1, 3, 4, 7], [2, 
           6, 9], [5, 8]], [[1, 2, 4, 7], [3, 6, 9], [5, 8]], [[1, 2, 3, 
           7], [4, 6, 9], [5, 8]], [[1, 3, 5, 7], [2, 4, 9], [6, 8]], [[1, 2, 
           5, 7], [3, 4, 9], [6, 8]], [[1, 3, 4, 7], [2, 5, 9], [6, 8]], [[1, 
           2, 4, 7], [3, 5, 9], [6, 8]], [[1, 2, 3, 7], [4, 5, 9], [6, 
           8]], [[1, 4, 5, 6], [2, 7, 9], [3, 8]], [[1, 3, 5, 6], [2, 7, 
           9], [4, 8]], [[1, 2, 5, 6], [3, 7, 9], [4, 8]], [[1, 3, 4, 6], [2, 
           7, 9], [5, 8]], [[1, 2, 4, 6], [3, 7, 9], [5, 8]], [[1, 2, 3, 
           6], [4, 7, 9], [5, 8]], [[1, 3, 4, 5], [2, 7, 9], [6, 8]], [[1, 2, 
           4, 5], [3, 7, 9], [6, 8]], [[1, 2, 3, 5], [4, 7, 9], [6, 8]], [[1, 
           2, 3, 4], [5, 7, 9], [6, 8]], [[1, 3, 5, 6], [2, 4, 9], [7, 
           8]], [[1, 2, 5, 6], [3, 4, 9], [7, 8]], [[1, 3, 4, 6], [2, 5, 
           9], [7, 8]], [[1, 2, 4, 6], [3, 5, 9], [7, 8]], [[1, 2, 3, 6], [4, 
           5, 9], [7, 8]], [[1, 3, 4, 5], [2, 6, 9], [7, 8]], [[1, 2, 4, 
           5], [3, 6, 9], [7, 8]], [[1, 2, 3, 5], [4, 6, 9], [7, 8]], [[1, 2, 
           3, 4], [5, 6, 9], [7, 8]], [[1, 4, 6, 8], [2, 5, 7], [3, 9]], [[1, 
           3, 6, 8], [2, 5, 7], [4, 9]], [[1, 2, 6, 8], [3, 5, 7], [4, 
           9]], [[1, 3, 6, 8], [2, 4, 7], [5, 9]], [[1, 2, 6, 8], [3, 4, 
           7], [5, 9]], [[1, 4, 5, 8], [2, 6, 7], [3, 9]], [[1, 3, 5, 8], [2, 
           6, 7], [4, 9]], [[1, 2, 5, 8], [3, 6, 7], [4, 9]], [[1, 3, 4, 
           8], [2, 6, 7], [5, 9]], [[1, 2, 4, 8], [3, 6, 7], [5, 9]], [[1, 2, 
           3, 8], [4, 6, 7], [5, 9]], [[1, 3, 5, 8], [2, 4, 7], [6, 9]], [[1, 
           2, 5, 8], [3, 4, 7], [6, 9]], [[1, 3, 4, 8], [2, 5, 7], [6, 
           9]], [[1, 2, 4, 8], [3, 5, 7], [6, 9]], [[1, 2, 3, 8], [4, 5, 
           7], [6, 9]], [[1, 3, 5, 8], [2, 4, 6], [7, 9]], [[1, 2, 5, 8], [3, 
           4, 6], [7, 9]], [[1, 3, 4, 8], [2, 5, 6], [7, 9]], [[1, 2, 4, 
           8], [3, 5, 6], [7, 9]], [[1, 2, 3, 8], [4, 5, 6], [7, 9]], [[1, 4, 
           6, 7], [2, 5, 8], [3, 9]], [[1, 3, 6, 7], [2, 5, 8], [4, 9]], [[1, 
           2, 6, 7], [3, 5, 8], [4, 9]], [[1, 3, 6, 7], [2, 4, 8], [5, 
           9]], [[1, 2, 6, 7], [3, 4, 8], [5, 9]], [[1, 4, 5, 7], [2, 6, 
           8], [3, 9]], [[1, 3, 5, 7], [2, 6, 8], [4, 9]], [[1, 2, 5, 7], [3, 
           6, 8], [4, 9]], [[1, 3, 4, 7], [2, 6, 8], [5, 9]], [[1, 2, 4, 
           7], [3, 6, 8], [5, 9]], [[1, 2, 3, 7], [4, 6, 8], [5, 9]], [[1, 3, 
           5, 7], [2, 4, 8], [6, 9]], [[1, 2, 5, 7], [3, 4, 8], [6, 9]], [[1, 
           3, 4, 7], [2, 5, 8], [6, 9]], [[1, 2, 4, 7], [3, 5, 8], [6, 
           9]], [[1, 2, 3, 7], [4, 5, 8], [6, 9]], [[1, 4, 5, 6], [2, 7, 
           8], [3, 9]], [[1, 3, 5, 6], [2, 7, 8], [4, 9]], [[1, 2, 5, 6], [3, 
           7, 8], [4, 9]], [[1, 3, 4, 6], [2, 7, 8], [5, 9]], [[1, 2, 4, 
           6], [3, 7, 8], [5, 9]], [[1, 2, 3, 6], [4, 7, 8], [5, 9]], [[1, 3, 
           4, 5], [2, 7, 8], [6, 9]], [[1, 2, 4, 5], [3, 7, 8], [6, 9]], [[1, 
           2, 3, 5], [4, 7, 8], [6, 9]], [[1, 2, 3, 4], [5, 7, 8], [6, 
           9]], [[1, 3, 5, 6], [2, 4, 8], [7, 9]], [[1, 2, 5, 6], [3, 4, 
           8], [7, 9]], [[1, 3, 4, 6], [2, 5, 8], [7, 9]], [[1, 2, 4, 6], [3, 
           5, 8], [7, 9]], [[1, 2, 3, 6], [4, 5, 8], [7, 9]], [[1, 3, 4, 
           5], [2, 6, 8], [7, 9]], [[1, 2, 4, 5], [3, 6, 8], [7, 9]], [[1, 2, 
           3, 5], [4, 6, 8], [7, 9]], [[1, 2, 3, 4], [5, 6, 8], [7, 9]], [[1, 
           3, 5, 7], [2, 4, 6], [8, 9]], [[1, 2, 5, 7], [3, 4, 6], [8, 
           9]], [[1, 3, 4, 7], [2, 5, 6], [8, 9]], [[1, 2, 4, 7], [3, 5, 
           6], [8, 9]], [[1, 2, 3, 7], [4, 5, 6], [8, 9]], [[1, 3, 5, 6], [2, 
           4, 7], [8, 9]], [[1, 2, 5, 6], [3, 4, 7], [8, 9]], [[1, 3, 4, 
           6], [2, 5, 7], [8, 9]], [[1, 2, 4, 6], [3, 5, 7], [8, 9]], [[1, 2, 
           3, 6], [4, 5, 7], [8, 9]], [[1, 3, 4, 5], [2, 6, 7], [8, 9]], [[1, 
           2, 4, 5], [3, 6, 7], [8, 9]], [[1, 2, 3, 5], [4, 6, 7], [8, 
           9]], [[1, 2, 3, 4], [5, 6, 7], [8, 9]]]                                                                                                                                          
    elif T==[[1, 1, 1], [1, 1, 1], [1, 1, 1]]:

        return [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], [[1, 3, 7], [2, 5, 8], [4, 6, 
           9]], [[1, 2, 7], [3, 5, 8], [4, 6, 9]], [[1, 3, 7], [2, 4, 8], [5, 
           6, 9]], [[1, 2, 7], [3, 4, 8], [5, 6, 9]], [[1, 4, 6], [2, 5, 
           8], [3, 7, 9]], [[1, 3, 6], [2, 5, 8], [4, 7, 9]], [[1, 2, 6], [3, 
           5, 8], [4, 7, 9]], [[1, 3, 6], [2, 4, 8], [5, 7, 9]], [[1, 2, 
           6], [3, 4, 8], [5, 7, 9]], [[1, 4, 5], [2, 6, 8], [3, 7, 9]], [[1, 
           3, 5], [2, 6, 8], [4, 7, 9]], [[1, 2, 5], [3, 6, 8], [4, 7, 
           9]], [[1, 3, 4], [2, 6, 8], [5, 7, 9]], [[1, 2, 4], [3, 6, 8], [5, 
           7, 9]], [[1, 2, 3], [4, 6, 8], [5, 7, 9]], [[1, 3, 5], [2, 4, 
           8], [6, 7, 9]], [[1, 2, 5], [3, 4, 8], [6, 7, 9]], [[1, 3, 4], [2, 
           5, 8], [6, 7, 9]], [[1, 2, 4], [3, 5, 8], [6, 7, 9]], [[1, 2, 
           3], [4, 5, 8], [6, 7, 9]], [[1, 4, 6], [2, 5, 7], [3, 8, 9]], [[1, 
           3, 6], [2, 5, 7], [4, 8, 9]], [[1, 2, 6], [3, 5, 7], [4, 8, 
           9]], [[1, 3, 6], [2, 4, 7], [5, 8, 9]], [[1, 2, 6], [3, 4, 7], [5, 
           8, 9]], [[1, 4, 5], [2, 6, 7], [3, 8, 9]], [[1, 3, 5], [2, 6, 
           7], [4, 8, 9]], [[1, 2, 5], [3, 6, 7], [4, 8, 9]], [[1, 3, 4], [2, 
           6, 7], [5, 8, 9]], [[1, 2, 4], [3, 6, 7], [5, 8, 9]], [[1, 2, 
           3], [4, 6, 7], [5, 8, 9]], [[1, 3, 5], [2, 4, 7], [6, 8, 9]], [[1, 
           2, 5], [3, 4, 7], [6, 8, 9]], [[1, 3, 4], [2, 5, 7], [6, 8, 
           9]], [[1, 2, 4], [3, 5, 7], [6, 8, 9]], [[1, 2, 3], [4, 5, 7], [6, 
           8, 9]], [[1, 3, 5], [2, 4, 6], [7, 8, 9]], [[1, 2, 5], [3, 4, 
           6], [7, 8, 9]], [[1, 3, 4], [2, 5, 6], [7, 8, 9]], [[1, 2, 4], [3, 
           5, 6], [7, 8, 9]], [[1, 2, 3], [4, 5, 6], [7, 8, 9]]]                                                             
    return result_int                                                                                              

def pos_in_SYT(S,k):
    
    return next(((i, element.index(k))
      for i, element in enumerate(S)
      if k in element),
      None)





#Computation of the dimension of a YT------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------

def dimension_YT(YT):
    
    '''
    Parameters:
        - YT is a 2 D array, with shape(3,3)
    Output:
    - returns the dimension of the YT, with YT being a 2D-array'''
    
    den=1 
    
    #l1,l2,l3 are the first,second,third line of YT with the zeros deleted
    
    l1=YT[0][YT[0]==1] 
    l2=YT[1][YT[1]==1]
    l3=YT[2][YT[2]==1]

    #------------------------------computation of the denominato

    num=( math.factorial(2+l1.shape[0])/(2) )*( math.factorial(1+l2.shape[0]) )*( math.factorial(l3.shape[0]) )
    
    
    #------------------------------computation of the denominator
    
    for j in range(0,3): 
        
        if j!=2: 
        
            for i in range(1,YT.shape[1]+1): 
               
                if i!=YT.shape[1]:
                    l=YT[j,i:]
                    #print(l)
                    c=YT[j+1:,i-1]
                    #print(c)
                    den=den*(c[c==1].shape[0]+l[l==1].shape[0]+1)
                    #print(den)

                else:
                    #print("rentre")
                    c=YT[j+1:,YT.shape[1]-1]
                    #print(c)
                    den=den*((c[c==1]).shape[0]+1)
                    #print(den)


        else:
        
            for i in range(1,YT.shape[1]+1):
               
                if i!=YT.shape[1]:
                    l=YT[j,i:]
                   
                    den=den*(l[l==1].shape[0]+1)
                    
    
    return num/den





#------------------------------------------------------------------------------------------------------------------
#tests pour la decomposition en irrep
n=number_of_sites
print(" ")
print(" ")
print("----------------------------------------------------------------------")
print(" tests pour la decomposition en irreps :") 
print(" ")
print("La decomposition en irrep pour :"+str(n)+" sites est :")
dec_aslistoflists=decomposition_intoirrep(n)[0]
mult=decomposition_intoirrep(n)[1]
dec=cp.deepcopy(dec_aslistoflists)
print(dec_aslistoflists)
print(" ")
print("avec multiplicites respectives :")
print(mult)
print("")
print("")
x=0
dimensions=[]
#on affiche la decomposition en irrep, sous forme de matrices, avec les dimensions
for i in dec: #on converti les listes de listes = les YT, en array, en completant de zeros
    x+=1
    for j in i:
        while len(j)<n:
            j.append(0)
        j=np.array(j)   
    i=np.array(i)
    
    plt.spy(i,aspect='auto')
    plt.show() 
    #mlm=len(standart_YT(dec_aslistoflists[x-1]))
    print(str(mult[x-1])+"*"+str(dimension_YT(i)))
    dimensions.append(dimension_YT(i))





#Computation of the matrices mu(P_{k,k+1})-------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------
    
def mu_s(s,k,alpha):  

    '''
    Parameters:
    
    - s = index of the row from mu^{\alpha}(P_{k,k+1})
    - k = the considered site = integer
    - alpha = the irrep = list of lists
    
    Output:
        
    - returns the row s of the matrix mu^{alpha}(P_{k,k+1}) = list 
    '''         
            
    syt=standart_YT(alpha)
    
    if k>sum_element(alpha)-1:
        
        print("k and k+1 are not in the SYT ! ")
    
        return None
    
    else:
        
        #print(" The value of k = "+str(k)+" corresponds to one box in each SYT ! ")
        
        f_alpha=len(syt) #number of SYT associated to alpha=f^{alpha}=multiplicity of alpha
        Ss=syt[s] #SYT number s associated to the irrep alpha
        #print("we want to compute the row number :"+str(s)+", corresponding to the SYT Ss=")
        #print(Ss)
        #print(", computed from the irrep alpha=")
        #print(alpha)
        #print("with multiplicity = "+str(f_alpha))
        L=[0]*f_alpha #the matrix mu(P_{k,k+1}) is of length f^{alpha}
        
        posk=pos_in_SYT(Ss, k)
        bo=False
        for i in range(0,posk[0]):
            for j in range(0,len(Ss[i])):
                if Ss[i][j]==k+1:
                    bo=True
                    posk1=(i,j)
        if bo ==False:
            posk1=pos_in_SYT(Ss,k+1)
        #print("the position of k in Ss is given by :")
        #print(posk)
        #print("and of k+1 is given by :")
        #print(posk1)
        
        if posk[0]==posk1[0]: #k and k+1 are on the same row
            
            #print("k  and k+1 are on the same row ")
            
            L[s]=1

        elif posk[1]==posk1[1]:
            
            #print("k and k+1 are on the same column")
            
            L[s]=-1
            
        else:
            
            #print(" k and k+1 are neither on the same row, neither on the same column")
            
            correspondance=False
            
            for r in range(0,f_alpha):
                
                if relation1(Ss,syt[r],k):
                    
                    L[r]=math.sqrt(1-rho(Ss,k,posk,posk1)*rho(Ss,k,posk,posk1))
                    correspondance=True
            
            if correspondance:
                
                L[s]=-rho(Ss,k,posk,posk1)
        #print(" the row number "+str(s)+" of mu is thus :")        
        return L

def mu(k,alpha):
    
    '''
    Parameters :
        - k, the site = integer
        - alpha, the irrep = list of lists
        
    Outpute : 
        -return the sparse matrix mu^{alpha}(P_{k,k+1}) 
    '''
    rows=np.array([])
    cols=np.array([])
    data=np.array([])

    malpha=mult[dec_aslistoflists.index(alpha)]
    
    for i in range(0,malpha):
        
        for j in range(0,malpha):
            
            rows=np.append(rows,i)
            cols=np.append(cols,j)
            data=np.append(data, (mu_s(i, k,alpha)[j]) )

    return scipy.sparse.csr_matrix((data,(rows,cols)),shape=(malpha,malpha))
   
    

def relation1(Sr,Ss,k):
    
    '''
    Parameters:
    
    - Sr = a SYT = list of lists
    - Ss = a SYT = list of lists
    - posk = (row index of k, column index of k) in Sr
    - posk1 = (row index of k+1, column index of k+1) in Sr
    
    Ouput:
        
    - return True if Ss is equal to Sr but with box k and k+1 exchanged, false if not.
    
    '''
    copy_Sr=cp.deepcopy(Sr)
    
    posk_in_Sr=pos_in_SYT(Sr, k)
    
    bo=False
    for i in range(0,posk_in_Sr[0]):
        for j in range(0,len(Sr[i])):
            if Sr[i][j]==k+1:
                bo=True
                posk1_in_Sr=(i,j)
    if bo ==False:
        posk1_in_Sr=pos_in_SYT(Sr,k+1)
    
    #posk1_in_Sr=pos_in_SYT(Sr,k+1)
    
    
    copy_Sr[posk_in_Sr[0]][posk_in_Sr[1]]=k+1
    copy_Sr[posk1_in_Sr[0]][posk1_in_Sr[1]]=k
    
    if copy_Sr==Ss:
        
        return True
        
    else:
        
        return False
 
    

    
 
#------------------------------------------------------------------------------------------------------------------
#tests for relation1(Sr,Ss,k,posk,posk1)
# print(" ")
# print(" ")
# print("----------------------------------------------------------------------")
# alpha=[[1,1],[1],[1]]
# k=2
# print("here are the SYT tableaux corresponding to alpha=")
# print(alpha)
# print(":")
# print(standart_YT(alpha))
# print(" ")
# for i in standart_YT(alpha):
#     for j in standart_YT(alpha):
#         if standart_YT(alpha).index(i)<standart_YT(alpha).index(j):
#             if relation1(i,j,k)==True:
#                 print("les tableaux :")
#                 print(i)
#                 print("et")
#                 print(j)
#                 print("sont en correspondance")
#                 print(" ")
#             elif relation1(i,j,k)==False:
#                 print("les tableaux :")
#                 print(i)
#                 print("et")
#                 print(j)
#                 print("ne sont pas en correspondance")
#                 print(" ")



def rho(Sr,k,posk,posk1):
    '''Parameters : 
        - posk,posk1 : (row index, column index) of k,k+1 in Sr = list of length 2
        - Sr : a SYT = list of lists that contains at most 3 rows
        - k : a number in one of the box = an integer between 1 and total nb 
              boxes, such that k and k+1 are not in the same row and not in
              the same column
             
       Output :
           
        - return the inverse axial distance rho from k to k+1 in Sr, defined
        in the paper of P.Nataf and F.Mila'''
        
    if posk[0]==posk1[0] or posk[1]==posk1[1]:  # if k and k+1 are on the same rwo or line in Sr
        
        return("same c/l")
    


    else:   #if k and k+1 are not on the same row and not on the column
        
        if posk1[0]>posk[0]: #if k+1 is stricly below k in Sr 
            
            nb_downarrows=posk1[0]-posk[0] #number of downwards steps
            nb_leftarrows=posk[1]-posk1[1] #number of steps to the left
            return 1 / ( nb_downarrows + nb_leftarrows ) #return the inverse of the axial distance from k to k+1
        
        if posk1[0]<posk[0]: #if k+1 is stricly above k in Sr
            
            nb_uparrows=posk[0]-posk1[0] #number of upwards steps
            nb_rightarrows=posk1[1]-posk[1] #number of steps to the right
           
            return - 1 / ( nb_uparrows + nb_rightarrows )
          
 
      
#print(mu(1,[[1,1],[1],[]]))

# rows=np.array([])
# cols=np.array([])
# data=np.array([])

# for i in range(0,2):
#     print(i)
#     for j in range(0,2):
#         print(j)
#         rows=np.append(rows,i)
#         cols=np.append(cols,j)
#         print(rows)
#         print(cols)
#         data=np.append(data, (mu_s(i, 1, [[1,1],[1],[]])[j]) )

# print(rows)
# print(cols)
# print(data)
# scipy.sparse.csr_matrix((data,(rows,cols)),shape=(2,2)).toarray()


#-----------------------------------------------------------------------------------------------------------------
#tests for rho(Sr,k,posk,posk1)
# print(" ")
# print(" ")
# print("----------------------------------------------------------------------")
# print("tests for rho(Sr,k,posk,posk1) : ")
# print(" ")
# k=4
# for i in standart_YT([[1,1,1],[1,1],[1]]):
#     print("")
#     print("For the SYT :")
#     print(i)
#     print("The value of rho for k= "+str(k)+" is :" )
#     print(rho(i,k,pos_in_SYT(i, k),pos_in_SYT(i, k+1)))

# #-----------------------------------------------------------------------------------------------------------------
# #tests for the function mu_s()
# print(" ")
# print(" ")
# print("----------------------------------------------------------------------")
# print("tests for mu_s()")
# print(mu_s(0,1, [[1,1],[1,1],[]])) 


#test for the function mu()
# print(" ")
# print(" ")
# print("----------------------------------------------------------------------")
# print("tests for mu()")
# alpha=[[1,1],[1,1],[]]
# print(standart_YT(alpha))
# print(mu(2,alpha))
# print(mu(3,alpha))

def truncate(number, digits) -> float:
    # Improve accuracy with floating point operations, to avoid truncate(16.4, 2) = 16.39 or truncate(-1.13, 2) = -1.12
    nbDecimals = len(str(number).split('.')[1]) 
    if nbDecimals <= digits:
        return number
    stepper = 10.0 ** digits
    return math.trunc(stepper * number) / stepper

def ham_chain_in_alpha(alpha):
    
    '''
    Parameters:
    - the irrep alpha : list of lists that belongs to the decomposition into irrep called dec_aslistoflists
    and alpha msut corresponds to the given (in the code) number of sites !
    Output:
    - return the spectrum of the hamiltonian in the sector V^{\alpha} = list of lists where each
     sublist is of dimension 2, where the first value is the eigenvalue and the second the dimension of
     the irrep 
    '''
    
    index=dec_aslistoflists.index(alpha) #position of alpha in the list of irrep
    
    #malpha=len(standart_YT(alpha)) #multiplicity of the irrep alpha = f^{alpha}
    malpha=mult[index]
    
    #result=np.zeros((malpha,malpha))
    result=scipy.sparse.csr_matrix((malpha,malpha))

    
    for i in range(0,number_of_sites-1):

        result = result + mu(i+1,alpha).multiply(alphaij(i,i+1))                                       

    decomp_bt=decomposition_permij(0,number_of_sites-1)

    #bt=np.eye((malpha))
    bt=scipy.sparse.identity(malpha)
    
    for j in decomp_bt:
    
          bt=bt.dot(mu(j[0]+1,alpha))
    
    result=result+bt.multiply(alphaij(0,number_of_sites-1))
    
    C=0
    
    for k in range(0,number_of_sites-1):
        
        C=C+alphaij(k,k+1)/3
    
    C=C+alphaij(0,number_of_sites-1)/3
    
    #s=scipy.sparse.linalg.eigs(result,1,return_eigenvectors=False)
    if malpha>2:
        s=sla.eigs(result,k=1,which='SR',return_eigenvectors=False)
    else:
        s=la.eigh(result.toarray(),eigvals_only=True)
    
    d_alpha=dimensions[index]
    
    poi=[truncate((i-C).real,3) for i in s]

    return poi





#-----------------------------------------------------------------------------------------------------------------
#tests for the function ham_chain_in_alpha()
print(" ")
print(" ")
print("----------------------------------------------------------------------")
print("tests for ham_chain_in_alphai()")

re=[]
for i in dec_aslistoflists:
    
    re.append(min(ham_chain_in_alpha(i)))
    

print("ground state is=")
print(min(re))
    
print(datetime.now() - start)           
    